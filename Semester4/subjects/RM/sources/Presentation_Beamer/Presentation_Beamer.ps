%!PS-Adobe-2.0
%%Creator: dvips(k) 2020.1 Copyright 2020 Radical Eye Software
%%Title: G:/Atif/NUCES-FAST/Teaching/Research Methodology Course/Presentation_Beamer/Presentation_Beamer.dvi
%%CreationDate: Wed Mar 17 13:34:39 2021
%%Pages: 7
%%PageOrder: Ascend
%%BoundingBox: 0 0 454 256
%%DocumentFonts: LMSans12-Regular LMSans10-Regular LMSans8-Regular
%%+ LMMathExtension10-Regular LMMathSymbols10-Regular LMSans10-Oblique
%%+ LMSans10-Bold
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: "C:\Program Files\MiKTeX\miktex\bin\x64\dvips.exe" -P
%+ pdf
%+ "G:/Atif/NUCES-FAST/Teaching/Research Methodology Course/Presentation_Beamer/Presentation_Beamer.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2021.03.17:1834
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 4 2020-06-09 08:32:19Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/addCoors { 
  3 -1 roll 		% xA xB yB yA
  add			% xA xB yB+yA
  3 1 roll 		% yB+yA xA xB
  add			% yB+yA xA+xB
  exch                  % xA+xB yA+yB
} def
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (original)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul         %	\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  dup % run loop two times: lines and labels
  { i dx mul dup xGridOffset add y0 moveto % draw the lines
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  /i x1 def 
  GridDX div ceiling cvi 
  { i dx mul GridDX mul dup xGridOffset add y0 moveto % plot the labels
    b 0 gt 
      { gsave c i GridDX mul a cvs dup stringwidth pop /z2 ED  
        w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse exch GridDX div z2 2 div sub exch 
        rmoveto show grestore } if 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  dup % run loop two times: lines and labels
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  /i y1 def 
  GridDY div ceiling cvi
  { newpath i dy mul GridDY mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i GridDY mul a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse GridDY div b 2 div sub
      rmoveto show grestore } if 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 4 2020-06-09 08:32:19Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 4 2020-06-09 08:32:19Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2018/12/16 $
% Version         : 0.65 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-circ.pro 0 0
%!
% $Id: pst-circ.pro 646 2017-11-16 09:46:12Z herbert $
%
% PostScript prologue for pst-circ.tex.
% version 0.01 2007-03-23 (hv)
% For distribution, see pstricks.tex.
%
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def 
/ZeroEq { abs 1E-10 lt } bind def /EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub } bind def
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
  { pop pop pop 0 0 }
  {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
  }
  ifelse  } bind def
% END pst-circ.pro

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2020 The LaTeX3 Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
true setglobal
/pdf.globaldict 4 dict def
false setglobal

/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict~
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def product (Ghostscript)
search {pop pop pop revision 927 gt}{pop false} ifelse{/BorderArrayPatch{}
def}{/BorderArrayPatch{[exch{dup dup type/integertype eq exch type/realtype
eq or{BPToDvips}if}forall]}def} ifelse /HyperBorder {1 PDFToDvips}
def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx pdf@lly pdf@urx
pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly exch def dup
DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx exch
def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto pgffill 16.0002 0.49998 moveto 18.00021 2.00002 lineto
16.0002 3.50003 lineto pgffill  grestore} bind def

 /pgf2{gsave exec 2.39105 3.38733 8.26909 0.79701 pgfe pgfstr  grestore}
bind def

 /pgf3{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill  grestore} bind def

 /pgf4{gsave exec 2.39105 3.38733 6.97394 0.0 pgfe 7.80008 2.40001
moveto 7.80008 3.20003 lineto 11.20012 3.20003 lineto 11.20012 0.8
lineto 10.4001 0.8 lineto 8.6001 3.20003 moveto 8.6001 4.00005 lineto
12.00015 4.00005 lineto 12.00015 1.60002 lineto 11.20012 1.60002 lineto
pgfstr  grestore} bind def

 /pgf5{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 4.00005 moveto 11.00012
4.00005 lineto 9.00009 2.00002 moveto 12.00015 2.00002 lineto 8.00009
1.0 moveto 11.00012 1.0 lineto 9.00009 0.0 moveto 12.00015 0.0 lineto
pgfstr  grestore} bind def

 /pgf6{gsave exec 0.59776 pgfw 9.00009 3.00003 moveto 12.00015 3.00003
lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 1.0 moveto 11.00012 1.0
lineto 9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind
def

 /pgf8{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto pgfstr  grestore} bind def

 /pgf9{gsave exec 10.0001 -0.49998 moveto 10.0001 4.50003 lineto pgfstr
 grestore} bind def

 /pgf10{gsave exec 0.59776 pgfw 4.00005 4.00005 moveto 7.00008 4.00005
lineto 5.00005 3.00003 moveto 8.00009 3.00003 lineto 5.00005 2.00002
moveto 8.00009 2.00002 lineto 3.00003 1.0 moveto 7.00008 1.0 lineto
5.00005 0.0 moveto 8.00009 0.0 lineto 12.00015 3.00003 moveto 15.00018
3.00003 lineto 13.00015 2.00002 moveto 16.0002 2.00002 lineto 13.00015
1.0 moveto 16.0002 1.0 lineto pgfstr  grestore} bind def

 /pgf11{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto 8.00009 1.0 moveto 11.00012 1.0 lineto
9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind def

 /pgf12{gsave exec 0.59776 pgfw 10.4001 1.60002 moveto 12.00015 0.0
lineto pgfstr 0.3985 pgfw 10.66016 2.49069 moveto 10.66016 3.15096
10.1249 3.68622 9.46463 3.68622 curveto 8.80435 3.68622 8.26909 3.15096
8.26909 2.49069 curveto 8.26909 1.83041 8.80435 1.29515 9.46463 1.29515
curveto 10.1249 1.29515 10.66016 1.83041 10.66016 2.49069 curveto closepath
9.46463 2.49069 moveto pgfstr 1 setlinecap 4.00005 0.0 moveto 5.08101
0.0 6.00006 0.9 6.00006 2.00002 curveto 6.00006 3.10002 5.10005 4.00005
4.00005 4.00005 curveto 2.90001 4.00005 2.00002 3.10002 2.00002 2.00002
curveto 3.20003 2.60002 moveto 2.00002 1.60002 lineto 0.8 2.60002 lineto
16.0002 0.0 moveto 14.90016 0.0 14.00017 0.9 14.00017 2.00002 curveto
14.00017 3.10002 14.90016 4.00005 16.0002 4.00005 curveto 17.1002 4.00005
18.00021 3.10002 18.00021 2.00002 curveto 19.20023 2.60002 moveto 18.00021
1.60002 lineto 16.8002 2.60002 lineto pgfstr  grestore} bind def

 /pgf13{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto pgffill  grestore} bind def

 /pgf14{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto 3.50003 0.49998 moveto 5.50005 2.00002 lineto 3.50003 3.50003
lineto pgffill  grestore} bind def

 /pgf15{gsave exec 3.50003 0.49998 moveto 1.5 2.00002 lineto 3.50003
3.50003 lineto pgffill  grestore} bind def
 
@fedspecial end
%%BeginFont: LMSans10-Bold
%!PS-AdobeFont-1.0: LMSans10-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans10-Bold known{/LMSans10-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans10-Bold)readonly def
/FamilyName(LMSans10)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 83 def
end readonly def
/FontName /LMSans10-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-460 -297 1761 1134}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFA25B3D2E21970B61BEF6BD441C0
853BA8F00600E933C80C0916170925A5E999AE3F4523441CBE8209ED95298D28
7897FD39E60633B3341F7B1EE39A74B7CFCA379A6C2390E7C26A4B9C8C556F25
96A90868B428CDFF58080D414AFBA9B90E752A5C7F4EEF6EAED9684DCA7DB0CC
268AB1DF914EEFDF740F44F538F1E841659F02898565FE3B1F13BC87C5713FE4
FB373864385E506D1C0BB65A3CB8E10A78C20E5BE320989BC3E8C8E8E399FC24
E0BD4271E70E8D7A8F7683A4756AA988C5E78DEE26995F197F2360620656FEEA
739826F54E14481B446F1D7F68111FFA8C859137AB1F8E90583B98BFAF5C6329
59CCC441D095D44570B010FEFDC0DAA465ADDF3CBAB31B8A5E7672C9EEAEA7B7
A345AFB8889D3C53E0F9619B8F0C11FCFA80839B0574D91CE6AD50613E12BAA0
115864303556F3EBF5B786035121016A72100BD90BB46818BE2E8AA15252FA00
9F20B1F01EC0EC35CBF7D6C9684AF91F00880B4F0721698DD568E1B3D09641C0
58E5856E324DB2E378120A56ED141762775C5AB88AE8BB5B6B18158A7A9202E8
651774A479D4308E7F29052733CD2724314AF8C61999D544071407B7774A5610
C7A8F6EFB5792C23498F7D5347CABBA2DA469A957BF2BF33E8E3045016270416
4B71642412D880A7601B66C002B4EEA76041F2746847EC01F5EB5744F1EA82F4
163BE681F7F568158C214BBB58CF2BED8BA9B4030D081D755D41B0F8DE4AD0E1
F33A1CE6E38EBEE8CEC6203C2474727309D75E85A83DD36CA1A05A37C9D1FAF7
E1AD48F23A222889F92F15AE9C33A8B3E343774FA496C5BFD6D9C1328E16F748
4D6390CDDA8EA19D086DC2E49DAFC1535299AF0F42A16E89B2D395B183098334
286F4678662DDD87FE71DAC85B1BEA9546CDC788FE623C0EC28B6F1208F01B4C
5956B9402DCD2BA235EA01291DE436B80388FE6B31D225383E1054FDC6AF7600
608EF8DD116B8443675F86A09522E784197B8AF0E94FB9D58FC013FF57EB4042
4D063B0E4937FBE76BC32607B6794509B9C23E8623CFB08F84F516B8B7243884
9F220A096D9B2FE99391338C51207B016D5C9DF340A4567FE859EBDFE766A426
119754DAEB4C88C6760614B3A6E9C1B8C2EE1671ED68A714D9689C94CA612BAF
4375C33F9F42FF4C40D58F53AAAF0618554EEF9AFB0D71590441F8DBDBC8472C
4AF837EA7C079EC8C6A5E352C6081C7499C62B1B92480E59630546403C4312EA
23A04F6D251C3D36F1FCA9535237EA8976F522C889AA3F48827DD9280D36D698
7351D2CC7FA44044CF1E14A026561FC62438E51FE646942C90D9FC0115D85BD7
B8DDE271A0D13042DBFDC852DF4A9BCEB4DE7DF3FB85FBA15A1D1070FEA87AD6
626A01C282FEB8B53E2972147D9EBD179E3D9F1132DCED6A289C01AB88876D62
6C0DDF493F875241C7DC771548F2DA3B490834E7B4CECD9293A5DD581A348865
A82A1D003242430EB6FF1DBE8C3D96F2BAFCE5AB64FFE70979C4696B5B05C07D
62E428A3895B80C76D6096D380D8D49C8005730B909724BDD52F4D4B9AA423A1
886FDADA6E09DA69158D99287EBE0D2FBCD56A0968C2FEEA9583AC25DC5807A0
577DA629D93C114B8A39D9B043D922DD870F06852257AA441D84DB6C38B16360
A1E8B82FFEAEBA6EDEC5FED81176BA98DEAE25439266F3EF69C2CE9BE1438354
2B9F6500CD2F694B8553CD9E2B63F945504D950C13B31CB7B479C7C0B3B76491
EFB210B2AD7503D23492E7E980B2C43191377E831E4FD8D7385C115E229FFA8A
794F67112ADA508C46AFBF0AA67F5ED46485047C59B8A6F45B308F245769B7ED
30FCFA10230AD6C9E809341BF5E55F0DD42892ED6171B0E25FC7EA594E01E0E7
CEE1D3F7859AF3403565B4A26C6C28C08567BF5860D0930D7F5A488B4CBF91F7
B8E3AC3C742EB2F38C4CACFF62DA86A56827DD7392D7A101E273541B8FFD8A9F
88AF4462169923CEB18025FF4554899EF60A69BA10A8E424CF20F69219562767
BA09C44B8F1E68BEBF387FC14964264D7C2CE47E76813245D62FE866AC5DEC8F
F6C3F1161D0B6036E7F654E1FC0D9A9A3FBA49EAA38A1C74DD996474504545DD
2C1B775E4CAEAC1DA45C79204556E4E912CFFD9238607DA31A589BA7AFC5418E
3C7DACDE838EF96D043E0EEC1B9D820CF93F5FC0BA15056C2A7F0E8784846A92
9A2ECC9CD151557CD0E21220F1E6543DB5D8D094EBD746F00D4870ED44C42451
97D65A0A2DEF5563A9EBEC3B5A1BDE88057173C0341AC746103DC2D1F22DB076
A5306D7BD8FA8C8E0B281738BBAD22C404896C6490EAFC75CBF6CADA6A6B7B48
82771128C675DEB746189B1E316EB3ACCF5F83729FC7ACBCF38CC4A173A9AD53
A10D1FE691EEBC3E6D89F9E2977F6219FB3257EF6385D78DD6ED27DF905A4315
CD6BCBF8E6854D2A19F2002CF3AF40155DD8484ED261FFA8DD0BED83D99CD39B
E14C09475F81CDC1768F05208127F1FC35DB9CD34EBC684818AB259FF9A476C4
288FBC0046ABE6DEE542E1F77DFBD40A3D1F6A6A662F091CFB2CB3BC136D0AAA
7AF6559396A7902E2D20D6BDE27B65F9176558D8B65362F61FD87D9E102ED4ED
053A1AD9C8B08F37C8247738575EBBA5520522335CA4F819DEF0C6103AAA9069
0F834C207BCB4963CC061B079BA8C8459393D8766BF4B26E479DA4F794B7DA25
2B4BABEF2C617F5933E0247210E75071D3AE374A72FB1B4098228FB6D6B41F8F
E51016A419BEA26EB30141D2358C0C3F47AFF734D51390E769C6DA17C9B3B072
3061CD74EC688B915AB6689904D5700312DD59CC296BD8D69AE3E4FA2CD789AB
E07054E62A4658524B0071B5582DB34872C321F5D6A82C3B0D1D8A9127F8B594
F29CCFDAEA3CA1276BFC8969DA9E2BA373E2FF57B1122DB4B1B36EFD3546F5E3
8D81C97A59F4864B176AE297116D9396DCD91341308ED6D06DDD804D0E5BAB0F
EBB77BC95EDED08DB8941E040945838796FEDE5D81709D1B3AC99444E7C55F69
7AE3F2433CE8B6F1A3C9DA8C4CDBD29377F1B90CACAB347958601358A043AFAE
1A3100D6786FB1A1D005D572B12F2F09CCE1580820D6776E4DEA0C85DD18ECD5
9E25C20AF2F22969804D5A884CEF35791B1630B8CC413C7594E6DD3AD9BC73D8
EE5BA382CEC5F7D1E86666F5657F1748F28CBE526D90398D3840182F35ECB41F
0B72577F941648A1EAB4225390F130D83BC8D134CD4EBBB54DC81750CACB6E1B
551D61357F8DDAFA28899829BA905766ADB2EF24EA02CF97B1D8E1021F51CBD8
12E47FC03B333A7F09E8D2547F6D8D16CA42529EA424C8217E924000A0F81F7D
46720081C49801814D14A4F4719E66EE3C64292C209A832AF504B1BCEFB4DA98
C052BFC0B40FBFCA767F3B1EEA76B1520772E70AD20DC178EAB069AF72337FA9
495DCAC8CE84E145ABB935FE3468186ECD90E2F15FDBB395191E6C4653FE5A87
26B901790B3780CD4482E347D5CADF769F3DB4F8CEFCB79818A6D66025C20BC5
924DBD3DE66FDE56D72AC7474753A387E4FF6B9907F28808DC922FB775CEEC4C
A652F989068D45ED87B4D7B85771D39388CD550B19A610AC87D4D4B0A80797BE
2BC7CA32B45F3B58039F45D87E787DC0EC3562E8A8F95F922F3AE8740657DE2C
6AE6027D1CC0B252FF9ED5F0D2EBB744E845DE1F733EC51463B1EF179A96E8C1
BBEBFBE8313108E9D4AB856B9CBC75EEEF8D77DCFD4CD6F5A572F26321A5D3A5
906E2108DF5E38FCD9C55FF414724F474906BA1E1ADEDDC9836C789139796AD7
6F219F24580346CD9F59A3E70196ED37E6BE3262D1AFBA8233BE6F0CF35F09A6
B82ABDC8CB1CA69C62E1DD1B323A73C9CB925A84ABECFC00B4212CDF4E88876C
2DD4EBD6B47674AA8DE3B033E16BE48F51A34D8ECD2F2893043CC134930B868D
D9FC36A722247FA319629153896DAAF4200196EA4BCB09F019123AB92002863D
00F748B03984A9B36906B7EE0A734C90647664B563B8290351DB46594BF4D608
E3C46ACB03FD405EE5CA4754034FE3B23DD4EB3E437DA8C0E186C1646CAFE072
D907E23C35077670F6311206BD6F96D03E65C08827A12F04416554A6C067A1C1
07EC6B0AFB4A51865CDC3399DDDB584A8D3BC19ADEA42AE0AB3741CE1DEF5B75
1D3B44C8C03AEB062936004A2EABFEC7CCD31CF0A0B8E3654C81085B3892F7C7
C03F1D5F4748B5DFC1F8D787F99305E70D9DBE0688490B3A656582CBC1D90D99
31DFAAFEF5383A6628357EDBB00B60E26CAD17086C48CEA3FF695D5A4E5EC87E
B126A88A279B73A0615F840608A17BA22DCCD85BE9F70669113065923D7A6457
012D7D59BAE248FEF897E9EB273A452255A0E67CEA1E27592C2CDEC3322C958C
8AEDA4FBAE8788315C7F1D501525A1F34CF876D48764559AE1467125B7EB3C9E
EF561001051A26F3196C46D3A131F19A7BC912EA7DAC8E354F1CEA9C76D10F57
1C09150CECE0D45E10BD736B633C8ABF3817168828BA1E1271AACC94CC7F685C
F1CD35D814B09AA8D57F8601289679BA57A01541463FEF58020562A57F0E4F5D
B2141768EB7DA7468011420DBE034D5AB67817DA21F12133CBBE1C9B164DCA74
007E81C0DB4E0A76BB8581CB84D709C4F7392CCD4C3DBC3E11E2D6A185EE6A81
52A3119FF6B69B172EB3758DE43E0A91DE993454563A528E1E6F1EEEC15DF4DA
4120AE6BB7424A76B49084DAA4E599760E986979D861394B757231173420B130
353EAC9DCA944BD9D54476DD446BEA201F714664CE83D20AD69E65CBC3F27149
9C8D6F9BBF0D8560B43A388E4E1DC51A850B24E84685E3C5336B647097086C93
1A6103A50105C56408A3BF716407E9F63873237D152347D3AA2C575D1C0BCAEA
DDBE29741201F3B326C4058F2438D94C9A0DA68BDCA38321871A09D6ECAED6F3
418A66D35D6940A3FB549DBD4E814C13706AFDA1D383F306ED42A31C12817DF4
11A66FD3A7F768D29951166E7842CC737495F33CA4157F2DB60F86C0DE562561
BEF83496284C96B1ABB917C566004B780C53D467D0FE46560B44CA4FF989A4D7
7F1E2023AE51FFF051896FB41AE222DF8A67CD805EC55126E771BF49F20E7ADF
22AE9612796DEB9138059A4C12D60A50C7041D0105C2E3CCAA6E055E80BC34A6
2418DD202B3116A197425EE120A17F7791554750299F7A6109C088A83ECD62EB
E43B473FEC1F76DA6C55089AF3D95E3925A375E3345BBA213B3DF67C4111E956
4B59B724BD659213A39406D73E24E5E04C6E0ED12E15FF74ACF68FDEEE658A32
18998113988006CA5FD98D09AC897D19DF7690555001FBDAF0D485BADEEDCC18
657062F36EBAE12A6C91D32ACA3A0D44585E55AFD968135F6492A9381FA2D2E6
4636F3AD561C22720C0C78F40D46FFD5B2E65606F3BC5827A262D846549BAEB5
3987787AC9AF72F866C700D45FD6EFDF6925E9A446043103D6CDAF4CFA20F1D1
6CD3C60E1A40B44AD657AFF96B2ABE4AE0125D437EA8BB37EFA673A3FFB3D478
EF32B286D1738E60C074C6C2B3C54DF65F79EC30FDDEFCE6DC3C07934FE9CD4A
CE1AB8D80DAE1D863047ED474E472430B205A38708508E304E9F579D536CFAF7
8E601BC228CD716E472C288EDF48C7F3BC30765D6775BB68C69704D0BA5D6DE6
BC5E103425B3B9CCCA501761022009926B5F55C9CB2855D5D04C67938C912521
569844012BABB5ADF93891FC191896A5FFE8206FCFAEF68CA01BECA56517AF0A
CDFD9C0B72FC0F863824795F928AF04C833497F7C4B1B692D0495AB383CA1BF5
4CB920EE884D2841329BC275A5EE2E274C2AD5CF039C0EF935042D3049867723
AA9551FFD58E4936304BD05B9050D2E505AA097F2FF446589143D43EE23C8FC4
8E78B6C552479B1E51C74F3BE16F39C0B59D107D1C7EC4B2F384E51CA45D81C3
3BA4D13E8C03F4B60485EC79D72FF30455B7E6447D19E2611C39EC0DE9AA9AFD
BA3EDCB7341656791C3D210014D0D6DD89AF38C49D8B98C00B44363C27DE6DF4
AACB189CFC990D024A8719BABB88ECBC54F126834654AD20853F11A6AB840852
C69B0BCF10C203F8EE4E08FF5F8E5F427B7B2627F63A2172D1EF09D03C8E7165
05830E4391AA5074CDBC73175C28811E4C89C522B27B9A66BDA5717AEF7388F7
F8E9784606373A8EF97727B7AD57C1A0288517686B4FB0FA31AF0CD15A8F5D15
D1339193DA369A7559BE855EDE27C6886E5BB8E622B6373ACBA6F0387CA03AAF
347F7EF05FF02CC4ED85B466F64C52F017B20CDABB85D24452E086394DC789FD
9024AAC0B8B6A023886FCFCAF1C3215B36343FF2ABCEE5B559AA42CBBA8CDE9F
F407C8A7E5FE9FBDFA68F4E8DAB9DECBEAC369D71E76447BC024B5BE297579D6
9ED2F15D083CEB170CBA8F1D210044B6EE678188C77160AD65654709589BAD7E
23898C781A33C18EE274861E504D0B158B2BD84388130FAF36F4C1E2471E1934
8A17B3C6DB0CA94E944C0E17C3999D8B1F00119286FE005D37EABD8B2A042FAB
FF483882103582209E9DB25AB068166E5BCDC33EFFFD392924E57ECB5A258A29
10595B0F38D6DD68CCFB5D5B1A9049ACF2C3568466C9030A842BAF184694442A
ADDBB4DEAF6141D460D1FE4D5BAB76DDBC2C87AACB2B1E4EF9E1A8E8B0D52105
FAB18988D23D4AFBE261F8D4529D93F2CA8DBCF55453A1FA4D761C006243002C
75ABD706FF6272EC8B127F512CD94B48F99881DC574B05043CEDD7015FFF40A9
272A53548767BD70764F88644C6E5835216ED2DD1B36FCCC468011824662BBF9
6E8ACDF42D79E6E714278AB53CE7A124D7F47780950A51B8BC5DA5D6AE5D4BFA
DA6A5F92A1A03827AAC610CC3B9E512C5D4AFA34D00B7F74D8945AD99BE6D26A
08DAEB2F796C0F267E8D7F4E2B82093323981CE16A2C7D145258F9CEAFE7D68C
9C1300A6C0A480C9AE591E664F0D17A94A65D60D2AF88C8D76A53677E7150CB9
A33D3DFF3946558639A6D669D2AF20BD41F2F3494B8EFDE6E198E7EDD8922C0D
52AB549BD550F5600AA8036BC6094AD5D0C723C2131E8B42A3580AD2166D5588
B87953B6F26F9A59A24C096254E856AB00C6C757576EA0E4C8F0F14614231A27
58331EA5C7DA8C3E0D42D357AE25A878133A558079225EA3EDC15B4B7668B9D7
1129FCD524AFF3FCA1C73129BA8305FE3F46CF004AF4D76C8434E66ADB72B671
0A1830B3A923DDAF7FD77CB534E74F590AC18F55EAF42B6D05A120CEC9ADEF90
506454D1D85D87CFFE8B6BDD781F814EBCD1F6DF1DB8ADD7E6A17351F41CCDDB
48903150D095EE89DC590412BBFDEE310FB8C7B744C72513D8A686434121B7C0
9C582E1945BF8D20CABEF4F2F5A78A41E4BEA94613F1273293AB153B6EB645F0
DFFEC4B6B40F8BB4279A95A1B189491EAA6BB8999EBFAAF4EC4224F95B80507B
6DDCDE002E74BA03A2B15E0529E61DCAC207A71501B50476F65EA74CB0A90A62
A05E0E6853A89537F385C885E485C71B916AD96DD66792A732A188E6A57C4595
68B6A7B4C1A498B33CA161CE90FA34E9C85636E79B4F9E9AE793630EF8783BFA
BF57EE205926A3FC636BA6AA72F91F5EDCA106FA0636B029F12E6809CD8308A1
512C24BEE6B0B60411388FD7F8F95FC7A4542DD071B9BBAA7CF3B2339060BE3C
24F17A58EF1425F820C9D2D361EB55073F7202049F2ED6C935DCBF4EB62E1603
C7E52245AF3BCB4D7570F70D2BBA4A565AAA955C4952C7F4E5893D781502F479
649B41A38869242B6B29ACC7E16F498E0D6F0A1C6C94BC37019E22200F1550FD
E0CCA34E8FE7470F2DFEA68295A90FEA34059F842002D97A1D853752CD55B694
12EB01693CBA2E0E4A4E8B4F55AF936438B2181123236F5F33E63C9115F80624
303534894DF0C0E9BE921641AC52D310C58FC911D294EE7E91E866841764A9AC
CAD5C7089DA7582A583FE756451A02CA7B0C02570400BCB78475E4BA09D03745
D763AD531A9573CC39EB32D6E03C1A537ED6B29FF9D2227A5447F002948406AB
0E47AFC5676268588F672683326DF311547C54662D5547F8B59F90EC4E790133
AA578C8AF018B06D7B9F5E162C72845D3946BCC044D0F3B58D299E6D6FF277C3
A9289CADC1C86DD243AAEBCAA2D59460B39F1849B483757E6DDD2F09C3403D4D
FC0807C44A0E199232C2800D15C1FC56749B1FE01EA77F8B138F5317730A3395
1FBC2E58FB6AAD573C57B42DA521764563F69E7D4E26057622C703F8929EC7CB
DFADDD1496335FEC30F5E9E16AC846CC999C22B7E3D74EBAF8B072345BE26EAB
B77DD815A2C40B74D75EC25A96919B0623C4B487F73D78D9C5A400902A8E1F6B
84939432C6F8249D5179A163671F3FDAFDB5716CF2CD09BBEB1FA1FF7EF8999D
BA1B10FD88E772B491805CEA9C52EC8E98D78E01B81DE3A78F6FF1BF957B1A05
D6C63C6B1A85CD6A38288D1C1A551889A3D80A0F3948BCDE6BBD5918337528F0
D0C73A81FC12A743C7124B4F606D0467149176EE154BDCD604A3A3A5769147F8
E3EF2398E0AB443A4F47906A09156C93994992C526DBFC7AA8EA3AFB5F2BF0AA
18CAB0C73967BA45AADEEAC7443DD3C41457BD80F5D49FF26884CDFA635C7ABD
2363DBCA6647F5024D51CD78D79C802EEABBCA93CBF9681FC54460998FF0F2A0
95D7F3BAB5120C4F83209F1FCDE26D9DA860AE9CCAAD3330408DC5008EF4383F
ED9887D5D2A38932A66D7782371D3D4884B50E1295C517FC56B91886D0BE40F8
22BA1ECC9339131AD6F60C2D6475E33D1634462098578BCD5050EB47A9F4313E
DADA4845CD6D208E57338971D7BCB5F3FBF8735AD8459524D93A92E180399D4B
E10388452A179A711E374A7A0A02E4EB6022E61BF6343910D9FBB4225C1BAFF7
CF3EC402F58A640ECC4DDF96A63EA7FC392881EAD14F12086677D38729C62510
431E629B6246DA4B173E61879C48F6B34D06B1111411AB2EF183413A4CE70C72
CF3197C6081BB1F32466745BAC903B06A5700A7FA1CB7AE5F53FA2E56F84C54E
C382E54F54A88EFD2D990D55E3781E25465E34B0E518092ECE44873FF17704C4
D368DDE2B930D4CFBEB9FD0F75F34447FA751B9472F92BDF5A7DB5D93C74332E
50B46F45418FE27AE87A1879F88AA4117D8064EDF35EE620C5679431C0521842
0DD30B791B1D7359CEDC67F92DD17FFC514520DE675D073F415271514ACFA19D
2B9D2E2D6AB0E7C4F285F9BD614A00DE6825572189A19315AD3F219A3AD2D7AA
13FDD13235C6D108916318648507B20C3ACDA212E9576E25EB201C38AA12BE61
E2E6D4B23E9F28AF0E64F2A87F902F283615BA37673DFAF9E0D2ECB3194AA5C7
0008DC13655D7241194A25388FEDA8896EDEB52CF4447273969913AD25DD4467
6FBD2AECD4004E69051321A7C67A2462C77EC0ED1ED7B6548E29F5307475AC68
0A12746D6794B5EAEB7988162D46A117FBEC8A5D496F9124A8719A0B094E42D3
CBC480EE553F8D12679FF9A4A26243DACC84C67787EE6AC11E190298C532CB0A
FFFA929D11197E2F42F5363E6DF22BA29E867F335A49E5D7E8B5A1C11402138F
3DCB54A3624AADFFC21A7373A2481F951D83972DECD70AA8987112F05C939A6F
B076C67332352AEFD997AD21C556376D21FB706D26251A2B80628672D6AD3E0F
12CECB7595C5E680E31F06B8DF8A88C5ECA1C7C2FF5103A6B0AAF8F5CBE80FA5
025BEA2FCCC345958391589B431E90D4571106E2AE72AA71D6D178B66BE4473D
026CDC9CC58B25A709172FB03C68D6DF10A69081F7A1CB7B7BDAC189A0568797
D0A56138DE44EAD9BEABA4B9646E8EB39F2EB945F8CB2FFD2E71F20159CD8C2C
221C3E656F55B139CDD5C4C87B5870BFAECA6C8FEA95E281B0649DCFCEFD969C
7AD4DAACB1EC98EBE50999E413617E745B66E31908E90AC92E1B0CC8FA715F7E
BBF5FB0B0FAD16EE841C75D94786463832323BD47EFBF5229ADABAFBD771DC29
2FCDA019EC65DFBCE76B907080781A3933176B6D2F9F20CC9FCFE265DC647D4B
E90496B19CDEFC01A7C48DB7041AEA1D83C0F18DB4794F49F5C8CEE96180578B
8F937B8A29891AEAB0DA7424DC43B2767533FF7F98ED693455F82F098F49FF48
762C6372B1F1589DE405A8F821C2EEA5310936F6232750B85AE39EBFF0D3BDE9
B4FB0A540610BDB59FC4EFF8586DA3E2E7321DF112DDA778B1E50BC3B744AEE2
F5C10C133CEDFFFA9C056045A0369FF7916EF6DFB4498E76A6BF7FF7021F77C2
C3E2096C4DBE15B542B3138331B41160DACCA13BEDEA4D61E8036A67CDB7E570
8599D51DBC72D065791C7EBF6F454E4AE91268CEEF58C3CD492EE4DE79AC603B
41B8D938169C832680FEDF5BCBAEEA8FF200D0CB16020091018865E23D6C0C9B
A0696A6B6CCFE54B62DBB28E72BEF671339F900E204FDA3CA9C2B6D2FEC74C81
4398C2937AF2B1EEA58832DD7CF5C1E29104673B9578C9991921667A93C1493D
BA2ED817301E6A2B3EBD1656B5BDC94E1ABF95D33B8396AE9B26342CC1D2A282
6EBAAD4418C925FADD7DF27A7AAEAE52FCE3DA1801C31C4DFAEDC2875F4D6B2C
1EA59D629B0FF93EB424BE43473E03300CB5AB595D7C58123CE01E1590A30154
50FB64041FBD524D0E932C179BF2188FFE3EEAC9F8D195DA0339DE3CD408714E
8E7C016ED719D6A4D045FA24AD80362CB3AD2B5A7187A04AAF440DD8F00EC4DA
4B4BFF0C4185AC5E334D9D374A9C1B6C0368B6486A3D0662464187EEC512CA31
7372060AACB1AA7D7D6159E8D91210F4C73862275478A5CC6EE68F395A1EA5B4
75FB3AA771E44EF95D678008FAB0329BDB6AF0F2AE4E41457830F8D3C1E2F9EA
0EEA68DEAD0613A62C3000C037092ED0A93D268B99CBCFDB6C84A32807C0BC46
CFA13B270AB88AB0C79A33EB001C3B895E824DED43C96305B0D042E6D59F5FB0
258A37008484F27750EAEAE17A63DC636EE6CEAE5B59023905D41817647B7D2C
63A8B8D708B2B900F049C9821BC0B7A2F8AAF27E7E115BE85D71C3003914643F
82D7DB809BD0C73EE2780F4950CF5CE88342AA2D163827DD2E17A730BF69030A
AFB7BC4F2C3B723527D35DC3AC2D072E91F7CB647E1131C0CEE91162DA66C9C1
C9B3A8A47B5CEBF5D03BBC3C2FAA19D4E7C58231807317CC0091E3DE9078DA81
9E0EB14E127B9077A75A8CABB6FEC66B806C33974F0312ACD1605720B548189D
085A7DE397E441EC16617DCB9BC822B73985B080A7AC7A3F8A6B652F333275F6
45513FB6547F10E5C09F9E499346B2E182140BB44EE70247FA3B66EC125FDE2F
6D290EAF0ACE0E19F4F97AEC0242D5A0CC311F98BD3C1E18BEC7A4736BB4CB94
D6923FFD65A2DA9A08CF62656A756436E98F1EAACB9E85A6904AAFB352F840F8
453B0B5FE4F6672738984D9B67975E893E12F61E935E00406AC83E492597ADF9
A19C7196EE55648E642184BDF993C99EF7C10AD91F05E345E7CBA12017897EAC
D1FB64C1F829392A430ABC6691259BA46DAD405158B41D78DE4ACD48F80B0D4F
1F8B560B188B0AB3E7A64A4114153FEA7444C689CB2D6E151679BF791A680916
4532D7CE3126709FF083B869739C36E846E285C4137E63A00A3F971043EFD019
FD2976BDFAD51EF554621FA6B22F0346F9E6D4462EF7D04B8156C7041D0105C2
E3CCAA6E055E80BC34A62418DD2281A030D7A4075E0BC6F094E9ED5A55B9BF4A
C2EE65D6CC811E70814B1258131811877B96009E065BF36531172BFCD6166925
7C195560586BB567183114C9895464AC1FFB4D878810964FF5E53F25285B542F
3130B6AC84AFB13A56338A6DDE916F06560FCF1A2F982FC8A95F789A652EB187
7C6951F86EBEAFE1C5725C894669FF44C8BB6B3BC4282A2426B0BFEF43388905
170F1D5C3C48181A3EBF4A622EBDEA00FFFEB8C51B57F75ECFE7238BDE6C619E
30DE5AEA07A6EC2C658547487FC2B6844308370B9E8ED477D8D5530779A13D11
C1A61E854163E286B22BEAA8BD5B179C5C3F2FA8A9D8446A8F7217744839EAE6
986AD0201D1E7E2E27FADCF643C0D7CB15E2DFD2F64ED253ABBDAA8679300F62
37728E5B16EA7CEB75BD87EC8E2C661F9D677552B91A9CF74F2A195EAEEEDA16
C9878CBA356A2ECEE5118D86CD0DC85A9A53BE7E1C068352E4876F7FC3E93DD7
3B6963ABF2BC51C9B4BD010E5887D9B1667DDFC36995ABA438032624891D3480
D1DDD17468D6BB7AE25E9C74677117EB46041AFF25E4F0660D6E5FDAED66C6E9
3CAE2558AFA79FE69F6BD50503F90EC772E402E2F1348B2F930C2F482F17D107
B1AA4C3891353242C40DA56736E66D332AE7AE9677BBF810EBCC680FF3A810B1
C767D7D6063025F94638F565E8882EB7FADFE2ED3ACCE3E30A0E951D01199A9C
9984BD45AF96FB8DE7AC0C22114AF8CE12BA8CBC2DC53766999328462C318ADC
8E703FF2732D0D1797B70A52A1BE26E3051FE223F05203468042550ED9739076
EB30477D455C7DF2258DD005ADC928DA5182335875E90BB3CA6110F6D46D625E
A2A27CB1682C0331241D87492D92E8936325CF2A10298B898D4C46C3BB844048
F77805546EB5A300E041D4430C10B0C02E9F97305FC7E43A31E0002A2F803A30
B126C78E091B6D8D1B6DB30D6740E7521E2D7C451B039204AE37369731F5B956
46684EBF41E264D943C1929141E4EDFDD58F87D5145728C12387213B2AA0570A
583C2F9F42E310A41FFF797EE8CB26F5F87D22BC1766A6477585B2E08252CED9
3785F720E4DE92960A101294ECE75FF99925B157EC305286CE4F0681B2FE319D
BE692FC1E76058A33C2377D779DA1F0DE6FC09910A13B23860D75CE19FD8191A
0720E853FF0603877722871CDEA1DB2820B794239C24C60220CFB93E1367D1B8
263172C133FF30D6D25840742D9B5C02540547A3BE723F2374DC822B9A963D4B
577F67F6E02B76C71D6809A3ADEC3800693DF0F6BFA32243943EB3E77E6CC38D
EDBB2DB8BE7778936B71A0FF1F8C27504FFFF0BE8E237AD5EECA0A809F8EF09C
E9B8743A19C6C86A732C17AF9C9B220E0DFC4ECF5B413575BCBF3B1FE46D4BF4
02D864759BE81002EDE3E49E101101B66615CC18E10CAFB985B78B6479035DA7
CCE11C374AE5BF50A969796BF3E807C04A3B0CBDA9FF1FC8EEFD65CD8674717E
87E6481701FD1E1B8705C512C0176246D9352178217879909DFE3C012CF28099
84881E51472738B5B60B749DF353AFF7F47BDD61C91DA2DBEAC557464B8F0156
C0BEDED15F61B43914C6D17D10383359AA58F235BDDD5F24949CEB89A93916C8
6B2A9DE768B9B97B82D72497EBF96AFA6691D4E5B6A4F40A7C7E8854BE6056FF
059F996B83FBD1511275A29FB284F38140FA417896D6AE02AA5AA6382253CB2B
A6EBCCFBC26B35BD4038C1287938562B2203565FD277C13BD2342C13A687CE6E
8390041EA0EF9C658D9B0296884BA9BB4FD86BB02F4296C71136B1C1AF8703A1
A0E517BE42CD6306FC684DDDDB54C397BD138748D0F9056DCFB98DC8888051E0
250C12ADC997ECD15A231C3B5F5A000F610FDFEBB570FA8B08F7B77C47E941C6
62450EDB414B01D0395B48CB1772EF9B49A0E3E2DF4FEAC551B910E8AB17977A
1A7A35A052FC4FB95130181253E90EEDE1268161B9A03DD9343DE059471DF1BF
EADBC517962A728E8C81AF5AA20CA505EBA683342B306C3691BF4510C724AB32
6DD8B689D28C406F320EE84950A6A549E6BEE147D4F691A1AF268DC7DC1F84E0
3D692B02A2B072252518FEC11B39FBD45E6BA11BE2F6896603072ADBCD36FFF8
986EB0A40B59B5A2EDA5BF150E373526CF55A76CC97FA47FFDD7D892E2160F08
45EA7DE0DB3C13B8C18440DA54557DA4B62B77E80ACB4D27E6C934A2155DC2E7
9631499FB05BB3763694902761F7557FEF701AA67B20A9B019C760B2BBA8B105
F5A3EC7103BDE77ADE41E32326604C59CA0161220DFDEBFCC4E3F3D8112A7E8F
F270331D2FB475491A5432D20204DB9F3E3FBE084A2DECAA1964AD31D9D2F471
AEFEA4AE92B580F02FF2494CFF98E6ED9A01DC44BF160B94D56334B16EBDE16D
A9FCCCFE6933499EDC15F2327CD1EE4608A524C4F1A641735601161669B687EB
8F73166C99B250BB8D47D1AC16F4B8696193FA77BF6B4ED0D8715562998B379B
066DCF4051E3A4CE8DF04768CC0AD684EFFE384B94A8A7F314CDC0E477C500A7
DEAD963A3FC5508C385F2ECADE863C97FE52087181251AD87A3E6048F59B3717
3C41AA84CE0F9F23CEE493004F0FF6FD6CCF6BAC9DE0C6E6C80B24CBA3536694
5769918BA189B81410322D5EE7142C7158B0D0736C2AC98575E4DD45E372ACDF
043A43A294F4A7F0FAC599672AC5FD5FB3C7F91AACD2E1727190539E12540F01
3DFDA4272FCF11967A620329667BDB2B79A6C97B54B8BFE82A1E6D7F3FEB2BC4
496C2624F6F7E45CD885C5E032FFEA7C337BE41330715EDFE87F760D7200C559
944587EAF9A8B5216B3A0D30C5E2345AA680CC0213F630DBB2199A8DC08CAA7B
05CCE9C4F13CBD9D331F2084C125EADCCFCFB62238DB0D7BA416ED9175D5C991
9AA6516F0E77C57E563C368FC4A63D06A35317623DCC68096360101378CC2850
D82B5B9EDF3694BD7EC9430C3C2F7970B696DA577C2145250D3A7BD29028ED61
C58260832E6C4EA037F4A4453F715FF7F13E38812F6866EAF9C081A5A1169936
522382A5BEDE06A9F41B8DAA9D3347B158139B54C5D7EC59DA37E7609FFA26F1
D282EBC19257DBC8AFC1D266C3CD4D3D76B179BF9176D2E877C9D142237E9933
716EC92EBD35E8F5B59F4353D9020ADF5271790BBBB6BA3D4E22B144AF1CE936
D310AF8455122F4C6B61307071FBEB6E8DAEFD978C96E0C85D0BC622011CFAAD
D34DCEA7FA922751910F4869F16F458083B608409F1BC136BE8BE912F59CFE21
08B6D4D644BF03C6D46D5553A1BD1AFD24743428FA124239B2702AAA0A8F27EC
86192E30A5239A449B68FDA90D01507191B845CE8E6E9A843F698C3DAD1EE47C
3E74EB74AFC3266A10FED5AF00F4F2FDC2A90FF6AB09938CD568F2F700F5E0C9
57E512F18EDE5A80C4C8B98D7F80BC9F306B44A7BDD35F637D616C7003024B08
E52473CE2FADA256B78D95765FF53C0718FB781CD2E584B4798DC6EE634E969D
614648349BF8090B0B84D51789710B11FEFE5493FBEA5FB1D26743416B6D20BA
817AB49C6B43AC78C167A0E5CE18889CE0B44A0315084F5C57B001DE7FA831F8
D98B9A1E9FE0D79698ECDFCF6BEFA01A778F1CF54B828E5B0E2F7117C021D51E
4F045880A3A20144D65547A0EC71D4169ECC5A9AF15C361F4CA0CB8FA346CC57
60009233FDE0B38CD4EC1D07A9F817ADBD1C1B33E11D8F99B54AD573C0386EF9
3C796E4644E666671B51034D42870603D2AD9612CAD865E3B0BC29C36A2052B7
5F8BE28A41E8243609A986887C7DB8DAF0F445E7F452845BC5F4C4C487917187
C1967BF3983FCE91203EE83E61CC556FCA79F7379325FB25D9E62268CFE94C0D
9189A9F3213E4AAE753E34A7C120CEE6144744E50AD71039CA85BA749C7CB168
7ADFFB0B83A7838452A6F181EF5F095D1CA40B9417A1DB1BC9CFD7A726E5853F
D36E426B5DE3E5D309221F1221A2F5D568015A4D417E9D1A86E2A4CCFF81E8B5
8F2F29E19F7D715AD567F556BF4C8B1E70B5759D7DEA6A5634D8C408A4217BBD
280FAA41676BC2C9ED0CC9861ADD632F10FA1AC51B5B4094EBE56B0967CE7B6B
5CCD4A00A4866D2F89FB374260E9C0D73B61C68EEA00EDB0DAB677F5EA9680FB
E09270164154819C8D592EA8EFBF5E2EE16884FF136F2A2B90961AAE7AEC58ED
E1252074BEC777212D9B77B85B10B7644561C203977A5BA6FBFAE1FEB947C50C
E8BE18F24922B060D92810352FC66C6F7741A542E9CDE296B257752B47C141DE
ECAD37BCB776A50846D1526469D236C37BBD24592798641DA70C352DCBD07B10
7337DCFC405FDE26EAB48936182FAC8B5786F0FC1A21E399530449FAB1495E09
C40A50E67175C8EA5084E4FED0637D79FC8F79C315870F4330E84A3FBD9E2E67
C4DFC4F613C108E6DC495627E8A037C53CDA640D1971689C0F359224627423F0
B7F6AC2C6773276A7C5E9B160FF10E3274DE717BB73FB3C2CEF314C48065871D
95F479057A8A29DC524D9781A6027538121F924F2877EBD9C05944518B80A83A
36DBB8740A1D8B6A1ED33D19A1FBA979FF7BAB06B1AB21AC05134AE780058433
952B698525612082298F0E6E36968C8B4932D82FF26906D52456D8D43114ECF0
B4E3D6D9170AC4B4FDE63E55A8FCC6397B1993EE08C33AD29C43D0359BC0EEF8
FDBC70A40B5551A06499BB39794CB9F4EDD14E1319DEFDA17AC2E515BDB3D6B2
980655EFDB97B5685B7027B21A7B06BBD319026C514AE2BFD687F8117DA43C90
B4B22B32C391633A9B6B41ADC8D0D1A65AE6675BF804E0FA25D586BC15614C89
272DE6D1F25C31FB754FCF51EC25E2CDAB7E3E2BD29D6E460691CBD49F4CA39A
BA8FD59ABA75B742EF3F56B0D0815CF27EEDF7963909BFF880E1D535150A6AB2
48EC5920D02B5F0678DC863BB0D07D5C5D6110DA76A2BE32CC58D40F3CCA1BD9
56A46A5AB42F92904B4D0DA750DFF2A83A30B03BC1DB36EB2FA91E0B593129AE
C60243662D6BA88DACA0475A655F1CD97FAD69A0B5EF27684A63D7FB96EA45D8
959C5D6DA35A2A091350294B1A1AE1533EAAC17EF92DC3567F629FF2DEAA05EB
DFD7F0B5FFA9569F0CF2DE5F44EE9D9AEBFCF9B50806C8FE8DCD943DAF3FB4E3
A363CE18EBC0FB2A931ABF77E16D1B0387843CD39A2AF0EC9B5167743501AEFD
8935C37F69405CFDC401C01389D6C65BA6C6AF0554EBB0D8A2E015FB9A9070A5
B29F6B69940F415DCA1557114767FEC20D2DBA71C87061EE8BF523D5911FE8DD
4D538E4FF8BD62AE25DE20A0745D88EDAB8F6005B0D7C9BADA8760AD44E31416
EE4EA8C182C1D459885A2514106932087FF4370D1C25711478FD4AC8E03BE4A6
C470A7230653A5A96AC2CF1C5C0A71AB7E9A77A16719FF77D8E0C96165F1DDAA
FE732B4D2F88F3AED9A0475AC77DF105940210209779C16B2A621D818752BE3E
05914F789213898B5CEAD46B04C44DC66508A3F74A2746EE5B1A925AE1F57117
D2D4C8EE4901443AECD2BACD55B53AD23BF71AB474614D9A42140FAE137A7F48
B332D42C2E93A65808A9585AD95B37C1FB0AFFE4A05112A3BEA2B9D0750BA2C3
40B265B989E10F811FFAADAB3C186FE1D373EB71799DADD1A6BE6D4999886048
2B626C62849F8CC70B44363C27DE6DF4AACB189CFC990D024A8719BEF5DFC121
35B2542128BBCE02EE3902A286E7ED3B5531460084682B19C3799784C1394A7F
95FA260EA13D49E5923150F65DA63402166F691C9FD7515D76F88B3EC71D279A
5D0B13537A1FF73F6FE73832342917B787EAB3385CBD2229B014C1532DE7B779
5242AB54725732E2B44914877D33CFD614E6D82DF617F77EAB048E71B51B3BA3
06A451547EFE9C11BAEAB87E7827B8321C7FD25344A0A5CE9EDA693A284FD65A
E53BC897EC7BA6446656F2ADF5C90D6301C4C4F6D85252A14F0370B44FF5EF5C
BA6512A904AAAB1492482AE66546A605B0A862824BEF1643F06323109832853C
664B53C4ECDF81B0004DBE82B86EAEDC342153EDFCC32B212DD9568D55A983BB
46DFD95A1AFCD0D66C0F9656E47E98A214318EAB91191B962D632F14431232CB
BA15DB4002E1941504FE6D3AA62C4F5E685C69D3607DE4C33494AD1E41A8E860
08ED55640C1DCCB1F245495130492A7B04297D34E02F037D67195A4C99891DB2
CFCE088279EA454BE5D9BC7ADDDF66CDCDFD486201F0668C4BC2487872843D08
1CDA0C0D51A002B3136C62742943C0B98FCB605E2D2F49F184807E1763DCA87E
E6F4FD296D7F987CC34A9CFD251BB1F961A8A73A81A3AC7ABA47EF79078987E5
E0A71CCD10F0CC96B68DCE6A7A69DAB5A9FA527BD65EEB34062ED76F5FC69B9B
694BE466BF844322C3DD6B279A3CE8C02B1177EBBAA839440D00E04C67EA2266
95B35ACDA1C2A3177DF486E75569B64EE1FC17FF28C36EE10B46A77C0E8A7DE4
E32273482AFDDA9F1D259D42E20FD0BC7F4F2B1BFF614C665C9159E961437D8C
3C6493F73808BDDF6029D7937DDA667F515B6E8802FBD5D77556536D49CFC730
5A663B096A68648040022F787E00B39ADC7B8B8B38A5BBD6E3DC77CEB214A255
C833AAA0AA4E06C2907581F78A1465B1890ADCFB75709AEEC9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans10-Oblique
%!PS-AdobeFont-1.0: LMSans10-Oblique 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans10-Oblique known{/LMSans10-Oblique findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans10-Oblique)readonly def
/FamilyName(LMSans10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -12 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMSans10-Oblique def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-460 -309 1469 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFBD8A43517ED5F05168EBF9D3AFE
25EC2992AF87F286EB5CBCB7AB5454926B000DE86BC7DC7722EA9CC5AF351D71
F88C22A045179501515ECAEDA3F7CF9A23FF4ED29532BCC5A2D9C4566653DC0B
F99B58B303B412848BFDFCDC0BB4CB9FDF30F98236F5A2863FD3E28016CB2182
2E10F5EC6419BBDF2A9031E1EA217B147A06BABF1F87C9585634C5265AD31FFB
E45DFF60092955F342B91E81B6D8C75485BD91F6AC202BA6A2B57767022EDCA8
7D97EE7C790D818DEA09D708C9343DD51E95251DD61FC2C42769FAAF0D04E7F3
BAE35B7EED7A1E3E4CFBC85CDBC8143648AC283D624914E2234A1682C6149748
4034D5FF2E9EC1E698D30DBC49E0AFEBE8ECF54E470A0A40D39E98010E18C8C6
81231C3A97D5D31AD87B969BBC4165BC2BE5958B6C91034BAC04D1341689AE3E
5EC515193C8496AC58C9A2C6F43F2A54962B129D0D2ADDE23E0C3FDE6217156A
019FE2F39BFC22E83C05ABD8E75C2C96183C718C6022701C85E86E6043793402
76C1991C3A110C0CED55CCB521A594321D048CA42508633FA3D4A6F136AF2230
C951B72FAB311392D8641980C5135F07B3739D7EA92E168192B7F980F7AE15AA
71A5492DC8396F5CB64D0234B10AD9A6C66A2EE899F9FBE3AC9702338088A7C6
BBC8B31215E1B8FD84346EC2CC8B57D0E3A05496A585898B8363C66ED97FB146
AC31A61F9092744DB68F8841C0AC35E604DF49257AC7D739102D6F527E5B5D9A
0D91AD13340F218F3932EBA73263003F0C21032663204BA96D147B57B0FBA13B
A0568ED6EC53048D063E893777C7F27FE44291B7F44B1019A1D3BB776A32C0B9
AAEF5F0526332F611DE7283F50CCE2054F2F2F88E29A516C4739C00C7A53F1ED
27DD35685A6CADFEEF25FC447493EEEE2F1528DACA088E0162EEBFAAC08CB977
9C3CBFA6DA30D8440889A9F3F050F47945F1A6976869BF8F41090D266C4BD335
4B000C050AE6A04CCA7444F19DA90FE417740DED1AD4B59F7BE26D4BBF693BBD
A6847EFB7D80CC3D68F611C742C95ACB8914A1E25B2A8B2E296197068483D77D
259507ECB2CD6A84E4FFF861E8489070C9387FF6E9BE216CB5DEDDF1EA75BA6D
2532988B41207F5EBA3CF445B08FAC37BF352FB4A942CC07D024B7568D34D934
46BFA1AD2EADAC4199A0DFCB626F50B9CDAD690F8976A675D42C495F3A0157E5
4C5133C1136DE2492BC07C0BC4180B7DDB99E3AF5C45072D5FDE12DD81276D75
F02F4EB6053600B9D729D124AE2CD6038DB08BC9F51F1F8ED8819E41741EBD5C
FF2A4FA545841C4252F60F9C2FB8C376B57267EF3FCBB6E9915297760D56F60C
29AB8B417E2D6092F8BB70A2DD5DEDD4BA12D420CDFB43CD103ED7A1B9C2E885
C88F882E29F75015D9521283139769F56B466B95CF4D412DF23AB5FA0C1C6B0F
97B27345AA8316DE4F130A0B512508C2C71AC2EFB424F73D1CB7518F20750035
9B651D485B92BE0099760774555ACA3D34D93B16163FFBE3370F78461B29E64E
8C636A0B57ABDE6CE59BB754DCDF8395745CF02D7378466CDB231C7A899431DA
79EF5375252F78997F935BD878EBA39E67135FB1D7FB781E8CE10F13A589F452
936A798BADF461C448C5480CA1D1F5E51213AA578A8B93C301A831AE893172B7
D2FF2281E6DE4164A97731F59B6017188D449C867D7B28D6DD39DD517431692E
E1FA1132ED0087D8EF5E30FD8595A53472074E1C95F4A4B761F25B493F070730
D8E444247DB315DBE2328B3A70167B928CD4B189F8BBECF6DC5DFBC576DD13C3
65EEDDB8252A21D24F8878A9A19E2884079464CAAC1E8B607F9D37332AA4BA88
CC22A4509288ECDB56336D01D8DB3FACE4484A4988F87B3C7B3CFEFE2E00E742
043388B0D281D4A95C25C8F5A6B7BA4694F804EC6DC2182FDE51196F72328E5A
C4B6E0E88750BE13E67669EB4A632B81D1349A499D05A2D0B0D46E0A05899D4D
1DA41A4FE88655F94A940889D1E3F48E380A0C7E74EDB6C5C0F3CB6F2433FA51
9549FD755518688DB56FF76362FD9E1C29E1A3418F3DA3C710044C03A37A680D
1F806296BBF9424289AB1DE662017A25446984321EA37892C5232D486778E854
2E5BB4D820B1DB4E2202A85718270018A852D460B9A2AE6B9E1AFF44AE114E04
1743A673DDEF254577842DF6AAE5843C949952BE48F9E5C850205DBA7C66B2DD
BC38390BE7F6F9768E584BE5D3E02209C9F5C2F438FA558BBEF71C2FE003573A
03979A10FE8BD54BD38999FE0F739A93A9708BAFEFB588BCE8A74729CF8E78B6
C552479B1E51C74F3BE16F39C0B59D1078114BC7389985CB4F5A32031AF9C7AD
1B3986EF4BF888A612E7D275AA4EE5B6493B7A5CD7B1BB36A193F7839410822C
4DA3FB1A29ECC9DFC6179A8F984CA1423A99463EC5DA4EABBFEBE23FAAC12BA6
8C2622BA3755DAF4EB3BE9C2635C21AFA286B4D8C444BDFEEB6E2AC8E12F61C3
71D29A74A310287E56CD446FA24B1E9B76D8D365CDD8FF305059C2E913B79786
71AC30C91E77BBDA711E73F6CF45F31613A24A30023BEA9A27DCE366A721AEC7
16AD2358AE18DD2EF7767E50C441F6E84F05543BAF5C0E25FBBA5BD844893792
18C0E62EA54EA6E94CF68DC85C76FD06BA4B0915B9EEBD58050FAECEC86FBE49
64497DF28C3C460D540308A4B3D1E20B70DF4239E2A7CEBBDAD3B6049A2CB2B6
AC266F8D90A399CBD792FE3855F316DC33187662B519FD058138EB66FB67C225
87FC14898051C4FDE207F01CB20470BA0A80BCA7E7802EC66693BDBCA4E76473
FF498EFC0B5CE164677EB1969E80FC408A5814C436BD7477A25016C0787C70C8
010668E6A1E9F94DC84E430463A4B86A2F487BB059DD7A3BD1CE641C8300C593
C9E4F992F90C932DAE6267C019B9DE1A12F89228B7164959844CB66C168D3636
E4E4CF454DC4F17115FC34012A6AB0585242A0053D207E6B6F6BBD25829C3AE1
E37EFD447C37DB455D2F083DEA179DA4FBC32DCFE4CD0B91088F3DE113E86442
C14C4F16926330A6C8433B7609E685C1A00D822718BBEF12CBB30F4304F96F88
FA8F5B9A516ACA5FB0217CEF8518BFCBA0E1FCBCD403C90458CE63FE51E3FC08
65957D33A75FD9A1D34C9571982039742230A411A843F1A39E0E6902740BD428
92ED6171B0E25FC7EA594E01E0E7CEE1D3F287736CDCCBE2C4599CFE10A6A877
89BA984F105C5DAF347E85D1A6EAA623CA9668E4B2DA0E2145BC70270201D587
6BA691F65E7315F87A826B3A258926C04E27A121D2D3EA73BAB53FFD35C67AC9
C3B91DF9A4D753B055B6F1530D4C0E5E38467F77261BED14BB65715C2D192FA4
ABF53BD1A28704B84939C7E339BA3F42A6EB83353DC405A46690131465B5D17B
5035E3216BA57A981556981C6250ACBDC1812004520E40365C88084EA9CE1E60
99DAD342BD2F4918464470E352CD3E338A74072C9B27775BD49C83E708C80D31
BAEBDBA37CE4A7099844282972DDAB121A040D3D7CC97870F448EAD0D71412F8
FABE5A24DE1560CB949D746B5C3954B336C6A17C42787F97BF93CD6E0DDE7BF6
9289579DE6BF5E56B2FAEE303A56DCBE13825F41740DC013BD6E59CA2D7BA280
0FCE8AE791EDC71A47F2AB39A8E296269C90FFA27C5A51513DF558A8B499C7B6
1587852B5B970CC74AE8A08E28A3804934FFA3EF4A169C53D0F58074C2F7CFD6
306262CE03FB181CF1ED3A07BC07A23245F40EB62410686BAD6E6AD0598415CC
6F25EA20AAF76EC190BF2C39ED925CAC7738D360D0757B7E968A4CE41B89961B
BB7F30C807B959F9270F77DDBC2C87AACB2B1E4EF9E1A8E8B0D52105FAB18980
43C7BE92DE482C8FB5537B85222094CC28A53CBD9FEEF60EFFA06545EFC16294
2911B3230B8D462CB201F2F2438217BA5121CC668458620DB3D381D5677011B2
75F913649F77D74740BDDC09B2FAEBE1A7FFB35B3D345C43C74E88A8A1E527B0
E77BAE62868382DA7D2E148DFDB12EA7DAE363C007C9D9AD64F8D4B95A329404
758DB39457BA581E7207A071E11D3F168D1CD68372B55B80B51EEB416941DF53
3537B33C794385AC2427B835CE2ED27DA4A0F8B83154BBFE9F13E4F119193F62
F08AB010CE72D2EAFC631BC4AFD026878619663C9B54C94499A1AF04E3C3F00E
776079A79D9BFE1996455987B8D1E03261159C7F50054928B9493CFB72DA0F5B
5B70BE6A24C5E3561BDFF89136385827B7980C2FE0ACB1C477F058F8460726FA
DC19D1339CAE67C84563320D69DA7CC99177AD0A23CFB7F631E00CC979AD410F
813119C3FE38855FBCC2E72B7679DCDC16C306CBAC3C0663A12242680BA462BA
DF76E107548BA0552E4D03D2F128BD632DA34548B4769A0AED35C6A162A2F804
2E0762A9360F7EB87F4DF07A4DE07D03E69BFBC8650851AA63AC4A5C983FF06C
046670BF3272A4D0BE62811BBE508DC0A95895E1D3D7EB4DFBCF0C6BC99FDFB7
4F740579C8460FA6773244E9909CD4A49E4600DBC7FE9A727D18EA999ED27E23
39AEC4CC7F1EDD5CB4F89760B2E3AD1888AF2145866FCED73C8C771345EEFB47
0C543C59D960BE4E232CCBB59114898EFD2472B10CEB31F4E58CC760BAF73EDE
97D816D45E95601049B03FFAD238726AEAFA203ACF9088BAEB6850D430BD48CC
8A11890D9F5C9C50864C105343394C336BA4EF81277BECA9F2BE18748C2AEE31
57ED71571808E50151C166892AA2415303D2ABD61EAD6A46E1767B66499E99B9
7C5141D2E05BA86C59535C34BA97589D445F10907355E926ADFA5757E73CF123
CCEE639F2CE5F5413B11FC9A0751C9864D727013B6AF798D3CD4CA21818C0A19
7A853688E3AA3162E6138192E19652A0427C5BC21B42B5F41E8F864AC5FCD097
7D31EFCD46CB950505A240072203661C62E8CB19072CA76705E81701A8F3FE6D
22E975678C98EC8A9069AEC8E237722DBA50B4A885AFCAC3667E2ED796A8D6BC
9CE98F2B71D98621104AFD4067550B2F4DAA60ADBBE4A80594BB4BD3513BC3E7
C1897FDACE081033C2648F76C255145D67DF638A304040DB786E290974F9FA28
FC998BBA0706D024C4B2634E0BCC3E3E57052444394E46201B34B583A55D5659
FF56286FBD511C388D8E5A1679DE7B5B440C24318B26A12F465B0A2DBDEA1DD7
A748FBDF3886107AF158F4FFF875D8B2FEBC7016E5CFE1126F4294DDE5AD91E1
779F45E0668B24430916ED58EF36404E3B912BF4BFE16F062616A73964C470E1
FA471436D8C6E44AC4C5010157DCD759C6276EA61AA9465BBB3A56AAC8D14E62
B83EF6894B6E3705F05C752E2CD594D05B15173D5A85A7C58E02FDE28408C023
26B40E27E034DC75E7E797B53DEB549ECF742AEDD4A948F8C10EDBEEAD8F91EB
13E7BB5FDB2A215AB5D14B64DE244E3A916F3EFAD1B4BF55BEEF99C24030D374
60CE2099273F1622C089AB3CB216A5C27D66DEA3A956BDAF4392A5C844DF9DFD
50B9BEA18D947C7AE6A988DC521374212B1CD239F1939E28CC5154BE59A62652
CF6211D6F89B3F9D78E0A2FD3FA71C28EDFC157F6A0B8A665FFFB23654B08776
938DFC3DCEEFBBAC6F7ED13206C3D7F3AA612E0FDDA6ED16BF1A0A0ECAA2D7DC
893B28D0460CF829272A3EAEB91E84BA00EC3F76BC5EC5A324858251438F05B3
EA1F686B35F0072DCABF52B6BAE41A0B5CE4C0F54C84EAF17034BC949604D635
C05D62384592CEAAEE1849027B06123A1A004D39C1DD6D89CC94737BFCF9EE4D
ED1841F703375E81298CB839DFA0C1B89BE54606BD96D7A485AF1114173E61A3
6005E192EB961641AC52D310C58FC911D294EE7E91E866841767324AF4D2FBEC
5B7F4C7EF6B6759AFB2EBBC09D2A6219A9BCC1C176E6909031B3B4493AF8F644
3208E5BAA912758BF19B47E871B05E8ADA834E775AD6948BE41E7CE376EBDFF1
65186D73C5275BC9638D8A733D3E5905EB634AB8E0A75988ADBC792656B858C0
919BAA073453B2481362A8E8C28005291E4D768BAC7378E124713CA18F3658AF
57654C3C9EDB461249DD27D55A3459FF867D15160FEFAAD2E26E78E543F2B250
A4B6BCCBE8D90EDACEC747F668D86A801BCFE9AF58090CC13DA30697FB05CC80
A650643FE9AD227EB88E279912B638563A1B51C0CB351118E323C2C363E3D499
F3DC7411DCE3D20E2E9F67004264E178D0E993DEE8EFE8245F07D0B0F3A166C3
C3BAFFA551547EFE9C11BAEAB87E7827B8321C7FD25344A4E7AFA0486DF5FD63
771F4A7654C8FDC3A533E44F41CA415ABB1D6AC298E164F6C182B2FE7F5CB3DC
135B4F6BB62E9F3A9ADCFCF2099128D1C3565C6F5FC2D898DF5FA521C75C2244
A818019BBE81399BAF61865A3684B6E436828284DF3301A707606734572F8070
49EB845BD5ECDD78809F2EE79138D5B9FDD43B088E0293273AC148E5154E5DEE
5352981FD5D4C9A111AA0BAA5FEDBE6432710862C1A70FEF47DE1D954392B61E
683BB1437FDCD532F93EB886A9483867A5E3CB8A961CEB372CDE1EA852052BAE
4ACA772914394855FF53317C089A5F1C9BB6D17E4ADFBF8C5871C78DAAED58E7
D84095FA260EA13D49E15E9C478F514629E5A25C4FDE51CB19068F183D547C89
6D28CD6D7EAC386165819C19C75470FB635CB7271D8968A5E3D494682B8FF65D
3F598F41F51F1DB90AD895A6F62ECE4104BCD93691942E935C838E2CD3A397BE
2BF9A0A83CF7CC2822A913F10B226B6B3502746636481D85ADED33AB92CA36C6
D06E8D4E51000F60EB69CFE87031B4C066404597950BAC0D203EB92A675FA67E
1BB58F9B0882A3E04E291EE8E9E19ED316C9751654A3CD885FDC7D8BF0A7F4CF
BA1357D8E49F885C8A0FEF4C3CADC2E32C02BB5D4B098F3CC567E9DA9952F5F9
5048B505DD5FAD11005E66A31AAAAFCAE6A03034E2281BEC8D06F7B413F917C6
F616E761C946A648F86773E5929E1BB1D4C38B8C16FE17A0A07AD7169CF5C854
AEAA3FC89F4F0320F2E22D99CDD9306DEA21534DE1FCA4F6C6BE4FDBCB64D1B6
72499B916012CECABF4989E9508EC480AD837EEEC822F9AF8BDE1A4B71AE3761
D67B064583FC15D8903C59C0115552E9B89335C7F19DC959F75DA3AC2A2BF8AB
4BECE1F32E3F90B51313D7430BE1825C90D88DF40E76FFD358B0EE52466D6DDE
336D4B5F9F8395469839226D103FC503ADFC71C5F898C408A7E5479868EBD29C
9ED0280EB8418D0C93AC7EAA9DF793A62FC3E0C50F55A84EB459304A74E667C1
C278B677DE3E822E02D8B0CDE82B09937B41D1DA4F460189CA64DA2D8AC35DD1
0A8785399F995B532BF9F91C7EBE72EAA2A9EA3245230A0811081F198DC03492
775B2B72DAA50008CE4A663353A1DABFF1A5FBCC751A7D639E32C569B568F112
736EC85AE931AEFA5D92D7D997842CF3CA6DFAE437D0740605CCC9193FA96458
9CD1AF7D05FAB4DA62F0C1C6E3D9A9FA3B7F38B3F23F6BA62413A6D32AE3655E
E53594884ABCD947C23BE8D10D1E9B8A9DFD05C44C457C2669807F31630EC8BE
79032814BBABA742ECE84EC3C70C8281FEEDE8245101B8FD7564CBE625198005
583B193873D837EDDC8751F6A86FE386BF347F063DFFA83624D77474D8C7EDC6
626BDD518B9E0DA580DDEBC4B9FC00D1328949B97B1BBF1740EE4E7B14727B08
6F27E43E6E3EA6EF0DE68E1CC3148F295C1CE0B5E19A665BEA628E5C361F4CA0
CB898F8014720C008F4FFA8D3075910926C632218410359931C66F831A69254A
546B6DA8EECA492D56B2F9F55B33E5B63474D602FB6D02F57F18066ED53549CF
9E7C3EF433C1AB38E1D71D781BD8282FD2969975CDB303737E08708EF7953F41
1544E56FCC098DD1C6BA94A6B454A753ABCA6DE5C7AD5A8F0F05210CD908AA7B
6F582F60F9AFD251D351DFCA7FAFF1EA78D0D6FD12743F6BC297629E8419BA65
01B5D4AC153CD1FF098F42BA7FDB90C16C7F28C4C6AD3E1BA62C2CD5C22EA425
45D0BBC786CB84017D2717681FCCEB541872EA71001C654D42DFFF1DB2A04681
17D35E25BE199A9AB7892E680A23603F22671739D172C71CC1D3103066F6DE77
BD7D99E0ABA1EBF44D79217B1BE32DFF3E48051C4F3146917DF98C40DCB82C07
ED43EB615ADAD672C6BE223DDDA48E95A221C8EAA640AE738E5F6AFC8EE6E2EE
98763933D814901FDEB3C6B5DCEAEE27653324215D2855B6955770F81C522441
AA6CB86256FE8413B74A66B44F623D0C35CC8E183CD3F00E4E32045B9F840D11
38FE79B813421C3D5EFAA73A37175B944C01FD5FE881F9994498B9CA251192A9
1D5EE109FF35A8203FDDB7138B0C1611C7E62375F2A114F7BFA8A5936F0BF358
37ED9BCD7DE51AAE4D92CAF085D96D3AE09350A84B49A45525603F5B0384EFBF
748591978319C7C9D3AF11A0ACA9380919BB821C287FCAA0114944A1AC1E57C2
E0DF2EE4D976BA9A90F152D68E756C29A24A789A87AACD8B3DD1D270D5456DD5
2043ADC089C9F1CC96E65C4521D38C21E1F97CF8D7F3E36B582FAE4444072A13
4FBA0028BB0FB43F50BFF8A266F964E9273B2E7D2DF24878392E6D9AB7949CC4
873C49ADF8152818A128C0C06771B0AAC17CCAD6353FF544BF421A4809663B39
A9F75849AF4F71ADA75A75FEB34DF64167C63459BA904312CA11DC88B670D494
9977F5FD83A8D885994172E4352768B44D547BF9351699AF6A67D26ABECDE553
70DB907B2A19150135B79C455291553EFA10D2AB18FCF16C034A24BA4FA16E84
B73917E43FF456B5C432B9300C0254C27B0A0F8D3ECD1B056A35C37842C492DD
3C7A2D1DE8C9A6F35977B13748FC54F228DFA26730883CB9409F8206F24A189E
57A0B5C178B7326860AF2A3526B0E6E27D58BDBDF02AA83FC9C8C5076876ABF6
7E6C4291B264D2A274CD739F6A9A8920C2DF579A8C1E5ABDD3C6E14B9F6330FA
C9972903C2C35C5D1483348AAAACCCD152A50B02C5AA368E0EA45AE3A0C9A76C
320DDC32A1C0853E976FBE5B20091226BD53504A414099BA8E0CF3D2466EAC17
E200523B2AECD6C05A0A8366D4EBC86B6A13459942B6D22E4C45DCCB51687CED
6E30AC81F9D4EC6938A88954123ECF3A49397E241F49FB97F33B3BA1526CF981
1AD86690279FC8F5B0F91515F3FCAB2B921C949D1F84FD665C1D5A0C51615A5F
3B4CF27D1F0D909E03B25DBD0D8BB48B401A0860DA7D9A1A42782A51E5A8CD66
D97EBDA6303D6B743D99C7BAE771A17A71E849D54E46449EF06590F446448C1D
ADBEF2BCEE271D2BA5DBD9B9FAD51EF554621FA6B22F0346F9E6D4462EF7D04A
D049F59B37173C41AA84CE0F9F23CEE493004F0FF6FBF7E07E10FE9F30998217
113414AF854A8EC0F2711377AC62CED5B7B7FB5E02E4DFE54656D599F468223E
890F0358B384757CDC3F750A55BBBAC8AAEE632092CF95DCA99E30DC632BBF73
D29C7628D65628FF82CE9E7C4BD5416F70A4D5AE25DC5718B8A52EB4A8A622A2
FA90F0CAF7ADA8C1C19267AD441581D7A43EC3324CFF3DAB7E1125145EB7CC5F
12ECA7099BAFC5493B94C8F4D2EECABD534EF1C1DB0CDB39307FBDBD27D98161
75D196832A211B6AC3FD4E828D323882FB90B91DE0892143A3166E8BD5473A1F
89DB490A00E006CDBF5C2D61B80B78261A2AABFF7502F7987D3B29988CF128FC
9E8B6F106E667F9DE254976ABCB617A9E7056F251C78C13B813E841A31A917ED
56AABE87F5FF7CE82821390B2F3CEBAE20DBD2518BB2603248CA1D44B3B6A5E0
8DDA52F4ACD3B9C99B000599445FC32005C6BE4758530F02C10DAA800CFA681E
ED47D2914E385942BF82AF3E3DC997624DC06C800A6A5A4E187D767EDE855B52
0ADFA07DACBEC45BBF0C25F0067D24D048B1ABE83933670E389D2A9C9BB8FB1B
2B95DD8964B1439F860F97BA62BABC1B9A143D8BFB86C713064A83F6DE23CBE6
A40604C8B8737530AF7AD352563090AEB348777437CF8CB7DC821CFD8A6B5C7C
35A21F6F7C9417F1CD89DDDB2D5CA8BE744B66F291448354DDF5DEF3AED93DB4
833D4DE82386676CAE2D18BD420840074EBF904E6C116D035CF8FDBA0A9D56E5
EDBE7C26538B37F3E156F08EE45F50B084E04E02D80CDF930AD2B59B8A9BB23D
4218042307E484EFC0157825F1BD65C8FC07B7FEA769AD6DB847C5FFBF83A913
5CC1969F7469446637D795510E5BFA475E8051C73026B1B7D86E6381406F7F4B
AF61516F52BCA6767BD06B21212750EA63E8F0CCD7039E630D0A7BB94ED4DD30
7A0797DFC4C54F82A3ECBE14A62F9F5823B738044BA1025DCE099BF4D95511BA
34BC052F103C01C27935E0257A091F32EFCCFE91AEA6C7C24CE1C6C08D077D34
0DD31B820E7D29CD63E90158768D48F3BD89EAA11B5E8927F707C666AE2004E5
4119F5B53CCF11576A5B3D14BC2AB8ED858D43F4886764852E31AF8787CC19DD
310EE1C9F89F88C9ECEBAB3E8523FD07CA410186F4CBBD66C3960BCB0E709B7E
FA8E56D9FE5CCAD91738167051920AC09B4478300650C4AF92DD721F24886CD4
EF6C1BB6872DE50AD85973E6042E072E91F7CB647E1131C0CEE91162DA66C9C1
C9B3AA188DC03492775B2B72DAA50008CE4A663353A1DABEC3D8DFF5DC38E426
811BE86A560B49BA721CD63D78530AE76BA7DEDD798652E630C7BC349B1C750B
3E0DD99ED8D82A522C41BCC160FB1D79C130216C2D17C277A517ABE9CE3C6C42
0F53DD1BA44D239C4AE71B9046CAD6481CA70EAAA554E64ABF5421FD338F17B5
62E955B4EB29D90507157763E7C7FB79F2CA8E40D1EA9BE659A826636367AB1A
CE2D780F5624CF53DE046A36EFB35B52F057106D4D03411CAF6FBB9734125C5E
45A818F41A007E6633446E22C61E323845F40614C39B453620EB9D20660B3B06
FCC6345DF34AAA57C2F64F2AEA6BC668325DD036C3350694949F1BD28A6201A9
2B2B37B9D012B8BC5C0BFA96DD4C0D2CCAE50A521AFD2BD258E120C3C1B53859
70FD8EDB02B3CDA24BE5B94F4D4C0FAB79CD0D3E7F885E436E5152EBF506F0D5
0391833BBC2230B8BEAA3ACA41B0BC7E59ED22D13CFDF599DD43370E6F28DB5D
E10FC22431162344AFB0255A91FF7A44F6B705CA7C0B29FFC0A2969316236284
A571A5A3063CAA9DD92C9048EBA4095FA05B12F842F1D6B9FD26377E37FECC26
324BACBC164E0F36E5B0018C20AB43FB4C215C95659DD7D7207F871F81544F49
D54A45AE6D370441DE9711BA3E39071FDC2053887F68EED03DE18F36FAFB39DC
B99A05EBF8355A24879DA552ACC6FC5D8C67AF31DEE2B4F08790D16533E7043A
FA55C6AB9E1895E036BA65DE15BF69090B742FB230B21464C962FB52FAE7BB7B
1AECBA92325205A34B76C8D6CB46D3A904810C8A2370F4DB0B95DE9F7CC4139A
B27BB61B4A077FADD338C2A01580D84E0135EED2F1918AFA8EBF05E3DC22E084
326D3EF8D34CEBD5EB504C836BD4A97F82516242F03398F33FC863BA14FF3616
A85AA38A1EA327F5E48E1F448F2C216F705FC9CC2064EFEAD7AC8A23E53D9E64
0BA6D2C2D5C7681ABEC649ACA256A4EF75C3E09284C1B5477518EF3FAA5A3B46
43E02D3D8B6ED605A56DD7F4307D6BC1D1C283A4475CEAFC7A06E8700632CAE0
5390CBEA0D372F447F46FE7BC05274424CE045BA4664FA7011D8BDCCEEBD4D5F
D86A6DB5F5E333C4BE1D31DA0BA8D50D2356ECEE41D405A20F440441D570A744
863FD8EA705890890AC5BC2F0A068C72BC969FD1ED07778DE2F62958FF409D37
332AA4BA88CDD0593B7DBDA4351CB31A8006452979E48AAD6DA7B176090B0DF4
FC740725418AD8CCEA562E4CE72ACC8E9F39285860C9D279613FFAA3D65FFDAA
B3B89F357F7F55A64E7F31D26A76333D3B376B4CFB907A890BDF572C18A3E5A6
AB73502F8DBA3FA0FC5BB976307B4CEAF35B050EBA8F84D6A15310CA67408A96
2ED00F813E49030BF706340FD78E51415C1BD6694F203DC7EC6CE32D227A9535
3419375B427BE239DF0B84FDAE2A7D3B6F925A272B7CE8177DE1AB55FEA2AA4F
B28CD56DAE1865B46C21E0E7B7579E3BA9DCE374762E175DC3DB37DDC78AFD36
62E3ABA1A7191AE45D1106F2F63B7E9605F16FD2822C03FA3FA8C7DA7F18748E
4D1AA785D33B93DBBCFA351166A14DD79A4E67E7A55169B3CAC15A2E49B48CF0
46E7406634CCCCBF102AC1A3D7B320B1368BD5DAEBAA9E03FA141DF6BC5758FF
0C9116BB0D00B6E24214CDEBB2918B94910E95FD7B7BB37C48B7CC48D99DC9AA
79388C90BF6ED3A74144046F8315AE5CEDB4995959F15CCDB5EDF6FE98CC312F
FAE07D32B62AEA32B58B8D127C00F3B953C79BFDE9BA6357112336162FFCF2F3
B4CA7EEA93282C84DC2FE3528300002FEF053DFECF68261DC400897B7D2AAB26
947F2328348B3A1D3B71F26F2F83281B0E9F6BDF96CEC8F94568E2E17613658D
CF3506FD4770918757F063816B1B220AA648F5E0E4317BEF25D7774A8D71DE68
AE2370ED7DEEBE820C02ED2F967DA29AEA44A0C27A84858636023DEDB0CC9AE4
28714DDD6619AF0785E90C2B3923E66C5852C838BC3BDB4D669E857C7280605E
DB2F5D4B592A9F5FB13EACEB54AA027C1B87380F9EEF9D52EEB7B5D84166B43F
CB760375D26286BA01C7C0E4B8DA4D0E747CFA9674F943E7EC7A73805701F9D4
D8E41700842EC8012643BA8F7835F74B4A2304CDD678E4F19D99C7D92818FFC7
76DD40D3CDFD8BE52F1D15141F83FFE43502FCC4FDF3704C77BCEE0DD24EBF06
6CE4E6A9D2F746A3322C021122E962CD756DE48DA93798FBDD034F46A83A5D54
2924F4BF5B4F3426C6C6E12E081339CDBD42C14AE6491779055E2894626E6C1F
E4DF68E66F83EA22CB1B789E53BD8A5AA2A6206FBC132F4ABF5BB7758DA17186
D59ABA75B742EF3F56B0D0815CF27EEDF796390F5E1DD39100C3A762BED4DF80
EC9C8ED45E90258AC675B91C0B18B313DC58AA2EAF631A48ABE394668C6F1CEE
9996E7C272FB9E9857356C4ECEDFCAAE74590B3DD20CF2A94067BA511DA13FA8
0C3856ABEF64B5B130980FB2B90C105656270A536E5DC0236DA2461299312115
2E7F2ABBD7B1080089A09EF7487C5B23731B3E3C83CA192E9DF3F7C9026CEF9C
E1362B6AE20B9B066AA3C20FDEB083F3B40E5323A575E10783F79F90EC2C2B43
5FD29022D22971774ADEB638DB46DCCB0C6BD2192A98CC4896B1EDDB7105AE49
03D01C0D1793AA3387F7383D154BB5E6A6BB65EE479C6E657A4D88741DE590A6
70456AE85070F083D988C68A2F65C6E8D8541274CDC40D332113F623E805210E
615B56BCDDEB8E688933804EFBC6E426304796BDD04D71E18BF921FC713F42BF
E4E2CF74BD96A2FD51F878B3A2F97270CF2AA8ECAFC79BBBDB66CE1C1A436F0F
BFE7129B8FC87B571B2F7CF7AE4BA146ECD84F0589A6F64AB60856430F4F9281
E132BE2BC5BBE97643474FE728B61E667F4E8AB8DB64EF08CB2EAAFED53C1E1C
3A38EC95E1EA1AEC746CA2670A1AB63F6EEF2B51E682A7ADAB7D3BB0F9DC7CE3
1CAD25EF631C48E3B2431BF94983A0BC7DA6FE56FB44DF02452CC4BF7E37F911
7E98A86A5B940BF9377C91F9E00D3730EEF2FD1B1017CD1660945C1144C7F8E9
2600D0BAA927ABC183A538251EE11191A17263B9F0369B66BA6CE4410896ED93
56E725FC6534AE325E28DD7294867052D0E38D1B00CF95E1871732D62B143DE7
75B9F4EBF84063066BD0B3827028E316DCE96BD275BF88D7E1F8FF373ED07D33
E42FF9C37B2BB9F62BF2869A9A97398E0C20F5F017CA9DB7BAB3BAB4AEB5CC39
3738E3CEE8170E3E5917902340AE06FF50A2EF008455CE8FB489DBC578757887
86EC7357E67F692A506C0895C7BCA510FE3F3DA02EC5384C4E5058FECC5F34B3
808F0F3C2F56C6D7B86A1EF2651D54A62141A81249ECD2F1BA2D3363EDFA1FFD
7BC6553AFE3E7BC6F4651ACE822EFBD2780E3A78CC0F9EEFFF109D3B8A2E27BB
B1BFE83E3E95F08F5FB761C442515ADDF084844FF1B1F2792AB399B96A657720
9E606453DD6A5CBCFD4C3339270D417A24C0489BE85952A6776CA88C806DDA31
F02F8D6EEF3CB540265026F4B11B57E008B91248D7C626AF681A2EBB0EA34CC4
7CB9695CD7C3FBC4C0740231310CF9D00842C5018F4EDEE2FF2151597C9E0F7C
D996E84855C61436E2109EBA9AF8CCD5C58B548FE6133745BDA9A8A40AD62AEA
3CFD663916700C95E0023599AD8BF5E25E4DE885B786A3D5D0C5AC216EA68F8F
7D3A5BD929EA97B2389A6FBCBB36B4B1996CDB1B3C1B48B24D078D6859CF63E1
A38F66095C6055909723606EF8EC352745F432EFC46FC8BCA434A5264E6403BB
E783360B9552268263EF7E100BD329B282FC53B9F4E7363300652BEB5E6AA3BA
DE06EBB5886888D4A6C5C7AA46BF45AF4BE807752DE1C8527662CC0F00E35FC8
D748E1071C14C88C17657ECA3D7ABA56B8ED4E7AF0F4D8740C71D0E6305207F3
48FF29A4FA8C83E4AD433C084D0AD5E2164D50C910BFA8B8E47B79290BAA7340
52AEFCAEF6AC0280E232C2C6F04ACF8569A9C0D1F476EEB0ACC357ECF91A391B
805694B82AC19A860AC497B2126955553D214FA3C5F0785B28C3DFF94FBB5CF8
3F65A6F1952EB4096C1B91B6657D7E7A31D622120D6EA45038626FBA51B8409C
A6FA9B2BCA1B22CFE04283F4BCA5D04EF4625F1F84251854E2CC335CF6F4383F
779695C9A969DE58BEC9A6FBC5BF3799D3C80CBCC50DBBB4EC8284631410D415
6C420D073AEDA8DF21E5EFD3BEC41F18FB8C6D2B457E60950E1CEE728B63A414
680F9176A05F32B350E2CF46BA0E8D0120B84BCDA18ED7B135C3300D4E6C8B68
6A49D427CCD0DA48434C78F788CFD92119D251D849ED08C441FF305ABE6ECA9A
6742BCBFA2C222B3D112C7E51C107F52B7D55F12FF9C24330D5035BBC540EEBD
08C9748D66FF8EF5DBA62E0596B3D4677A6D2AED73403C90884F55AF936438B4
F3D71DAFEC73B8F3419AF9EFF1090AECA836F7040563F49A72042C5433384490
65A454F82E6DED15B32E690092ED817D05A4BD642DFAD8B91BF0B9EDAC698863
266FDEA3811A654B754C7937F67805072D3DA5C1709C10AE9582358A528D56A6
FBE9F3002E56EA59E9C2459EEA5689B51F7BF097E4599421048329FB29BAE351
A07AFD9DD51969162F1B7D62625512150439080FB47F44979B717E831CF54B82
8E5B0E2F7117C021D51E4F045880A3A20275338E0B37511CF3AB6B7EDBB237ED
747AD16E7C3E36578FBF5523D79229E9BA352E4193A44EE745F76030D1D23E24
28C6699442358D5345D634EF0886A20B66AE9F66253C83B32563E2C59FAE2822
A98F20DE1C232DE21AE165C0D66A993ABAF34BB243BC19DE3909DA1132635136
74BDEA10C3DA37A73F99724821E1E756D3DE2C1A4FC5D4CA0AE15AB7B12CD019
B4AF7582590C7498E5BACF998D2AA2DF53F6E853C7037FBB63DB74A5D79874B0
FB1B07473EB703C2B27847402CA4B685827479170AE5FB73AE47CF016E3B3AD1
A5C090108D4964C7FD5E57B7BD2760BE07B7B0BF78906E3F8B77B9C2F428FAC6
8C9AD008C5A1CF559D2ED72E787FC95B7327208EC71CFA4C4ECC45ABE590232C
D6C8E17FFC724B0190424C7B39DB0B5A2D04D05046DE4B8AA759050A4CD64E67
D56C072DCC9C91ECDEFB26726886A75650C3919962B0139409A473094F8DBA70
8AAA2C2D73ED562231D19C05287689E23C19E4E8BF0C3E801B7169500510B895
BC38114416C15FF984BAB090E3434034B8BF9C336D7991B97D2C102D9FAB5D75
67AA288312539283644DEE44E8532B2CD4144E4A04AFE4FBE09BCA323D5EB7F8
A15D60587FC7D23BAFE4EBF1155F34FDD9BB4E925596FE4DDA936CC612251811
151A57D02371497BA21EA208A185D6B82C973F1AE4710345CA2E6113E992D2BE
44DD9B12DA394FF35F459D66253C83B32563E2C59FAE2822A98F20DE1C232DE2
14CA3BFE10B6C23F1C7ACA39A6117CE4DB91E197AE35B8C909DC6BA2B619CC53
C1F03C57FD98E1AF689A22DA21BD5790E45A8947618AAE1C7859CEB157765BAF
324BEB305CCD9327F84018CAC0A2ACCF03FBCF06FE08AEB64111949012E5C307
F7C8B4778CD3F19AC7CD4C92632CDD08DE2D6AB5B07064C07CCE414729718484
51A245DDEE1287636BECAFED14399A3C13196138C2D5C101C31426F3B87D58F4
F7247675B2391F4610A58C8A18DB8D5FAFCF9C3C1CD422C605740A8939487E26
BB9233D4CDEAD4CAD6B2FF589643A3620920A5094765F358F9286B89F0EA9625
98076D9112F645A13DE01EC3851DBD730444222C71C6B0B117AA039E23F4CFC9
1B0A48553A7A28D10D30BEC350358D62B7B015A019679B0B8E742902AAFE5BF7
1D02EF0130AFB075715457789E55361BBA8D8DD09C0A5C836D34EF4DEC34F23A
4282E1448187B3AA4BBE05154255A3335FD103803857B8046544BF2723FF4B45
A65E172A74C3B6E8CBBA695DB33CB2AF185ABE396DAC18EDC512CA317372060A
ACB1AA7D7D6159E8D91210F31189AF6915A2DF244DD56A20E9858890C7992E51
350915D1F093D02FB419CDEAA8924DD923B74F252664C67B3E19FA3B61A759C7
07BD7DB9FADF6936E97D67897C63023666E498C82811CDE551ECB3C8DCC93024
F925D8D573328F52B884A074C4C4441015E906C4412AAB326B5071612DE25916
753BC8C799498EA80CB2062F319454FC5E820217FF657475174496299457BECA
CD36404D977873FB3095FEA499DC328054BF07CD1CA1159872E9A32A5CC0D529
C5B2F5AA944765B7D49D7C68A5870CA8EF1A679108324081979ECA8231422739
C0C58B4ADD86BF520D14399072B08EA7FD325496990FE31E58128CEB7E5C4C08
890DE811B5C40572093246905931BBFB2A882A3A2E1A70B7ACF83DBCFB129809
56BCE2AFF75C864A8B5CA2CA19BC6268B672E98D6D3A64C4D3C3AFAD08690039
17657CFDB94695D45D8582AE345AFD978844C404A5C4560EDA692386F263A75C
1F6ED625B99CC9C3E03F133B35E851FC4F6A4CDF352FDFD48E76C5737253FB5D
2AE4CAC17EEB19D151D290E50A0B9EF24A5ED767F4D533BA6CDB2D367E68EF2C
3F555A3B98ED30070CE54B0FF3439075B5E52199FCAEFE1B7B1EB81FAB00C2CC
543AC029BC34CB4D7570F70D2BBA4A565AAA955C4952C7F4E58E25D36C3E637C
C8580098961CD6EFEBC99973D55751D4090574A9C670A2833CC6DCE45D2E4898
BBD96830A113AA11BB3BF446C9FAF0EE7EE51BE13F6E5753A0795448C2B1C0EF
E8807EC46C97979DD115601E72FD549E4EB6220EA5D130F81567439AF718D3B7
B02416DF5DECABA0C8795C6B40C54DAC21C52A4D4991997862933CBC859C3793
DF3694BD7EC9430C3C2F7970B696DA577C214524421383D2EAE1BED5DC111286
EF517780172D12AE96F5D1058902BCD28BE99FC267519C0658909F89D820F682
0DE4D520CD0E02D3BD8695B3C1D4229FD5F78A6F18140266AE1847B090305EE3
18A59138B6572992B6C7F6E007B4230D1DE688A6927BC77F937AD3906040842D
63C0762121B0743143F2F1002AD7D2F05EE659058620D20B528079A9B632488C
35752639E1A74D9676E4E99291D39B66485491936AC3A537EE237E43D40461A4
586338B4267CF35CD7820B221FE0B71A0CA584024C9645755991C5899741440E
8423E5DFCD5FF7BF21EE316AEDA07CC60838D9D4E123EE90AEB355314E4E38F3
F4C243CAD31D8C5F9CB3D02B702973982E4348F14C94F2C72E10C5C8797EB6A9
7267F4C63D4093BEA8A34B315CEE932B40ACFB814141805DCDB4DF615E2CB649
80C415B399C2439BDCE37F71AB81A3D6CC3E039BD09697734840F8BD0B8BC985
077DDB844137AB35E862CECB9761D4FD3514C704BFA81D139D00B45FD7B2E7A5
C8A7DE0B0EC099BE360E91BEAC15E99FDF49F9AA3360E930C6659B04701CF5DF
DFF007E08B336202E8993CDEDBDDE12D8CC39EBCA0CF65629BA403EACC724936
427DAEF1407A14103CC5FC9A3B74817FD2750F9C826F7686930A54DE77FF5642
8D13204F7776983DD18A8CB59D26B4FBF514C6B17D86F8E50A7A659D9A45853C
24DAE4C4384D6A6C0B4E1A3A0589E2EC78B6AE37A5F519398B89ED671BAA88D5
1C50AC1FF118F21548D17AC5E87463E58BC4780AF14EBBF368105A4054191383
E77E963DAC466447028F139D9C69A18016F95C6A212208CDE1635F4E5271224C
C19B6D467B1453FDD0B65D64E40E60CDB474EA041DBE2706B978B8714DEE3826
85556E5FC2A8BE210B248F50EC7289139A9BEB2767B7B31EA068C594A63173F7
F167F3D6FE90A1B2A8D8963BE6AA380A9857E732A234E50243714D4633CBC9D2
C6BF444FE9559A1CD46A71E1847119E030D1A05C8502BF810480116C42EED0BE
15D728D7D835AD3FD6609431C05218420DD30B791B1D7359CEDC67F92DD66433
64AFE71B5A359C4A0929163E8EF660794518DA443074C7F88165DE9C1D521D4C
2281E51B4ADC8D225B69687C596314704D7A588F9B470842A07ACB7E451ABE01
441293F83C1D99106C6647F076D2C8CB18CD3270FBA0991424ED90424BE44A43
32AEECC6DCD8E322C17D4F419F2BA79A53D337A057EB0EB4DEC2D9FE9830AC8D
837B09B55A6F495EEA6EBF6004E2D0DD3396B56EEAC2D1F8961FBBD25236B351
33DB39F894C421CC19AB49821975DA03DEDBC0E85B4B6B26741DC8FF8BCA6575
A33B49AF3510245864DF8CE0C03F8A6ED17FEEB5A6BAB4283694888726133F58
AAF4ADE4F8C24106E0D76B8DEDC464BC4C4261AD72D8A965020F185B10B98514
C1FFC6EAD7312BEB7AF06E6AC6F6769F21B3552E00BF22AE6D0C759D6FE45735
0C23F195ABAD9978D951090105823AC61EE692C31077AB2AC539D265AC30E90C
9E8E79938B34F7607861CB7A51E7EECB52276EE252344EE3024F20E6874F82FF
A0929D070DA422D3C9B3F98541C5E6704C90D2DEB61A59B82E18B27125B8324E
C8C93B7A9900A0BE176BE30B16AC917998230B9C7606CB953B09ACE659105215
33282982B86C3E3D98E707C093BCDB1A761FDBFBCD57CC271657BA4B248E6258
50CD18B3174AC4E4B00BA693AB9974D3747716C50B246A7DC70C99B7DBFADA1E
01B81749EE49A3C9AFB38A6CA58290D557AFA6B2F76D3C2C0D7C2FEF31D063BB
2E9C7CA35B39296D48E85D50C0FC3214B7B3EB9007C1D1F6E2D0F9799413548F
8746EEEFCC6E23667A27FC59787EE35CB1D34A7A7EF319C79CD69752B28CFFE0
9A2F6B8CA1FEFB245950BD9C192E9D6D422466F04667B30FF8E5CDA2B6233A55
8188EA259E2C2FE974E36EA0B6ACB196CDDA2E2F15DDF58B433A32ECBC5BE806
B0F9CF07D37C2296B24B70CCF14E43979D2050F407F4F7D0E0F11B9EA52E15A1
7FE21F478248CF21986DC483EC4FF27307585A419F25631C7370F75AE8C56D14
6650BCB958319D356A7D98F46EEBFE36A6E658BD6D9B72486CD5D51EDEB31490
6E672C50A6E3D62384F9ECC1679B6514C107D7B3A617C8981BA818726C9C67C9
5A518A4EDAA655ECE97AC656CE8F1D4481686CE4A562138FE931DFA479239CFD
405EAF4515BDC13C37307076291A7C681A791B4B6142218E4027A52E94713F22
5EC79006115E6303DEF08C684D33271412869C250A7F02D6A02501759CD7C259
22EA50F15DC4C90E04DB61386B54C0010C7DD73514E1E186F08F7ECBEF07B3B4
47F7AD413931563256509346128EBAAF7D11ABA3DC2932E9D0E7C1FB551EBBE8
B2E16CCC5EFD174057C781DFD270EE42482955C664139419373923D5BE1FDD29
2F80E973E277DF10374662630F09BFC03B3CA25366260E5E523AFCCEB47D3AF3
A361467D0F4BDD30DBD01665C86A6AFC2A7472886962857CE95295B3979711C2
7FEC43D0CFA6242F461B0A215CF2ED860038E557CA1AFF5F39222BC8F301C348
D1BE7F78CDBCE9F4F539AB466232DD51BDE9E853EC2FCA8C1E97A66B2E9B937B
850D91F0FFB534E8E9F4BFD380665DCF885109D7A8B27470B255CD5EB180CC19
FB8876E337E4ED41D06D641B79C2F10E80F3EDBE6C28E52064BC4B25E4FEC88A
F273EE3E019294F7FB02668AC5DE573D5624C73FBC1B112A60ECC73EA9E5580A
8247A32855A2BC62A5776A594A9275834F2E56C9A5C9BD35B8B288FAC8A75C98
4FEAB4F519600668E48BE0C7A590D6C817424EEB8B3E3595088CEABFB137634D
2AE8694C53BEEBDD15CD8A4E44A16A51FBC10F2F4BD0EB7475E396C85116AED3
E65CD23969EF9E387BB3BE62A351C14DAC4BEA7FB0FC7055612374EC339DDFEF
0101A9CAD4EFEA168F36C4A2E436BA7A1D1C0F5D1533474C1D92757D1EAEAA55
B3B1D8C3D98B00B67B9CE1D0D743B5B27A58A5F889A5F2E972AD3393806B86F6
8A2B24998E20AE7ECB82DE000B1786D4729F23E8541AED00A23BA814323DA321
910FE527F5A708FA4B252278EF66FD1C374BC3CE94A6AC6C9972B5424803723A
5D49D049F420AD6B44A895296943EC3F4B4105325F51ECFFD855678AB7EFF0C9
50EA75651664459E4039F1ACE674E2B37F9BD54F963CFAA25D149C3E8D009940
1C8BA1A97F7FBF66B790F7BD4219F49EE8C789A9BC7F63500C8A735DF316A686
784D358692A287F5074A8C01BA5518911789F7767BD3A79B8A49116A09BB7F32
0F0CCD98F2F7DF378E1BABB3749E1281DC5ED17653DFF7A81FC83C826A94C6EA
F95993D18E767B0102669CB93FAD213446927A539492EE440ECBAC1255CC2BEF
4F604136C32351E839ABB8FE5B57454D8637E18847234F5123B210DAD86B6517
A40DEE9671F2B71BEC0187D666FE6E2B211C3BE191D526E21F9A4FDF6ABDAFEE
05742C16C60A43CA4E1A81D868DEA0EC055443908339F5B2EAED0B1EC7224DD8
0E2F09AD8AD7B50517B69757286D4F5E833237ECF8DBCE1E5C0EE4A00368E9DD
51451235FD5D51CE6146111E4B69054C943C610DF3668E53820E3FAE15836C3D
0AA9C0611FED9B67055594D1ACC3B0C201C64F56CF4A0535541A4E6C90D40570
0251FAFF844A26E4A54FE619FC509F828F8ADB21B3C7D1C4B32D8215C3F82390
994C4E64555B9F3BB3CFB809EE9BB3508EB12237E53FFE4D84D0893A31E41E4C
FA0E9F124FD73991B3D28F999182918633C66D46CBB936BBB429D2A39239E748
FA6A118FFBFE042B95362C5B790AFDEFFD04B04AB3469F3235C3661E84351914
EACF7842A4BE1404DC599682277BD8C37DB0FA6883858124FE6C2AA0518EF8DE
08645381B2D8DB1A156E9D24622012A917870AB47B59755CC15D58BB4F31114F
6BB6EB3FD64AA40D1E89750D1C3DFB6CC573266D8ACED067119C4592AC1DCD83
087C2DB81C2A704DD59F00B920D3C62C04AAB48F6BD8C8BD63D843881B922867
16650CFDA57CEF6889E6449AB834ECB4ED9CD1AB8488A7787CD10ABB9A367CBA
8CED2BADB20B56779A35F4A55A241F8CC5DBE1FF101A0A492961BCB7BB286A9E
24C566824C8AE99CCF0EA0BC1407B202F3CD1EED5457A7323AE9C2D18348DE00
561777DD1CB32951C46E692DB496C9CCDDD789D38C643B17E3100DD9DE9BB0B7
F6E0C938782A18FA9A9882C955044A55AB970C2E63FD9BC220C0086EE913D280
C698BCDBB8CED18AA5245E64C93397338DE5C961B3AA70DA22E24F5D5F7DF0EE
66CD5FB398D4C89F58C85445101468001F40721E8DADD92F3FBAACA5F6565B96
6BF65083A9120FC2606A9025D489F792C81BEDEFC264408C6DB1AA29867BCF8B
D9D7BF72E096212167ADE22B5728F5F9B1E60889D97FAC2C76ABC354114ADA73
978E9616FE099066621A67E74232CE56676A90905DD3ACA41690216DF0AE3DDC
A1D950E0F545D4A5452C2185568A0A17E49A3E72B961942B30CD88E5F6A88D83
9EADD20F9A893744085F176E43E1878F8C13D48DBC9E21BC24DF15E8660B29B6
0E86360C270400BBD03E5141FC64FF28F1CA6D4F1BEA1C6401819082548F3E63
19F0426619FE5F40B46BE7D221A2E4C4E7A8CEEB81C94B032DBA0F9B5D7C90EE
C6B06D7DB4B3BE25BEB7D5C5E76D39946E99ABD6F2B63BDE0EB1187C1B15AFE5
7890AFB517178C9DFE59CE8B036E3B067B364E0F73840A54BE16393EDE9646B2
D979488D756578B11218BAEEB731C4CCDE8E30FF5A0635997288AA244B3925AC
7F30A65A71B1418AC11E31ABD7ABF79F18CC4063D04D66E8B1D1A629D536AC5F
EC2823BCD487BFE8E77B17095E3FF37C71FA95D3514F04CA9AB516FEA662832F
3B2703C0ABE5F1A7A225BF26E2AEA0F352B9C950B47ADF65091016FEFE5493FB
EA5FB1D26743416B6D20BA817AB49ECF7ECAFCBA2E54C16968D6B6BA19ED3CF5
67435DB54E9988A28C5262CBEAE15984ED81596EB2039CC1A9D520B2D76A13AB
49D23BBBA5D38653AAC7B813F29F4507177739FC754BF88042FD98C3040855DE
8339B25C5125789DF54E14D191A136FAD0C22A1771AF31FA95258B6F30EF4C40
A9B1DADFC6C5A8F9857E1F4EC4E839E602697632502CF001309841CAA6444E74
45CE86724470B9BBAEB282D92E7074356E75788B2AC966CF6AF6E8408A0C0C8F
F30B6A381975E9A01692A603FF9D104723BB0226488B47A4B29058841D9821D7
F955D3824CB1754278E8D27F4879E8A3D878ADBAC5A57DE82640FC79F74410EF
8091D43737E92B262075077004C706C53E6AC0E1B7A382E27456DC15E705B74E
465D979EF1DA4EC1F2AAFB4F0E8AA274B3454B56B43C08706308E3C80A63783C
9D73B889BA71F673651E1A206AC0BFEC470220B30311D839D552DB9A03378422
78F609DDBB9635FA05D1A4F2A6BE0619507C2BFDFABB77DCBF4D6FA08D728904
1BCA4A09CFE67B4BFF69CAEFFC61A08595E7237DB884C29DF8F410C6BDC2D8B5
2CA126770680A39B3D2C30DF05EB1A79526FCBFDA55225DFF931D0829C44BB6E
3968782B99167D293CFC256459A5991D54E409A7FADCFF523F04DB3A3F08D190
B26CBF3380C3CC5960109B88E92E24242C086E4EA3FB29FD7475E7CB2B4CAD2A
774D887AE0A314B5672D057161AE53B04ADFD0B53E264882DCBA6CA9502589A6
24CFCB41C4AC207EB7DD4FAA980FA086D3217FFB63ADA72BE6FFA266325FE652
EC8A60F81FD7FA419FC0840EAA353AEF3EB31FDB34DD46571504EFABD242CC56
3A2608C0F950DD18B50E021EABC346E3B56F4F01D34198775339EA0306FD8780
C5811605D2FE3A3F50C03E656ADA7EED228143A09C18C5DDC67F6C2037E4A9FC
C48F7210F2D5F416063DFCE7E9FB982B84D838B75726FD07CA410186F4CB6A10
26C04883E82937A68265250BF56A5BA85C4F382BAADBC279271A988B6B4C513F
F24AF61D47244F07873176DFB86445E6645858493B0442A2A6AC5D8F6B10F257
18B71A80A04F801482C02FA5E894665A78C5A80E0FCD3E244032D93FED7C1E20
AEF820C6095F9ABBC9E77FA3E38D746F163FE8C3AD1A32039E5C5555B3CC72
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE3B67D0FF6359D1B6C1C6DA4220428777EA791A503CDE266
386B24E0D7FC0C19F54D39D2B9223D466810564615CF6EBF5A75BEC8F6DDDF38
26F6A75F7C9A433ABB0C95B150D21DBB43878E3EF527976A3A2433047A05623D
54F22D062F633C08A3EBDF22FEFA476B92D1B05B8667CF563F5CFD60228D5707
0FA2674ECBFB8D84E1693A5497D4575DEC4114A0B80027DA61B2F65A6CF49F39
F1E6E57FFBF72587943DFDB4C686CCC01181F81BC2BBFEA407B161DF19EB30D6
B833C6BD7BEF204EEE7DE594996304FCB156FDBBDD3BB4FD6F05B3768500D493
3C6DED2D8A5F72C73CBAFA2FAA8CDD94167C079604A40140F6407E5E01F76001
047F1104678818E581503FC8AB9066845C49469C8DD9BE9E1D1EFD108E48B50B
96EC6B151589DBF511027C4EFAE936C6DE3091FC9FF4874928C24DCD45E0A670
766AE6F637E7E927C3BC72694CFA049477070B1563BD3E58D77F5864DBD2598B
A5AE096036CC98C5B7355E4BA82A31FA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A22FBDAC3462B46B6558014E8D0E40AEB67D4B05
540EDA577F37DC3B4B098F891DEE34E77757981F14368C4447A1669DC1F91EF9
13AAECD018B2FA39CB11B65F91B1AB66CFED8347A0959261F9098B7051B69697
A40C94D0AAFC1CEE5C1699FCA923AF2346E469D4BE600409713AABEDFB90B638
3FB3CF998B84796AD4F1646204CFA8DE3949DD5EC2B41D526D99AA5755779C8A
9C3CCADBF5ED2792209D6AE5592E6AD3B61F21E7538FD30E60C016E75D6F5312
C6BC0A9F68DC3EC506E832A50B761225D8F8171D54C4E3F0F2F90E4802B8C7FC
07C8A3131354A9B1FE313B02C4F81403D3D720606FCB8A848257C973C7F02AA1
1E75FA45E7C0806AC25DD3073B09D77F9DF706F3DD0552CFF8DFBB285BE2E38D
FB0FA1828AEE4173EB6338A0B27A765CD10F6029411725031CCC051428183423
9AF5522AA63EE771FA86C428F1107AD33B99E0CF10C6196037A77C28CEF5AEEE
325714CB9D2D3330ADFD7241F285D511A410A3CDC14EF7D1F6BA8943A6C10B14
12E19F6E8A2B7DFBC64B918981416DAB7247513CACC13A3D35BDCD7301307951
BD078545E531FD18CC11758897A26FCC09D1372992973D9851486C475503A51A
0B7FE73362D1F9A0904081EFFCC010D53C07AE90526031B40619B4D27AEA56EC
B7026226603DA37D8D9291E25AF279829F8D47B21D61CF2149435B525F265179
CB87C637856F97B72D77822E9414313E44A7A40A47C35785CF67C46F9B8F3AF0
43C136465C5C6D20798F9FC389979AC060DCC4FE8B8A73651A2656B8026A4CC9
736BD97AA0EB2325FF4A6F92E354CE628FADB2EF290031D1899A47E6E69EDB17
BC08CA1B092D4F20BE1AA0898C847E21917F8043CBFAD9A3BADDFC68DCCF67E3
0FC0229D2C7FD9A30D9E8FFAF5AD2B2D1646E536DA046529175EDA9583C75330
B3EED8A0EDCEA5114F1A3A52EF35DE5A769BD499983D473C0C4E869C7F4B6663
05C7B8715DA5EB25459522B028AC8CE99439F07B0F7BD05D1547586057151E55
ED1B3CEEFE61FF22F0F4BF191AF5B05A99494D18EBDAEB99B3CA1433C12DA144
BD79FEF7D6148DF2E66D33BB8F8C6A3CC24719CF34FD462580346395713E67FE
92E10A29755B7D931C221E21B57C77AB32A20AE269AF33DFA9C98352CEC41398
F43EC7B1A3D726B78D7F258094AD510E50F4ADADBE7B6AA958581CF8750580E2
78B37B2C8CA583C534A8291AC2DAE0D8B26BF188F13E7DB85B0ED96CCEE6554C
8FE15E2FE002F6864F759431D75F100C27C5421159D87DD6FC8915278E16A744
00577AE064DD6290B4ACACFAD98C68241EBD3936949253D15CA4BD82179983BF
E849EB24E90A451571FEB2AB01FE3297E81811A9903223CFCDFD83013C106383
AC484D590BAC38547C11FE114DDB4C60BC2BD430ECD91A8ECD36DAEDC7CE6EA5
7574D58DC21DA4D48A6D9E2C730893FE6A9B713B51AE278C22F8B5CC43A69C45
B8ABD9F27B1BD6CA0207361428C07BEDE603E3E94B42B35E7D3F5C51338B5C7E
080127212E2F16428F46DCCE35A95136C36398819571C0013AD3F59228916521
C3B34BF5CD22DFB308091A2268184270A1817F43BEA03E9EA3015BA26385765D
931EA27396967954D128EC4CE0100A5DBA53F60A896186A2AEAFB0213AC908C7
A340BF5D2BA97777C1D8A2157E0ED55E8F75FC5F816EFDB70217D6737C6CBA82
A22C8D118F3CF7E8BF8227CA10029D444D6BFD01A6827F29B47F83E250579985
28E31E320240CE310CC84EB7BA0A46631A8D6F98E95A72061951F951DB0656A7
F9EC4DE1FE74CACAB8771F23834A120A89AC6E20687A2C42CB1999CBD278D1B9
B0A751002A60D2DB230515CF6FC3CBD36E34E31E1F1FF59819709274E8C0DBCF
3B5427578B077B2ABE49E61424C13FACD9E2DFE8A10758CF9F5CFB1BF965F4FC
37FF4461660E341827EAE026CA4E13563916FF9DC71C02C7B6926A9F96341F99
FD96B0EE96D9570F5014D80A9633CC23A2BF812F5C923B3512A2C288136CBC33
D60593B2D8EEE1CBA9C498C8B708D419E7D75C709BA7D73ED4ADAB2BFF5DA13A
02845CC86DD8879C6C09FAB9D06C627DC50966402E9EE311C59BEDFCF5C453E6
B0A7AA1DCB937696C979B2CCA578AE40A266ADF562F0A7ADBD38BF151DE1901F
2744152169D5C6E25A36DA43BC400E402ACA3D4BAE0238AA335270125DD0C56E
DB13A7F76ED7A771AB628F5BB5EAF7FDE53E7901F4E980297EBA0C700B947E4B
853489E7E57159CAE3E87130C13F7C93CEB4B2C8912E7D5FD4285BFC6C88C058
324C768D74F8986940B8B440877AD0B7E29CC17B3A7BBC0B872CE2EE7AD45CB3
85545F68120C641E6478C2D0EC2452034006B7B52134A3C82AB3B28D10BD3428
1026F81189B9E416A8722DD7E33521354BF8211F46305B4C3C326B59F9D7BB76
B792A290B06BB0616A04DA736B6B9308575679969E04992ABC281516BD1A6C35
F4C7F139CEEB6E84350F5B2FFC863841C3DACE8AF7A1C0E9C47F90EA4D199A99
304B26E49A280EEFEE0BE592285AB942311255CF1C31FFC4210D369EF8BE19F1
56DB93BF38E55B5C48548578247A10A7914907DE3F23DDF9DC05ABFEDDA3C769
19A99113325C35D2CCF68D8C9214B9F4EA3667FFFB78399D7F90080AB112BBE9
21292598FB4C1BC2F718D5B2349A96927A4F52992C723B7C875729A48B43BECE
02D455661206A892DBEA85334C49CF90722EBEA3B01BACDC1134B7EF26D10EE0
9E6ABB7CC4A2441D791699DE12A987C5971A6517A174B1FECDFD2F3AE2EC2392
FC4B4493A765F5A7D291BCF3940E43FE080CBCD9326AC00C77BCA0FCDD364F7F
1DABF78B56483C1D48FA1284B023D7274B584F10E71A58A8E2A76E551C2E12CB
71A3BB5F55DDEB0586FEA1170D0B81FE160B0617FAE197F3D1C820430B9B73AF
085C1B175A80E6E5EE9183713EA32CC26BF1BFFCA02021C58D3F549EF15CD086
ABC16890E3B7653561D5E1175C7165CB04EC3A66E70BE2D44D0A2759F4EF9ABA
F40B64DA14B196516E7C4A55ABDD20065D47460D1CCF0EC17ED50B35602C22DF
F98BB615DA3001A0961100A1F849C00472B4866C61527B00F02843D114791635
2B78B94D8086F2B46FD6A73D31AF12E26559A69821435D597420DA06882F6DE9
B9F8E60AC6934192311A477FFFD967349E1503FA2D3E5EE08440AF015F9AC570
2A34B7CCAF461870176558BBB8756757974B781EB37B6D6B05CE342AC8B688E6
F0F05FECADE3223BA3388074BF8B06DC45315143563E32104CD51C9FD676AC47
FC26F58F0683804740FC0CAC7850013FB339EC5690A2097C7AEB8FE0D1B85DF4
2D833AB644804E8D77FE629596071CA5415310432E5218C947ABA4639DC9D046
01361D2E5E9A8BAF8E09F640A59CEC8036D6CE67346E32903183273793363322
941516F76042B61F124D98B54BCA8357872D14DB82801738BA53B2926FF7EE71
7ADE27D75BF74151201AF8F72103F1A741974456B26C232FC6E521341D484BCF
7CB2235EB99E0C24185CAB841FBC6662C2233BCB22591CE00840EA698EA8F673
73E689B8FC0AF1B20CA7B93F18D5832CBD31CEA5DC8B65777C840331BB6CA8C7
5C952DF459063DF2CF5D3E50481C620F79E7EDF6EC596A81275B2244D561A80B
D1444CB09AA8C08A6CE0AEE69EBE0AC5768DAB0F97FDC45BF92F76
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans10-Regular
%!PS-AdobeFont-1.0: LMSans10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans10-Regular known{/LMSans10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans10-Regular)readonly def
/FamilyName(LMSans10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMSans10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-420 -309 1431 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFBD8A43517ED5F05168EBF9D3AFE
25EC2992AF87F286EB5CBCB7AB5454926B000DE86BC7DC7722EA9CC5AF351D71
F88C22A045179501515ECAEDA3F7CF9A23FF4ED29532BCC5A2D9C4566653DC0B
F99B58B303B412848BFDFCDC0BB4CB9FDF30F98236F5A2863FD3E28016CB2182
2E10F5EC6419BBDF2A9031E1EA217B147A06BABF1F87C9585634C5265AD31FFB
EB313C8110270894F41E54896FAE4A5E1A9B04BB8EE53CB5F143D8A3B77AC1B9
96AEFAEB5EA99D855A53026FDEE6A856D3616D7EA42379EC96B931867D9E55CE
3ECD8877C379F6C2FB63E92F146942350BF980AF3D7DE17DC4C2E4B304AFEFB6
F4A34CB06164596B7DF119147C59AA2A1A8D448EB219B2682388F94393CF4D74
532926ED5F2B9D281EF3324258F963D1A460D08DBF08127EE66D40C3C74B98AA
22B9AD6BB84113F84B085EFD4982BFBC507D1215DF109AC39E0B12230FD6DF02
C4B69CAB0B3375C9924071A89A799AFAAC3EE2010B8FC82E42BCBDF021C9DF72
D2D02FBD2CD3E161AF409AFC0828954F2BF56A15E1ABC0815ADB9C244B0AED7F
4B9A54CFA2A286FB4D9DE215B8B5879444B3E683FCAA95D0F1520A716BF2325E
E76716BB5C5DB5600A7CAD11F019AD5B3965B61494D228A3473256E4B8B22A6E
08F055AA199E8E9FB2B6F04B01BC31664D95FE7CAE16648E0344934054BCB06E
44A33F278B8A2215F77018BE752B8FBD6518461CCFAF61F07032398367B284D0
B0AAEF9509F632534C7084BEA8B52EFAF676C38D4A720D4078C0B3B525B7178D
9F85BD44B13272DA283BEA7AC239A3E1A0FEAFD3E9F7AEC9CE3296A054919E74
51FDCDA8344A2E134E285D682648203E81A5343EB6EB96FB42F1034835DD0440
3968C3E86CB7B20B53F9CF8FCB188D635FE58370AEB11453FE69A0DB8341039F
EA654B8FD7323E5536E130FA10100643C234CBDFB8E1CAF1E0C1D9073C3299A0
24F2E4D71EA82005EA002B65E904A046FE96653F266B625D332C961EB94026A1
3E2C52BF1DAEEC9F50E53B51DD597D57B61C96A427B9A6E85E6DCF6D389B34C8
24D359097AA8BA9219D082CE150C383C7A35A06B7C74B7991E1FCE71517AA0E4
AB9AB75715DD53E616CBD344CE7D714BEAE2710FA343A595982F0AB9BFDE1C2D
1749DC63457405359DC4DA4D31CD388EA7D4BFDA5D2D45C0B5F7B1FF17874AA7
CC620939F3BA8AA5ABC54265B68DE81582F0FA4728B81578FC2EB39C989C68DC
7DB84DEB6DA73092F21F04F718009DBA58BF4FFAE24907573C2C7A684F5B3391
8BCBDC61EB37D5A154996A65A1606C0E1387DD54F5C8BD071C4E9A73D2A62839
2368D68C28ED60CDCE0CD13F54F0F6F9B8AA15581085459FE250BBBC4D930258
426AE5F0EE8933D269E90877555B1E9AF694D44B85295968D0CB1FAD3420926C
4455FE7FCBE124CB47C28D01A91B690FA50680F1872B0C648C191F49B0445E4D
9172E116886714ACD5D2BB98B011650B2A5D8B881D6854DA373E852C74B1D27C
25684C3B97F38034E0EB09FFF000CD16DCD5ED06EC4F5E8A91F925D6B528BC0F
957029EF80058433952B698525612082298F0E6E36968C8EE2116E5F5C2F25A5
4FE587E55C037EDF4C9BC1D95C48519CD63CE8E38A742078EF5DF4BCEFC85437
AD3A71B378B00586F8A890443897F479F5C27BAC920128ED9876647D60C5F1E0
C78012DAB75C47A4192144E10E772A553924D64D9266BEB9644731BE50E53479
7530AF7AD3525630E34B96BFC2BF5B99C37AB5464E38F9BD6676A0D66DBD9041
2FB79A82F45187EAAD5704670C253EC6B6CCB4A57AC0CEA9F4E532E7D5E3F5A2
59B0CC129BC86A796E76D07F3B03521DB53DA1264FA065C0B2CE3B89E0A6AB14
92482AE665462DD082901D67D3DD93DE8B0C6AF768C87AC8A76D16591A37EDFF
FEC6BF359F4827067C0CD6D6FC14825F8E322E0129568DD616C38BA602595074
FFD037E05D5CA52882F7204E9DF81B2CF16CD8D5634B7599362FDC9BF590AEE7
5706CEFE4F1D36DB8D3E5253808D085F082F84A35063986A42B546358DD50B45
FC867C26294EE34062E3B392D2CD31532D020A1FB4687EFA685543E21302A9E2
117BCEDEC3445550830124778E065A4ADD58BCC72CAFAED1EB80F66D25C8878E
0AE2CD2CB6A8F5D480878EA65EAFB655CA144765FC7D16FF244FC13E97116E1C
3FDB669874532A31D12091AF98A3614A80845BC772803943EC66854AA51DFECA
58D6E39A107ECE8A3EBE7E645FC021ACB9F1C9CBB82AD5C5134A39347787CA96
E2E00C8333DD55B109F616080F5BF29107A418F686DD27638B0A7C58F7950710
33711947B65B0C07BB7FE129E1239ABEBFCA5C7E828BE667E9C72222B84C4C79
C2D2D92F08424BAD2A76790BBB18E9A73A3AC40F568481F45FEE52B749BD29F4
4F0EDDC2A33E97D36AB8A7D9E76873264F76A5963F0D97E0C4887DEFAF1A5E50
13BE4DCCA9D198362CA8A80485F21228401E0FB1BF6DA37676B96C607DC49759
734D8F1EBBF10A7E363AFC687AC4260AD77DB005D835B04DC328500DBE2E66A0
7C57EFD8E4E9D8B2A1FB58162DFB145AA8902B8D6212175604B228BA1A08DEF7
D871A1D5C5EF59A3C0DA8061B1C61AA4157F7CC11191525D2F86617E964087FD
104F4D4F9CCEC04B288022DE4E530064823DB0DA51190509727D8385E504B9A7
609F26BD8F401EB203E33399F0347B277559AB77695628A87949CD0D4D9FB899
70FAE10E9B6269580BA822773DE75726823FCE87E1943876B8DC19F58E3796AF
ADEC8E98D78E01B81DE3A78F6FF1BF957CC9CC0DC5B4F3268A8831F3391A7B2A
17E1A8397AD287A598B784A1501D4A201B1A0B582060391D13C26E81DAB2FCE4
B01FDE418380A16AEF2B0C50CAB47B191E92592AD968CB3E74C7CE0C692A00E5
3F59B1F52DDF54FD825E9053438601E832AC8A3D146E3FAEDDBDDEF9DD97DA09
905C0BEC0EBEFBAFB779344C1DEB92E9BAED089845046259EA79899713DD1E56
7F28531C8195762A882FD6A3E2F6D6B367EAA7D2B13810A80FCF47E5CE09E60F
0839874318C8389E298F554671CD0DFC953C2158D476D0FE0725DEE6886BDE03
8E27286CCED7EE928D24ADD7FF8D9918C339A8E8B41383633663E51AC2C563B8
9563D0254194DE000681912B17BF7734D27AFAA023B97C367CEF276C725B73F6
E22FFC0B249362BF1999B6EB81DCFCDA69E68F2A60A847CAED843368A40C2331
7C6AD3EDF0ACBDE1C823F1EAA849D22D559BAD27D3C5652733D5F831D38B7781
691801B6D90EE76A7C997C39DC72471B7831EBC8ADB24757DEB8FEA60D5D46F4
3FBD58B88F8C80CB0D552301A09A3F3D68C52B226196F0E466DB8BE5C0AEEC0A
D4FF4B5719114C0DA6D1B0AD44E8FDB4800850417290939A0EF5F13443A9150F
35AAC5623BCBAF6CC5D7B12790D8A7479D926E7CF5389915DF462574F4AEE84E
32554E529BFFDCE98C901A79E3E0354517C3D95A7953154FFDDD3322A2B0FA0C
1AB82116D999DBF4C4F37384C9D2DD211B4E26DD455B8C450A3845A5435B7173
19E9AC4EAF1F31FD2889031EDBD3B6D18161CD65A632D85A28D0650CC868F3A1
2C44D403458FF43F0710624E6749A5F336B3BAC97AFC65870F16A2DF4A725E61
50BB3AB55694E66D428930A8484AD81E97C240BFDCBAAA5E39F23E5374492BF7
A71BFCD65CE12E46962647F86CEE085CA5770C07E17F21A608FB0E51CDCAF05A
B723A1B8E564BD9DDCE3489FA322F9684EA4043B1D7CCBEA265541D42DF09288
B0D281D4A95C25C2C00B17ACD50C6D8989B3E8688D2A74E9C9F9A5A88C64D441
F2FDFDD1B4174B45501FFB0478D14C301A369D1EAC33605FFF98C7D011DAF6ED
1AE0ECE6A43A734DB1E26FF20C75007F00EF200564FB5482E70985DBB0F0B792
8D3BFD35645B530C49140EA4499885CD9CDB60ED9488E270BAB33AEC2A3A055F
6BA3C3700A8AC61481DCED7AF3ADE81FE911EB8181BD4767284E6B4CE1642416
405BCCE8D41818D663AFDC9CD1C81B9BCD14854602CFA5EAE2D3112D43FF22C4
723429BCD1AF81E94CF64E71F6017DDD85B0F8AD2FDFA0AFBD1FCB4FCF60D33C
F0386F6A52C8265C910AF297CDEE3513F05719FAF20F60E5D15B630ADA5342D0
CE252B6911BD7715BA7AA3BCEC0FCDBBE065A4076A4D467AB787119738E420E0
3ED77D9824DAA20B84FAA9A2DDD914D4F4EF77F2783FBEE4A0333AD0D3897B1A
83AE9A76A2D98D00CEBF2730D812FDDDD016B803C38B8923822E5BAEEDEA05C4
3CADCEEC62CDC875177363DC60813AB003BDDF8491D5B8848F53054E54668C27
59F517DF8731FFD26BB3A4CB7666C9EAAB9F1CFB52BD7BD06B3C464CFD2D76FF
010D2AD94168B2D6D475471A0373B8D9B96CAA4E64239BF65B841617AD96D9D7
F89ED64975DC69CC94B0C1C176E6909031B3B4493AF8F6443208E5BAA9127328
E809E78AF0299948B51235A529766FE954E0D7B015AC85ACC4F23E2C0F9279CD
59961D5036B47F985273D75B37181B8391F1A591C6DA9D0D3D5AE4B2B5C0EAC2
FE8AF0D1070B27D4919792C03CA93AFC986C34C0835DAA410920DC7DC857E47F
1B8B65BD20F466B8AE8BF3AECC2A3446643AF9F1BCD69552B351076B53AF9F34
FFDD050F99E7CC878C86D863F261E8969E275792F7C38F61C3EB6E037D7CD767
AE50843AA610583CC318C66E25ACE781F6E319718C9CE7C399999253CD1B9767
6042C99703A8DD2B3791D3E11B88FA8C6A73EA0539CBFEFF0B615951424EF20F
1E31501B20811C18584A9796D33103F21C989CDADC98DBBADC85EB73C86F5A88
258726D24031D611229C589A8FC997026C3EA14F20143C90ED66A6D93510CCAC
6C165A39EB148B25F23459D2996A7896CB23F6692EDB65FF7D35562BDD6DA3C2
B41467B2EFE63589DEAE25439266F3EF69C2CE9BE14383542B9F6500CD2CC252
6DDA5E76C3D5400158C27289E20C373A057CD5164DFA0FFF9D966F224AA72C22
207BCA226752B21D219B77F23735274F754906B3EB804514B98E6323F36019D0
C74FA689CC99E9238B1E39BA4C4FAE1BCBE074D111AC0A840FF4AD60D7D76F9E
A312D1914C5ED565899911860833735ABD099F2B35842AF2A6CFB7EFD6B57700
B1169E9735F52731B45F2F856646E9CB695D7C31EE4C4D00EB6F27D43E3102CE
C57B8A586D3FF862999D20CD6BBE6650F02A15D35E1E75D365323C29AA241F22
D3762F7277990A08480B94D57A95A639C79D717D1A62CA14E01F5AFCB1AD7AFD
CAF519B4CF9F2C38886DB3187F017A7AE7341785444BA37F8C8FDC0BA91F0E9C
D7FCA2DFA59FBA148A7E264F76A5963F0D976047867284737714C5FF1616348D
00027FA358E88242C2AB3C7666EB43C9A653D05B8A3C90608EAB1E4645EB7D12
71EAC040A9272A53548767B695D315680CF31200B31AE146E5363352A2D4AFAF
5E753FC085CDDB6DE033212209872667423B22D9891D77A7D04C7A43DC069BA9
2CDBE98424EBF8ED5BA75646FBA4E2A16FE8F9DBC207EDEAA72C2F7D4B7B7112
BFDD1E903E1AC82FC46276D4E76AD9E4C5DCCC874CA19128B30CA7FABB3FEBA8
E6B759AD23E5CFC062E88A958CBF275C26600E8F851307C6204A7730012E0744
E449388FB03FE6C49ED769B15E302C8A688BB87A80645F2AA8E8E2EEA99B4C2F
EDD3E39F711F63E15A82F4D4AC55BFB537DC7F57BCDD94A615D500276FBB0FBB
B421B64622C3582C7DA7F323F1A17FFB4DA0E728C6AD8DFF966E4EEBA228CD7B
BF8FBE60B6F7491BCC79E2531E1715A18BF8463DD6FA65ADE7B824DCB6753DCD
8534FB2CB20A8A6569AFE36957927B29F06CA32B3C4F6D28AECD410B347F3EE5
48C0185B6DCCAA31E67DFDC33E9675CCD879D1FC8F15B5DA41EEA1A668FF1B7B
51421F5E65A2A7FC13B78C79405A0A959A7E18CB6EF39717F4102487A13336F7
42AE6CE920F82C8D6C46CA36C01CECA219E2EF410CF4A223E5073542FBC6462D
45076E249A857FC13D34B4A0D0684CCB717C3C883DE02F1CEFD0BD71260782BE
F6721A9814B3A55052E8D7EC353E7D81A9513EC140AF6A6668902D10C5468AD2
BBD7BE8B14A29CCA5AFD1215D847550DC0F06DD1F83FA50F2E838C9E180AE76C
E04F72FD23A3C236080ACC735BEC44AAF221993D48754421E6444BA95515862E
744155CC8F363A6FD60A7386846C9400E70CA0E6E114DD647EA4E22A5C65499F
029D2AA21FAC8A7A04435ADE6E0E23B87ED91182935B9F6428D10FB47BD327A0
077445CDB87D7187B0431632AD04A6AFCE6D4D96E57440D0CC6DB88CC801308A
E28AFCCCDE87BF0D9DED320981295BECA7E857AF131221DD7FC2E6AC04519A82
77B0D0ADF9ABE8E0635755690D94B0C8DE37ABDBF7E8DDAFFFC3D0003ED79957
842EF91A19C55CCA6ADEB88B59E24FE4A96A8CFF51B837D4C95E9CC4B52E9708
971041F8D8E52DFC7FAC46BE3E8161DEF94AF33B22C06F302657F3B8E1D92395
CF9E9C295DECC98AA167BF4ADBF4B833E4E31084024D0E7343BD6C35AE5C1107
D773495C4743BCA601DA71B7AAE5A525FD03C5DE5384AEF8B6C7C5DAB64A0F3D
BA016E926B7A76B6B93D28A18CF021042D11CCC1BC769ADAA75C1766E2A4A42D
E5A4D7E55250C52AB385EA99E84065D22FE6321DA20C3D092BE8CEC412D7448B
318C421087581789E93AF80E182633300AB8BD06D067F53E41FBE6958D64E51A
1017DB919CEAB585B907BB47E6B700F7B8D19F62C795AF54996144F5F186121F
7B3854FE184DA34E70B3CFD4E356064154DC618D0031D66724E959D8FDC20670
EA7B61DABB252EF91EE58963B8AC0BDA1089A648E1427F1D5F591DEA4A35A333
EAB50618D08F7EDFE56AFCA8895A73DD46A2C464936AE6D32380040687DA23B7
EB8AED2B53A6F2E1BB0A65F3B8A875957B66B969354B600C1F59DBA1A199A137
90B1BD32EBCAA12C5A7FE6F73A119C87BC473668FBB7A996C8B34E4DFCF20B97
A61CE74ACD7931668EE08BFA9F8F776D88FE9C5D5EEECCB536F27129E5E93EDC
061D348F162C03BEDCDF05258123BB85A417BD2D7204CB6ED99662794202DE1B
E47B1C0A4A0442E910EE2D7511DB1D70576C69420C33679890828FCCF1D8FE41
94FEB6C80BF1C606EA5C0FF8015AEE2152145DF460371AEF22A540F581EC9293
DBB7A4F493722E61DB62F5D16CCF9AB504CB4FE1C4F7A53B8EC2FDC7614E23F7
D328DA0558792A873B5EB6DC81FBDA19A36259EF71698825A840B6C814E2F47D
48B84F12297AF2D267279A477BC706904A9BB6EB21FA6D5B0DCA5A9B668E27F1
AF649B945EAC5603E1BB9A4DAF0258C35EE990F664417C84F84AFCAC14BA3238
EE22916DFC64E9156B8CF2C80FA0840C20E128E0B2301D85F0FC49AD0DA112E1
99447E0C516843C174190A46165FBE654065FEA56AD83B17114EC5A491475DBE
C3754928F3BBB73309C530FD504D95C93431345261582C90C7AB5071280EFC3E
597ECDE0884F0F77AD238E6DD1D0D5A8590FA66FE389609A47A92464C8B7C0D2
0AC9C82E634BB13FC7D5771B0E9E6859B0E65792A16283CEEE28EA85B42F2424
9A929520F0BFC0D0DDE2560FC2C27956D4647D2D624D9688C49F9C1C2FBC2080
073126843F3F6A4B5F54DC2F30B792C83DB0D731057AA1EAFFF8A418D20D93D4
BD2501A30A61A4A906FE2792F641875F6E382369F2B8604338D2F5D267F4977F
3147CC5320A5428CD87225C7FF28FDCD4FB898A052A0B1A5A925190A6962680A
04A5CEB915B8E21F640745A0AB651FD77875C2F4C648D291642429DD61FAF86C
C41BE0BCD71C4313B3C118C2BC7B3A4524312B3054781C05A71AB7CA8613DE93
00FB2099A0299A8F743D418E1D967FAF870F649D44399EDD9E9B893820416437
F76C29622F93ED91911FF9F693D459C15D45B4A02609393B950AAAF7DC99C9E5
E6BC6F373161076941FBE23CA6E81B848B32FC421C61659E33793CACC75549D5
4E2A04A2F2C6DE70CE1AEF931EBBFD8FEEC4E60F4D0691654349BB1B5868F2D4
CDCD1141EF873A4D7DCCCD5170AA533B314D338DEE2A798B301739E51DD451D8
071BF1B58C840313AC97F22CAF1F0487C30CAE8A871B9627A789E268385070E7
63BFA5CCB1A9DAAF125E79D5AD7DAB05959E694040B633055D457E55E2913AEE
591678EADA8F6E6D3FAF39BF4BD2DE906AEA76451DF62E97990EDF8444CC83F1
AF7898C6241583B84C15688C6165A8BEF156F6AF0D737D2C3BE89BD32744DF97
6142F38B32DBE3DC78A53161CB1560012BAC23C2866945E46981F9406B6E4F61
160966A90FBD7B89AAB1E0E69C93A7B937085053C42ECF7716A6F24D2B61C784
BE8968101A50626A429AEFCD373482B0C9292EE1E2B00C53DF9788B455919723
91929A1D45F815315661954DF160077B16CB4AFC85B4C391418EC9A4C013B3A0
886EC6B9E88EEF2F9405E6DA8139686D99FC6ABB0A0C0091B3AAB0710DC00D01
3BFB23ADD7E5871221051D37D1EC32C188F311A107CC79FE5120FF314943306E
3F9F16735E3BDF0CD8E7BEB53151B295365B9B9D747519C6A702B7E6453B1672
D45B719225BD4AB0E5451D36FE530BBF2D38E8B49287A1D890E8CD6EF325DCAE
4A59C7EB9F062ABB34EB073598F17484D20A23816F6821CC66F0FEFB1A03D99E
9A095445785C633F2214D0F6C20E43E7558AAA21C046DBC8AE4C55DD51EB8F2B
985C8B852731D40F4BBBA3557362AD0A39F29E7E10E5CB790D95E30F26EDAE90
68155217146338DE3D4C65A18310260F240C9B5E98CA5A520D17707A1D8A2B2E
F5319D0FB93AADAFC1AC17B04381C6754327FA7C65AEAC1A283A5EDB72CE2772
DB7D5B3A765D09AEE0F0178E20124CFABC4227A27B4B7E6C306F51B9F6DEF9B5
D3F20879DF167792243F7D9FD8D8EB4A878F25A58C920D0FFFD6FB602BEA4324
52F440BC614981CE23B4D968C5109FF036FB1A36DF145253BD827ADB43D157A1
BDFCB3233B9397EBEAAD811AD7326AE12B896F411E09C15B0506D1F805506F21
79384322597E9E2CB635DEF9BD7118C237E43BCB74DE2D8036D8F84AA6C643DB
5351F70F30E7F138E988DB4D2AA279B06EBE1DB8826B9C0A9C6D69412B72CC06
3E096ADF99ECFCC4461B595C70BC08D30416E6BA194A351D97771C1687BB8C20
8C8A4A69B76313CAC04F35C7BFA514D696EF93DD9F32C5BB3CAFFB9ED72DD806
2C5D957983C940266CB994EB977112BF47327A70393F396B459D409BCAB867CF
2D3F12E534405BCCB859F8A683E36E63228CB9EABED14DE2329CCBDE222B4C31
FFEC8DF0FD814141805DCDB4DF615E2CB64980C415B399C2439C813DFD9D65C0
6F84A291CBEAB880B16D7DE7352BF4ECB7F3F24D6DF96C7906DC4D3F814370CD
3B1ACEE58FAA90F4F6D6B2EC17F6A56159ED98B450806EC9100A418BD851488B
99F89E973C3B209D0EC01BFDFDBAE2E3E4C94DD191A2C4BCA6B90B4A5C5E47F9
99DC291B0F002A09D0F68AE1742B115F4FA7FD8E330D0B86B191FF5B038A531A
74DA0C8ED4C094D0E56E9499AD2DA32386E6AA4CB6B36B2BC184BAD23950B28C
80497E259F4634C7DF6F1216B6A6B5C553A23C7C82C170052C027C1611FC07A5
4B364230C6A08BB4FB0CDEA7D44636102D47AB90B92FA1A7C53CCCB0EE0D9E3C
57823F8D6B050671E1ED55F8B6AA5B39BAC8237AFCE135D34AF379A396158E52
2ED3C984D31EE3902D9683ADA479FE08929D2CEF858CDA91B585B98FA1CC5E64
E32A94C5625B428CFA7F347962534A07E10DF0E9641DBB70577AE828DD3CAE98
FA9E1A75A405D9A3A0D376856B2036634A72710FC8DA959A662B22088B2F9C23
EAD960F20A6F51490D177E72F543F36DF78AE54F076F82EC251D595E38D5151B
E1944222C1D6BDDEF54B3850227D2F6D538FEEBDD697C394F6F3B8BCB5938985
C068941DF37927BD4B4A45CFAC6CEC9EB9F57FEAFFFA9C056045A0369FF7916E
F6DFB4498E76A6BF7E31FFB72E03A05ED59A723EA87D7B7EC6CAEB5D464B4506
600AD6CDF4235C9298EFA851B91D5A4FCD68E10331159C2EC212D7741D517DCE
40C6943373DB96EF2F43B721C9D806CF810056FFB04FFF49FA1E0A7F252FCB0C
B9E588CFDEFF949914C4B69F50F6628F9EEC6842B79E42C62B48008D082AC5C1
C0427AD24E2C9976490B46BDB5D4AE3616B670F709947E40893C2CF5209810E0
34DF15540DE6141FECE531A950C0A07C88F66C2C6D8FDE6E3103E32B2CA8E867
D68BA9DE568A359429E8EF0DE163BB22050061080970262BA056550070633FDC
E592272AB52D6F890C9FCF40E7E8AF25AB31DCADB49DC2FFAD10309D3130F2B1
FA44654CD5B91CF42DA4C695E910BDCDEBBD2E9B04F956576C1727656A7B5562
B9EE7E3C2D1A651E66B09DF5739B4A104248B717850832B3812C04006367CBD4
387124656831862FF01CCB867F027E95F0C726990E92C1FB18CC4B968D70DFD1
3C6223FAC9AD3125DA009DA4E29707C31DCF1707AA6583AFB9A309EB1598A253
B069148683375E02AE84420BFCC53FE88134ACDD6EA8FD4BE5ED75D83C8174AB
99A32FB1ADEB641E16550F54A327C00FF3133C11A51A67803C3BD94230C074F6
6F31C76B0EB28FD20AF1751A73E37D5200F5A884569A6687A7A0DD2323D70F6B
C699CDA42774EA23C62ED025A33722C3B1AE04709B28E38E80485BAC718F97F2
8058A5786156A332F6ED55AFB396E0C5AFB06E6C5B432D1383C69174F5A031A8
54336C4DE2FFC6C0F0BBC5F9CBAC865AA9CA7C57195B410F7428C9B538574609
C27B61C42AFCB40FD43949E07AA47353BD44058B858456FD04C654516C06C21B
626085A290BDCF236F813A15583AABB1439CE0ACCAB225D733E123302C0C9B05
4E97386886EE40F6450B0BDBA1789FBF48822B33BFC5FAD73A5F027ED8F485CE
EC11E6F8121282D88FA80DAE185A6CA1703EBC51B3348F4B44F1DA7D23111F9C
E050A46D17DA14AEB71646FE69E6337177422452317D2F2DDB529DFEA26BC3E7
D7D924761911915BDD9535892BDFF3D4DC3CCBD60670D3984449A1F998C318A8
FE36D0D5020E18A49627E6988AFC0E3313DA7375B4F00FB401D2AA2D4BB0E6A0
E1FE10D3A249AD283F5387224270F8133FA299289B23FA738CEAEDF7D1172353
85BD69D068F1BB3C6B565D26A60613869795A7234CF01F9C6D90FAE6D5EFF289
A9B072BB9C0EF79AAA866A8A7C28275E5901FE36E3E00523A9014DE680D23B99
2D7F754479CD369719297616419E3593C1CF2A92907B9738313B6A3BB452417F
1D87BCF5CA20704D541B1DBC252F782DFC48D7726661BDF8AB0E53B5DD2CE9FA
739A2E6443BDDD8AB8BF4806C61442F9C46738DBD1E11BCB2E5323B4D8E08C2E
56EC2B520F0C0B9CA58791874E4246C0A7321AE831930F08F586A85A73DB9AED
0CD76DE2B8BBFB516D51E15344DE6832985524070930FB24143DD7851B5539E9
7DAEBC0C57E6CAD2FB266E64F5C86707D726E8CB6510CB7C057C2D55F386D28B
8FC8AA1C0A2E529502832B329B1EBC55089A05E256AE5E69FA4F596B104C5804
E7FDFBB5D0A20D24A42C3B707F25625D53DCF0B9E2386BBF0900E0E011E8ADFC
A1CDF9A5DC0B4586C3992FC53F1ED102E969CCE27E8F6CDDFA61F635DF10C313
E5AA3FD101F7027BE6C68A1ABBFEDD04B4085690CCDA8AC7D0D48CDE08E0CE33
921649F73077DE95B95A013026FCA4441D69C43CA286DFF8606940A2F08D727F
A2AEFCBE4AC82DAFEEF86EB672AB30878D431C0106DED8EE779C6561659DE552
98253B0C1DCD3B29B8EF5B8C6E1FB46E5C40B1D2D23D99FAE3018C6D4CFF5899
A0884293BDEB690DC928A68EFFBD0C14DBD63B8A00CAB588BFE6B370E2517839
D51030B695AFEB73399A6E816F7DDFA1EC3DEC0FDA50ADF09D8FCC05EC091B4E
4DB9520C5179B62502A6AC0139D5F6660FA7D460231350953FACECFD82FBD821
919E3542B33690DF46A6C2593CE3874702EE51D15B14730C7BE5794100261299
FD072D64C46683A81AE2BA8335D0B33FDA0A448D5045A6A418729A354A948861
560C182256FE5D00880B0AE2CB8ED5EFCC35AD24B43217EF7C7EFA48FB1EE768
622A2C0F959716B45A2332BD7F9FDC52C4066F195ED73CF8416AEAEF32F7E17E
3308F6AC857CE8B7B3103E435726A55A79C6409357F0D75F722CD95DF87ABB4B
B007A296E9296B586A165F008277E6ABFC3ECF543DFC2030D3A4DD0CAD0D5DBF
CBEC8EA9E8579AACE5807F35454E12CD9A11A0FC0247EFFAD4D678BF7B71EF21
BDD7209D0BF5738FA537F39211229D4448FF1029514DE89C241D0155FBD8875E
7FC1099426483E66C7051AFC7F315FDE2C88B4C930A4075AB0DFD439B273EF3B
5241D54821054BF6E82387D6F9838462EDAB43C8CF0F9BB9AAF8A89DC4606E70
208E7BE563EC799879ED9336B3049684BC628996B0B698737B335DC6C28E6E82
3E0E6CD28A29121C7AE9012C109674719DF6F9DE584233973F890316956CE1E6
090DB8314AE91DC51339F869BA1D16FFC90F9A1083BFC317D9EBABABB655DA43
D9D732AEB806AD8B0126BA03818F08399C1D7387093E05857D1604B059470D61
B354C4F454F31E02DD78F4A76F177C69D7F790B34BE8DA76C519154D7C1FBF69
7D8021E9DF7DEF9096D27D3D6FBA4683500589D1F7B87C4426210ACEA4EF3776
22EF2380D8C2FBBB540219ABCC77F84C51051B08E065F57327FDAA561562F525
24AF523D43E085409BAC3178ED4C4CDB2AA572D5F73E90497A725CB0FE8FB0E9
677351803229564F3682FDF4AB43FFF6C55A04943FC52CF3BA9DE67919C21F07
B3757D2378C697819667C967AED16B444618A6925CE76E7DB866A2DB1BF9FBFF
D88A6AE91D65745B5CEABACE0679738C22BBAA2F74AAA94D1519153B56977515
001FEDC50BB2BF1EEC05A68B4FE850D6A7D4AF70236F1FDE4D91D48BDC22CDBD
06CB00181757A3E06E458C6CE1A9AF85CA77FBBF825A55E26D07962BE0201630
2D0F16FEC298AE454B18EE6B64F5EDF69434B8C2A3B46B23A535979D2EC90838
0ACE7F50ECF4AF439DFE107B96EFE4936D0D000FB33B88A2F89697EDAC9C996A
67D04649E03577FFDC2CD9DB69DB3F6190181A4C4F1463F53534F290CF7BF140
CE786CD3C3B27FBBC4DA49F1F4562420623402A46D849E91EEB86D27DBF73347
5752CC0A0474DBFD47343D8D2ED3268440B9819ABD8B31C8DEB626E666DF2117
DCD2C964176E3303296D88F0C0F5EEC4788BE7C6AF7FC28BD14DD27523FEB860
7CE885BAA110C6C65FB90FA868E07E85594D2527389A7F79C566F63AA2D015BF
620BA53B1985060B8735BBAF50F6E7C5F79FC1C1ED728808427CE9ED4F3A7F82
1C7079952633D41F3FC5467B37F6E39E4FE6780C403D439E2EEF1F6829584C91
5566FCDB96A961BFF2A4DE05C5C9613B77BA13AE975131B5FB681633A3075B68
843E4256948771B6F5A413E724AA6E9066561771360D0C0BF0BE6CCBC36C3D6A
7115A5E39F9505DFACB3A3F5A507E82C8FBF69B1DBA7164BC3B644E9A352C72B
094E60F2C49ECF484B95FF3A9D7F90080AB112BB219A800CAFD8D18CC2BA1AD9
8B60F314F482DE121A580DC81990F0A95CC7791ADAD3CAA67666BF804AF1568A
55793F6D77B4FAEBF4AB6FDA67A6514416F5F25E9D612112DA832E5227CFFE98
E6669B0C76DEE499E26F13F19C496C37B0A9CB3F6074F1F6E48A6FBCAB836AED
89E5CE0BC885A448C8BCF7F49369C833136EF26BDF872F83D6F50DA955DF7110
F1C4738FFEF353299A1853137BB9128F40DFF15857995B7ADAFB3E1FA89A5298
96328368DABEC5CF0D588658B1F7EE28F800C5D817F12DFEAFD326E3FD073064
7AEE3B5DDFEC963D090E95B9394425C08B6E420AF51A4553CBC6CC5B180B4CE5
CB3FBCEB7C2EAE652C3DF968FF3F618CA98A269FE15FB3DD4DEC4FABDA6F8955
BACAD3A8BD4D81681F129848B9C50AC15197787CE7FA63CEC583C261C88B67F2
186AFC1CF6319EA4C60E03189E6A1BB24EBD50B42A830769D42B275C9D7AA056
023418758E8F66100D18F2A2BA4CD7BF56A6A10DEC60C98145A281C544FA1F76
2866D180AE2A7514B8F663BDF359978196223BBD1E5CAB004061DF4EAD870578
33F9CF3C9D174083F062265478566D3352A53D468179AC6BDC955CC2F9618CFF
4915D415B7FDCD8D64AAE89884A87EC7B213C56ACA707D6E0BFE0F151DBF2268
D63D8CAF9DB3B34C6BAD02BC52827BAB2D88D22C403BE4640143E41165BDAEF6
8A56CFAEC11DE36B9E0E98DC93D1E660C2A63387762522BDFFC8AE8166888B74
EE983A8A1E2C1FB78CEA5F0C054CE99B9F75309EC500C4B71DE18E85658A1BB7
A4CCE3F4109134C24184B27B6EA8C1E8E1BC560C1026C1190223173E3569FBCC
B13F13FB3C067604F079BCF0CC29E9D542463016799E444DE53B2F8765BEE8F5
4CC15BBB5303A54FBA73D393D179FBB013476335D39A6F093A655CBE97CB6839
DAE21BF2E1C58C1FA218D22965463066FE3C6D3D2BD59B6E768A979DFBFB0C9F
757073B9B6302E0B11974EE1E823B5FFBB2B389F5656BD29B196ABC62EEAFCD0
0B19BD57E55BB1B2961DC99212755205D816E9D819B3CB4E1300EE7736A25E98
55F6DCD0F834E1C1C2771321F8DE9474E65EF1CB0057CA9DE3F2BC26501D087C
8982D6B4FFD336DD355900D08491DFB0854DE9BB381063064C6B8ABE1B8C7B27
47C684FBFDCE49953F8196147EDFEFD425C8EDC899410F5C40275005653AC8BF
4228361EDA9CA69F7270B64BBDF450EC176D503FFC46A7603C0C782C10645F2C
C8E86EFA28A5195148EF85AE8B996ED2477421F6A82CA1E71C3B7170F0FF82E6
656CFE6D2A1A684794A2D4BCACD4A481DBD82011F12B7E033A02ECB103E0297E
1B587242012C256431D7CA94F62474EE51610CA8790970F0242822D5E401B230
15208BD4F767A7AE23406E29A4644B1B7131A6F79430DA662CC3F91C829E0F30
5D2D7437522FDC407FF8B1BD46609C13D0B931DD6FA82AD59F2493F1D943B4F4
C8309D7FE85F6072058BE81ADADF5A3B4F927CABF282C33309BD781CA20D1894
8D1EC237F1F4E10E9278AD0671052EE274292F1C61F31242729A62FBEAE28ED9
DAD7A0A56423A78E6286D1E2E319FFBB5E0A1028E349A09A4A658B7AD7B45AFB
90B502DCF35111D76ED891DDBD6A51E197467E96E36E45889FE067DCCEC6F498
A07A63636576B3D95FB36CA0D8264EAA3AB8216F3A1C671D6471E07D4B70D8A1
9389EF17F259FF8A46B9AE0F4326D2DBA06CB803B06E389D9607207FCB621FD7
5978D46E185B06562F92A8E6069781CDC8C36F632D2275C975B424E385421F52
DECD51C57E70DD27428F0DEE412ECA9D5BA5490A89599EF0151E9BF9CC6D966A
1FD25391DFD74618176D414C4BCA48F55E1709E49C40BA26780763E889B13FB2
BEE101B43C05DA8960309A86FF740C208AD152E12301D5F3B4A8A25A6EEAA6AB
A1B58D3AB42F58AC1572BDFBA4DF6E9A4459B4770EDC0308568599081D3DEA53
32F66334F16D41A3EC85381C3BFE998A4A6349196573F0EE87119C36975771D6
5F329D0E9AA0FCB029036D0976F5E66A8E965735E4E116AA0593AD1C585C5876
4424AB59C582B6B602E766A6F33355B0B89C951EF390E1C63167F2AC5F30861B
EC42696D0CDB05935233AC3D0F229258CFDF6D43957EE993DFB70A40A763D871
3ECD80FF827355EA4F78FF39A46A00F89C5C79BFDC2A399461448DD17ECEF1AF
6323FF0B994DC547369991693014FFE3452317796BDF8606B932D06E949D2481
EB07523349225E6B8E4BFA2CCB9FBCCA3B805A8D92DF6B97F50BE16F935DE6DF
EE148EC1A659D809D06E09BAC504FC9A75C84EE6821546F2DCFA75685DCAECE2
D732D91DB08C1A58DF7DB4F9467A98BB2A1B028BF18BC4EDE0996427EDA0CAE0
F19C2B1D5B917C508CBAF1EFE3AC73D46A704D6B287112FF32A7984902A63CA0
345A8A64D2488FD5562C307837ABBC42CE0AE98F7B0AE50E3AA6696E337699AE
B3705F20CFCD667AB094E2DF6D8FEAA3E7192DAA0D6F9E1E41ACC6E7267BE62E
DC72CC7E0A98D00ED8DC030D6E38A85AE750532099B1770D1B8B32EEB8029CF4
E61B09674E0165D6263A2D69372D237C41D3BDA1BB481C9AFF1455A037CE1710
9CAA85E7535243002B3C3264CF573DB6FB5CFF567627B8C830DE5BB0252BEB0E
F9A600EF18430AA3C2EE383FC535C90AC61C46E87BBF5C38D2A7F51B54D4FBDA
A5B91EF22DDB20A699D5D1E4FC9BCA874F75286A5836375488964057A95DBFB6
AEB0D04F91887309F6559BFFAC40659DDAF9645C067E776709E2F16D7596B2D5
B9D4FFDF82F609E6CF2B094E60F2C49ECF4846A3058EA55E58F59C374DC6AD4A
A8B125F40114881FFE853ECBE178EEB5B0C659BA219BA4F370699C8678D906C9
2B12E1B39FED998FFC3D640743C67AE8319BB75A80ADCF82A15A2C0F8DA982FA
16FF2289EB063C0DA394E537ED6E54BBD4EC94208778CD4B23F1FA591E6E64D8
B6555FBF8DE4D124927706F21962AFCE289027DB9FED244A78EBD78B3998FDC7
44BE46AF5D119EB97ECCF4099E01BE746CD9270154A8B81439C01D0720E853FF
060387F7C4FB91CA980368A716AC03057B53219A5ABE33537244BBEADF66910C
A61EA23A7B08CBD2FD8FF59A5DFBAD1895F123CD9FE584EC07FB4764BA0D33B6
3DFA6C31BFB3B82C2A42CD26548C24AD09691573439D67F3F48A956B080F6DF1
1E964DAC308371DE7DBA528895F8B03C7D0B39EEC9B47E961A45EC1958002C47
E2994F65D56E78E798F36C3266C304C5DD7CF5C1E29104673B9CC627F58A8718
6DE1B496C4C928041D1CA723188D803253AD8ABE6C65104B2BC60DCD97EE7D38
869D666EC105C74CCB0903414679A145541683FD957A8CBEDBB615C03D8C0E1C
58D6BC841FE38D09966A0986424C89C050F40D62C0CC8E90CD186DCB73A33416
3F7F3DDBAD6F86F36976755E04D0DBA96131E8D6D5E8F025AC6636EFC35F225C
C49082CF4988547E3A45A4DA0C13971D1880A7048295A277AD1D4022BBBEA0A9
483EE9941BBDA42C7A82E17B8941CC10DE1D4A063CE605C924C9C98228BF9EAF
57081F57DBF9D74E7C3017641863950B5400E3730E533349E8F1489D91F013E8
2CFB4AAC766904F7FEE6A373F4674AD17C39E1F2030FC5F4F3B99EA22A8B8BD3
096D86A278962BDA691D7BD9203F83263CC40D98C17EBE1AAA2A9F65EF759B3D
1D1A6AB66DD89E7A76B68D59187843CA995842124CC229CF5B5206B3F94955FD
2F79C97FB9D67C62D3BE4825929D63A27865779180ED212829A762C707719BEA
95A88E93D1335E464B8F18B0A4833AB0EF27D0724B463A85DC05F5A36F948DEB
50183FA92FDA26F6BF1EFAED619C1FFC29BC2976CD6D621D1023E066BA249CA9
9D1AEEF8C620E9F057A92899BCE11AEB19C10F6859B67B666B84BC164518713B
BBD20E129189FB1A1252C069239856F03E138D66F8F733E2292711021126102C
54A1E37629EC3B54E7DDC902691D7B91F3E7078E7E2AB78956ED57B6FF58C93A
748D1B91E6C9DBA486B6E36CDF95BB98511F07E06B20F02EB8A8511A1207D15B
313E652FD013EFC28552D277CC5B1B02DDED7171B0EAB39207ECE971884911F4
52C33EE8D4D7C18DD6A189304A5B5BD93348951B354102F98BB4BE7DC0DF9E4A
DEA85D9F8C77DFB4AC7ED4A60011B99A778D7397CF417B218758F11D5A960279
16EB90F2A748CC2745C14484AE6FA7EBF4B992F36F3B22D14783B855CFBCBB4A
0D7A93FA439D2515C9D94C7A43919BCB710EFE8017F3DA5B24CA2E681F83B125
42DA271EDCB83E3F85898CDE9DB441287E9C25AD7319C359AFC592570530F2E3
5949C14373B62D93204A71FB01CE2405681A9DC6AF760F08D3712D11676499ED
F841548AC06FA5FB85CC86FCA76C2ED33218B9FA3404A88A57346228A7D05BA5
703F5BD9BC2C57BCEA7F31567D0B932FFEFE289F823686A22CAE66D0FFF6F414
1B7E4DD71720C1A148B9EC2C9AA3D94A10B15EEBD7BDF8F3CF2D2C74AE111264
03BE62804B6F3419C2F004157A461A5C23F6B8055803A2B40E883572A5A46822
269DC884E8584D340BAE2327C47763A8E68F64F62D07ABDDD89B2F42E19EA0A1
88209F07C211F4A995FD39ADC4070929AB43305945039E01989F5E8931D4D74B
2EA068E33F541D334E942719400771332BF0167B7DDC07E1A62F64EF5974CD8E
AE8E6A14072B76AD581E2A44C16D352E2550FE3A2A042B0890B5A8791A8F08C2
10E61F430C82ECACA62FCB931E600BEC8B439095CAB67BDF0C65DF3EFD54DC34
42C82EA770A0477978C40C357E72A539687F58869A50AFFD55911AACF57CB21C
5ECF2777B26FD83E21449AF76B88B04554D733D695923429398E6F08BDF26AD5
A9DF5CEB562F68C8689D5B67DA050B12D220EB71B17AB6126C06A3713F75408E
29138F81394FCD29F4703CB5993D7F8C816471DB7450C0CADD6F5E5EA8E8446A
880E4E1263408B0DE3C9364C6FD783F6D63F498CA25084B8F3F8F2614882C885
12C17290004B5DA66AAB8B2568DA5051F0BDA8CE6C8BDDB68BEA38A13ACF00FB
934023F37DAB1F5E36607ADC8747E1653B170EF634D31E3E1D5148A04ED30204
E1273CE5B252D702C3ED4DB1A3BDCA41F7DE8EA5534AF07C17B95D399B7F4D7F
28653A5C1F318A14A720257FFEF69DC6C9DF78F16389EABCD20AF82348E5837D
4DAAA7547B195615A3786BA71EDB8742DB79C44AA7A3511959FE75B096CD885D
05D5D67E14BD7D628FE245888C66EB0F1B9B3933830AB79EE730512BBA53A06B
195EB2A498E60E6181AA4FF088601E0BCC65DE09D7C6086BE4372789A5E4A8BB
E7C909E080E70BFD136A8723AC76A1F343BB3E1061CF4DCFCFD87D706A30832B
E8DE90B816AC700557576242C3771C9529F24EB9BAD6FC3C1293176F6510B952
6E947FF21921F5CBF00E137A71F03F3536A9818B431D3FE88066DC48825A51F1
7B82D7E40206619D58729FB9994CE4F29A950AF028658E6218F9B87E16DB9CED
994238C3959A530ADD2A86CF2437A8EB79744B172B020AC3A44038CA0AFA9D02
363D0C633F4EA0F6AF2A26C98B163F67652700B38FD7F4E03AD41924C8B06B4F
DF37FC4C6C7ED97BD15B1763422CB08799A00F3E1DF278C46A4F26DE2E100C3D
4C9D4B8874194B164F992EE1202FA5224BA74AB500482FA63DFDA9818CDFEE2A
17EBB179163088E634326B24C471AD74BB3C0A2FF97D117A3D578BA261CE4E68
C0F77F30F59EB17BD7EDAE916E7598848CF32F6904205FB31C974FC3B5796E29
CBE464DE04A5F35FF4360739DCFA181DD539CB07BE85E21B0E9DC3106AB600C9
253C7E0F6C1FE9964D8D05F0980EFA491B29D5154B44B92380264962BB765357
51DA702CB01A0043201222A5A45EBF34945E21DB85C0FFAA6664FA20D07AEF6D
C4C3D25B0E6BA61F704CAA3D73D47AF3D0B4525D7DEEE210A4239DA49D23EC2B
B5EC9ECD109341488F906450AD70892A75ACEA874898A185FEF578BFCF36F602
7A26FF421B5772DE01B36BDC7108CA071C7925E9740FB1F386BA932C0B0FF668
481FFC6A25EB05519376C1A6FFC1ED7BD1F7C1FB29CD9F5D4A94575E5A6DF1B9
CD878337108EEB25F6A230DC6AB0708EA9072B130A2D8C8272237FE1ED4B44EB
22E96CC5D185F48A8CD7E111A000D42EBDFE2F1E19060E939D525F8D0115C24D
BBB7D252F2854291E6187C1796B0B28917D4D32AA86FC68D3456631FCDBBBB70
31D5F2337EAB4F70211EE6D0FA61E1587BEBD9AD03DDF19A98C9BD9E1810DBD7
40709AB0D01A16FB0ECEBCC0CF51454B502B3005F85EC7FDC7596DFAF7FDDD65
4052B32405965DC8BEB59A0448FB3A28CB446A04F349060809CBDB3C5DCCE929
A32C7F0DCBA32F57AE6C9AF6DA56C9DF95B90D45EA22620C2FA7D7521D7D4B3F
C7AE4C086304643B80ABAE1CB6A67ABFAD25F281D32B528B8930A213A7E23217
6C51FAE6824F55B5D0C6BE87B94AE70DA1FD57992CACE04D0EEC3C1733196A3A
9F3EF7102193B1FC4612E72F00B99828820D3D18397EB43F9F09A6E4F0E7267B
C34E8F14FCED37A9F0957FB2A61D2630647720CDEC0E89D87A701F160EF9F028
0CCE7123D7AC050DFD855314CEA6BDFC064B18F084AB2053E8DD69A2E937B51F
6657D9F7ED759091062E66678D35CCAF7174236014347CE9E9F1872385DBDA32
24DC6A978645C2DBB0B3FC5FDBC3F0A5707BD92A3421988EA0AB2C939D6BEC36
91240B7BE921ADB832C9E94C3F932723AF508367724E6A7662499EA3FCC278B6
16531C0CB5BAD24A3D498E7A10BC294031B4EDFCA3EF758FE706252766764E90
371976C5FAE1625D62879E4B5A7F10378A9F3E01F5D1F7562F7991F7FEB5E602
BC71CFB91E4FDCA62F825514CCB97938F3E012AF4D68C140C6CE231015D93B32
CFE3D41825336318DA007E49C32BA4822F3C035A0908F9CA03F6B4CA4588D543
0DD9943FA6EE299A4FDAD09FE4311BE9AB45B21FDAB27C8A28207547267FFD6D
66B6785835070A9D8B87FD17440C828B6DDBFD43EE0DFE369F3C1A1D113CB879
69B0370D0DDB829296DCB0F37C9422E6F280A2FBAED1F4B9D7547E8426A9EE18
E86120922DAC227580ABBCBF4E94C8B8863191F877DFBA419D932C483F0D2B42
66B025DF0C80782B325A0B3CF6327C9B8AFE456986F268ADBEE64EC4EA851AF4
CB1A21CDE0B2869D8AF3B7381972A2A314A777E28A9C1EFFD7D2EA536CB1DF2D
29058B292AC9F66797BDD36BFA7D82F84B25D48050A6E4A094DDE4F44CEEE2CE
A77930D85CB06858E56F83FBE176C468E63D808118662259AB0CCC303901A207
C83125D327B276972F404B8C49CF740734665C5887D21F219A295EA233C467B6
9EF3F3A927E3BA6903B3517FBF14FA874C02E7B829E1B79D78D623506198CE3A
933F0539427159ED6C47731A9896BE13A965A655A06F0F4B37BC4AC7DB8D1189
D15D68BA71296A18E04AA75E21E5073542FBC6462D45076E249A857FC13D34B4
A0D552F7996E73B7124871AC35FB114E9AF4817386472C80FE40F7034C9B27FC
EAB11C8443C9A3DD701992C272D0BAD4706A5A808C625DB91D208C2E506DDF3F
431B555B091CF1546D10F9D5BAA0923E22CCC89C5B7B3F0031BCD6269FCB4EEC
F3171B30132CB709ECEBF1321D5786756F043F42A9C59AA0BCFF2A6C0A69DA0C
A404C465F93E9719ECCC2067B9FFD03692B957A6C2A1289C8B110472F95FD5CE
E1A7EC2A78941AFD0B1029C80427E82A5A72E24259E976E6FB3381FBEF9762C4
2C4C565BCB1430713B988916487ACE0AAF272EAB35BE201205E4EC76FE338370
0A594ADE0E9D59FF37C4F4E6E228EC4F734B0AF63F7CAE541F9D511E2DCE82C4
C64141D576B3AFAF00AF6D367DB450F76362FD9E1C29E1A346FB009AC7C193C8
8A044CF33F6A39388F6A296F42C631B3E14CC1FC6577880BEFBFF5820772B44C
171B4AF5A5A1C3D52FF420A24B253F197A5AF0C7005F6503160BD9597182B144
E5A0BCAA48A472001B4185D5263AC2A477FE23303F279B2D44EEDC14642AB382
A9CB0BC3FBF1A8790A60DA0196DD4B0E8AEB23739AF92B579720B119FF8F3CD7
69267586592927BB429D9534039326416647BF91E6E3788194F96259F8A07ED6
7DCE8B5ACA00EA4C0D6335527E37856C4D35E27563D8F6EA7CCC0E74977CC97C
D4060ACF1112FA31D10565B2B293E7A6C09E2E8FB853D04FC5B11F5E5D7A41A3
DD1CED1B040870B95BAE5EFDF88AE7F3EC679E1C63E8243887A11C032E84EB20
F572466F67276BD569709F3DA94CB079D9AF78A4C998A5D8131D62DA31D6CD94
A54CC5CE59292C6E526F59005226EBC91A7FE5AC5F81A314DC0521630E4728D0
8DDD77958C89898025EA873936EB69BC17539AFB4E5E6E11F3BCC880D136B873
07C25B821828F53A261608FFD5E079148DCB9B4E44FEFEEDCE7B6160978ED7FF
4A5199B53BE8DD7105FB8A840D893F79F3230443D11313D6EBB935EE4A6398C1
EC1724DBCF6E42D0C020E7FC1254526F2D8D802D96E99830FB11102BFF2D0A40
4272B8F384934DA6F37FD24038848D6697C68C519487D2C0D18EFC7784D62410
CABA6E61E6A3419D0ECE9ABF70F2AD36B7F212EEDC438A1B03010C44859E80A2
211EAFD2E633583992E75896D0BF5E6784149C85FDA1FC19AAA54C49F6F0B147
23B6EF8FE6D2DC18EB4C02C6BFCEC3E71E20E6D9810C455302EE089845046259
EA7922620DCD74E536B655A3D73BFB9D4E35D1151DF1211C8A80518B985D783F
D1C063B42523EFE5142D5524B8229FED115DC70A9B60ED85F16448FE10D773E1
06008165D09F007ADEA7201CDB941D647ADF120FA59E478203E2CD1905166090
BD81AA30E7744F89CDDEF45B406BC66798C5162F46B6BB94059EA7F179073653
C1293AABF2A0EF1597397446A97740DFC33988FEB3DDD1BCC48AC262107E3A46
EAF7928ABFF4B54ACCF825FE6D72CA54E0ED3AF9CECFD3F6B4CB681726535970
BF8BB79B0D31DE79456DA0AEB62BF9F899EFB182AA93E1B541228CD9817B27BB
D0AD095F7A824222A3751C40846188611E976891A2BDFC66EE858D35E214ECDB
32DF74EEB735CD1C98201F895AB94234C55AC2BADE60E2A8E037290EACAB5FC3
D90C30A01449D0F3EB81D99285AD770F5E87B0F864EACC0F71D1FAD30B15C12E
DA009C5DCDC2220B7A66CB3C14BFC848FB954363EACF7500444BE945E826B26D
E65E3075FB61518F444641AFF6898C0405B118619CB1786D4976E95D7F665952
C930A568EFC6C2F83AE423590FCFCD5F871F03C22DA4F8F1DFDCFA54ED2EF42A
988D72A4FFE87447EAF45A2D46A4408FA73EC91D432A15993A4D37BAEF27F403
EBA7B867A56334B97295BFA4099D149EE93FBCC6272AF549BB67D3940CD3518A
F32E5C3204B59CCE1CB06363EB36E5144E42E6D53AE3D03F5C9672AAE9287788
27329D9894D45A452F80C93A84675B71AF94DE6734578EB4A5B62BCA1051D197
8A1D3ECDBFA157EFA291F7837CF697A1847B050EB2059DC1FB985090CA169B35
7E5730D3C32A1D63860A8E4DD82FC69DBE7886D7ED3F206398049E92A7DF9313
DC12E050920A13610136D6E15340B6058172DED8AB858A3708405E2A42E5C47B
6FB435D16A0BA0ABC84FE197E62F075FAEDB6E1ACACED6CCF4125EE2567C7459
D83199040AB64EEB27424B26CA8C6B462066FEB2E4CAA480DD1974485126E0DC
86B790B23B1358A2C68065322D9AAE2D559ABF7A2ED3A1DF2C2B7909DE08162D
9718D28BF9E906D959137073313978F2D5EA71EA121005DB4BDC978A8BE4D86E
59B51793EFE0A807437F2B196F5BA65829D9109E395A486D4AD48D6DB5901616
784B01E538A60CD0507B3A795F0368768AEEFCA02D900EFF12398D1FA9D5FF8C
4142B30CAD04CB23CBD2B5680E8AAB5C9D0592E7AE7314D5BE1A7606D112DC3A
D2C3E0F2B792C0BC289B8FA24D22A82C90A63566472F61D008598CE6CA39AB81
C63C2363FBE9127A3A4728040076AF675AD2A7432584FBEE461DF583D049D68F
7F48CD6EF03AC7718F1B6DE01DCE214039661FEFE4192FD104DF80FF593EBB47
7FB3B36FBECCDCAB62AF3DA89831F639332BEDD3B24A29EE505F477B50A2864C
72187FB7CD5896CECC8F39B64379313F142FB8EC2384C3A178796A4DE45BFED8
4D358E8B8DDC32EAEB0EE6455789701923020219D82D9B030DBA7E2A42248159
55AEB9C37A0696DECF493CE47AEF92E526DDBCCAE6410AD33B1E67AF4ED0D423
9C57FE699CD9F0CABEEAEFA2A97D02C82012C76FA59D36D24B65F245F3C8B987
57606D4ABA5A015B3875861637E762A1928DDD98C4946D7211B66967CE81AB1F
2CB5859B338EDE71FCFF2000E67AA8C8A8F08E3DBE118B4EB9B694D2FA9A130A
2CE15B0FB7681961E8B9E8D2BDE2AEE8BBDD90AB8798C1E9C7A986CF2EEE20EE
2DCF174188380EA574CD7B3F18E29A155D4BB438DCDDA7F9CF6FFCF6E773304E
E2381871A102A192E65FD22FAC28E960123A0436591D11EE1BF9F05DF95A2C2F
45CE722D9E1C8D4B202B949B3B32A0A371A51F64CDC4E06F544F2055F67F0ACD
49AA2A2AF04F69655F8DBE930F0D301D24E83DED465C3D67EC60F9FBE554BD27
786B870B25727E7084BEA8B53456D7B92E0D08B03A114275D2FD721D8FF2CE1C
8897D6ED40C4DE465FC53E50F199A73C1B4EC66D314A9A4AFF4C8FC30E1CC4C3
5114DEE607734D0910C30DE2682CC89941A689194994A690FF0E40EC09EF43CF
E4C05C80C05F2EBA7034DA37877C27AB769D8181EC2D288635D507A8A88E184B
027F08FB8C4E85D8F183D2C20E7518C87E74AFDDE23191CC68D7712A43146335
F2DCAE82D4643E88D11AD3C5D59C448B9BED05ABC123EAE75B000E5AE2CE32B6
D9A3094BCFB0C3250E81B78AE3D2579C577B6D816FAD91796015A2315A92169A
E858D3976A12ED23E8F33386558E6761E23E3A57E24ECE5DF44A172BE63244D5
DEDD5D298E3112888B1EEFA597E1623529F8734C0E096F1A0677949C8EDA1737
9526106A305B51B48416197391A96F0273B4F25EA15E67C07A4AD81B3CC862A6
75AD5B429CBA84E6404384CB70707F4F0F088114534F6D36E4D14A32796B8CB9
95B03EE89D82185B3B4E77769007C7BE8528533ACF63963449B77B31498F1C66
256C554C63B98FDF75AE81DD5C91B731F89E0191BF23AECED19F8E9687B8FDE4
BA8F6F2AC2615C55249640B3121AC66E9887F95E4E9E5DCC2E4B1C631F005C08
F4251173001AC87C34B23AB1FD8647270B7E6AB646A70F51417FC07D59679A0D
4775D00C05AE65EAF85FB57223FA553494EDAC8510EC58EC1F4619F671605FAC
D5B6AF9A887A21D59357BA64C4B06E2257F6EB8031418C83E0A8AAA0F61F3B72
1C02FF764C914B4C11AEA7B23988D184F29AAC5C274B10F1584C475C912EF1F7
0CC389D4FEA5F93CBF21E14F6A1194AD49683C875281CF89A430D7C3D779DA11
964F0432AB3EA1F5D8579CAAE0CBFD02AA25E4E523AAC610CC3B9E512C5D4AFA
34D00B7F74D8945AD99BE28B8000DBBFEB56F3B9C5A52B60A36EDE79BF9451CB
B7834FDD5DFA2963996A30D6DCB88D016D87D3B13107F9EACD6560508A7BD68F
0D6896FA97C1DE35DD2DC448E71C3310944053DAAB56B1075A0C3832220752D1
04FA1335DC65CB06AAF333F91C2D2910FE5E427D4554B341E74EF8941BF214B5
B5AC3E4D781DE2C5A1D799C37EB4930D7F62FB7E2AA16B50DEA57563E4E7D325
7AA9DCB5AA6CA9DAE6040C150F8FCEE87A7483F92277B32B4863BA576D952A5C
AC70B1A8AB77403A0B2E538CFC17AF02B345EA1FF48320F5E734EA2DE6F8FCE8
39017A480932AB96B269E85C2439AA0C3ADE8CFE209D1497290B7586C896F2C1
0D4575E5CB29FB0A23F9C53B79046EBAC518859FDADB33032C1FE6C3F4861082
89E9F1B5E29E580474363E157B01E8B11BB02FB00762A522A3DF2BD021C38053
A83C906F22B71C52C912A550242A393A1BBEF0DEA03BCCE2C44B2C415BEA7B5E
AC41CC092D15E2CAD28187E6DFC27DC13B8E42E450DA982FF3AC62D4E943C2CD
990C162A20E2A03AFFF9D6B0AF70E1D643784CCA58A6213A5247CD38F0C8DFC6
1D9996A8FBF914209AE128DF4DF01FB0F15F7D3786FE1AF77CE0C06AE18F8C86
E08C89E4533C5CA79EEF3D4974B1E9336043AF1975447B1D71E8D38B5515D942
2A0B21FA1275776C4DB5D6BE8940696E84D84C6A472D0DC18B8BD6BCF8A2222A
4FDF523791633979FDFECAFB028CEA38DCADE1D9DA539C958968699E861562F2
897434FF14F1B24A651DE4DD7B841F31A62081A4573CF6A56DFA310F51AE03A0
F69B0FF8A930DB89115EC6FE9DDF234350A9EF4FFD4F58AEB2BE2F6D421DF42C
129E46C5D34F09680231912D945FB126730D45106B2A133B05DFE13EB7E3AF75
E74EDA710149B5E44AEA29CE5EC8155A098B31C2063D626098A57B281826C275
FAA3FB8527635504F8BC964FD5A30D1827179CF6620E2CEFF47918A89AA40A96
402FC57C1266673D9A0BF418F0F57E0B17FEF032FE5C916D6B469F534A8185E4
F0DF48481EC9FA08A0C37EF925381C36634B6101E5CDFAB87A152F1621D46C78
AB64F7B709495C9A1DAE72ED75F22A4799C74115900A2B3536890F2B35784B72
2A1D566F5A34711644B430FC4D47360AD6B21C921D5CEA03A1DFC123D244AC80
B5F757E5B0C2DB434D9B22F922D49464CB0E36405D8946BAFEBDD99016EE4A35
DF3AC1E99DAECD17624FA8A4FD691FC1D845E9045FC9F6A3E7623D1E29550CB0
B4CC57E384FCC76EE6407A55E817D49D30EFB64ED316D8E1AF73FE1D2F9A31DF
350DABD4448E3110065E69D79517A4E7583D70B02DA2F49827684DAF6DBDA2A2
650B701FE20A425FC22DA20F3AF32E37F658881F24B0F048C2F099F9EFF4355F
6D51E304ED0A6C9A0EFD982D8DA663DD1B0140DC5CAA97859FC34683D3F32998
27E633BF24A5894AA4742EE4A6E9AFA761EABDB52D0540DDD083ABD9A2939769
0C69E92FC8667AFA12FEB015916E7631B822FF44808406371E3AF3CC8727E1BB
9AD68083759912E0E7222F53C762F8D785BCC0254579D140F9A092F433DCC900
039C83B19F1E0A4FA22E95C2613FE6A7CE4BF8962858430AB8F0CFDC39D82804
5042809B4B6A6C083E692D358F03B0074EE46F3741AF697F4B7557F63F50ED77
99609A4D64FCB9D4442B524DEEDD35DC3124CB537F0F2F6B5BCC6FD5E1D8C9D9
32F270788C2EDBC3EB6B24218EAD0ED8B963D1D549E63D2EB7C60C2F2A262151
4057156FE6F5D1483DFF1A1FB6E42A9D2BA00A9A5ABD5FF89A3126485E54C0C0
92885398239A36547E16A8CCBE3E2F648F0C54A17756237A8DF72E0EE1D1727C
57CD59A570D1BA738510BC4A04E0DFC1D25A9EA2BFC0B1DD99D17BE49EA9F7D8
D16D660A031E4B6B2D6424CDB0523BB2923E834E402C8CD1CADEAD63620945B2
2B6ABCBD6EDDBE00A9C99E436F5CFDCC6949021068C2178E2CD86B31138546BB
8DA5830147F109178B19B1E4B51EE595A9D7C3D675B2FCB990105C1DED1E181D
2FE00612C6B030AA086E7B5FB078D81B87F68326E6C59A9ECC060BF9A49C7062
2DE885A67B974756337BA82174C5C439B7DC98CCAC1F5F39B423F70D68EC5F4E
DFDE7745777CF9D7DD324686EFA3BB330208C34A9A03410055B5D90FFB8BE2F4
27D3EEADC7F2460AC663F6E32347279D8ECFCC5D799FEA92ECF0B5ED1CB3A33F
42C9C674D00F1B54515F06E6916CB74931D3BFC6D9AFB4A63554E8165F51B6A8
8163F8D66A425E639FC50B34443A36982F28A677D884FDB0CB0D74B8D2FAAB7E
EEBDA6F3607700B4191122EE5189F93BFD471C76DEA82C374816CA7732C80F7D
0B536D79759310954E16368B69EAA106D8FDB8725E97207FC5481D994457CB94
8EFC9C9BDCABCEF757AC0706CFEB3D858BCE4AB2639ADD71E791165078EACAA2
4805B0C77637226B52844D0235CB3687E98293FB8A7A33FC9FFE0ADABD61E061
20F6960FB99B5392B15A1BDF046DA1AF67757374E6CDC2588FA5DF4400B1528F
EDB77EEA0D83106745A11A6AB0D5C294F7D20E0D93E3BF0CD67E71C53024B03D
C55DAF30AAA9B441F5418A960AC7E798B1B2CAF702F172036DC73BE9EBDEC991
E2AD3F5E7135D01D7F56D4B0ECD45AC94E38FE6BBC5759A9E5560B1B8875C829
5059341DCA13CA0FDAA9BFEDB96CCC8264A9CE417A47351DA760B7EBE1323A79
D0EE3EE4E3041C72CD096DB906AB5B365E6FBECB93C9403E3658D9BD552DE9B8
B0F0D4BB4211C0F287F953EFCD7B3DA4DFA7A2B0E16A56231F074EF416215788
46DB447D3CFCB6E51D11C496F2ADC10EB9EC39DBDEB3598F4AAA9F6C98F4F69E
28C3F7A4B93561763762FC463F757309F2156FE65F1B6CEAAA0F984A7CCE87B1
E99797AF2BAF7A2715A4234502DB4C52F1B16EEB914DCB2B60C7577381BFE039
DB6380B62D89409C84CEF257CB957799B300E19FDC136768D2DC94D30431BC8B
38CB426B4B6473F571F9FBEA97DA04FB77EF22D174A5064123219240D80317E6
B385CCDB25BFFB5445CA4B5DF7B0A6674EDB91F833E129E4B574E78AA08DBC1D
DC233D6A0ADB7CC0527CF75B303E37C4BD1C1292B95C6194B5A18A3C4FA0AC94
342F36A22B8441C7C19A760B7A814391CCC19B96D8F5B1DFDCB2713273B4F2B7
88B55D9E0374D108A944644B961E1DC57C3CE00A6B367F741CD2D79845CA16DE
43146AE4E04FA73E39D6EE2D46B4BAB4CC6F1DE34F48A7FCFA8F1D1EC7371E30
44AB5AD83970DBAE1CC4E94D6B2AFB178ED235F399154FB6E6B24F9DCD32DDDC
4DF5E8D786DD17CEC6F228DFE29AA81462F67670BC19041C336DE4B52B19C501
B8AF63A4C5D1BD6292825D1B428F0698672E510BA4BC628C055FD2B5B6D8F770
7FF781910F17997A440C27F6B3D4EFFD39BAD887999AA82C168E6602F93E6F36
1D0BA5DE4EA659829BCD60A9994543E9A2F5281A7FB47F661CC9FFEDB38CC23B
6162E4A5AB96BF8FCC6940967105F665C38064426B21875D12F0EBCB2CD828DA
59916E27AEB8BD7964F37F255475B92402B4129FF88C1FC740647E7D6AEA1A9D
7AE2AC112D1B2416D32DF7B22E1E53C7DBB42A485CD9AC676424ECA4815B074B
91D9B0E260F7271FE47FC61D09F44A3162984ED2BF274AD569FE247492A36A2D
65E9D3A81D2FD37D92F302CD31AC2704D9CB29C623F01649742FAD5AF8B79C03
AC484B4D1A4B0BA7578B14A1DDD206E140D1EF9A3FD20209D36BD78E9D2C5F34
591498E9C906FC49E1AA35FFD07328565672AF3370672CC466D8183402AD592F
88A82BDF2E56CDA24EA9E903182BF177988C564D794FDAA23AC1AC3B77435FD1
22D6F385F0C29BA88D4D1075F95CC287B02F4CA1A713BD84F982BAE49F01AC66
C120085FAE7C17D4C8574E5B2AA7BD16FD8FEAA1665922AA97BD0BDF2D780D5E
18E31C3C87CDDB6DE033212209150334A36044C6C66776BAAFC7AD38F3F6894C
E56189E8B79800189BDF2DA3A0F12BA7FB74F16AEFA560783EBAA255C567A4F1
AE08E14E629395DDC74C332136A226B7C4CAE3C46F7BFE635CBC1A6F8E9599E3
663C815144D0DA75107E0CD1EA777FF609D97D2481E7111A7668EB5EE11FF81D
C56C647BB7E8B986B55CAB9A19602B89DC4C2030E9CA13D9C379F654A7DB6644
4DCE7A6CE5BD3222F601CE42E706268B4BF6DF349722ADD7C8D5394DBCFCC6EC
57E1B8BEC2775327AB7067744A95F30826F957555375B97351C5170BC658FFC7
15A120E09E67E2F7367BCCA83E1BA62C2CD5C22E364B4F087D8BED235F0D4BF1
6E36D04290A52441B2568EC436369B0FBC1DAA3064A4FEAAD87981D6DA725ECE
61D2C177D7976509DA6DC1AE623806B838B9F9B411C0370D932C4A41204E34FA
2DBF1F1BCB2E7472F9E536DBA21E9972BB9302ED3BACF8DBAE549A9D225505CD
269CDEF344E9DEA564FEC4C41553EFF09B4F23B505857818496C0E6C81C09C58
D3B31A2839A6AA51098882C6A5453D0CF4986A236DBF4A05866B778B899A747E
47240F95065FF772C886E065343F6953418D666B98C56CF513F43B037FBE9D79
D877795D854740456DCC1DC3C64CCBEEDB27EF291711F1DF2A02C28E4EFC67E6
946EF9A716F5D7ED223C834690715E067EE259E4BA6844649E19EA36115A6AED
95055616
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans8-Regular
%!PS-AdobeFont-1.0: LMSans8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans8-Regular known{/LMSans8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans8-Regular)readonly def
/FamilyName(LMSans8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMSans8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-446 -314 1510 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123833081E024C973A102E5EBE9986
D95806FBDB9DD41BBEC9E98875643E43D499FFB2E48F58EF7FA59843B8CC092D
AFB67604D9EE4CF2B87CD20222F6DC988B80418F8EBCBA06EB7577DC5FD0473A
55FC62B9B4DBABB8776941636268C7D4F704AFF1C85927E2D0C03585B60D5DDC
D07A1FE61288043CFE477BEC3F1A0BB96666D44F8286474186BD74037C208527
135C090597DEC81C9F985DD84C889A3A32B3805B9A653C816C523D14F6215B89
5E57100A2E43AD20344D45AC8419E928E4DC97E1B1B2285602B23DF89E149B9C
975AAB575A17772D4BD861C8DA1CF693AC37BA57CC51B9CB825607CFDF41347B
D09648E797437823A12DA3ABDAED3E3E1042F4B4BCEC0A9CB2517C0047ECDBDA
507600F57BF0F93B33764E47B5572573253F1439C293C4CBD1F018FCF994A313
30701B46B9E83B3C16E17036EAF2F0072D5CCC8AB293EC15697C72C097565D80
BFDA02AD9357437E60FB57F31BD6E172895D0E1212674C1401A3CE2599E7CED3
EF0A11750E622958C887E58600672A1AF43AEEA1D9BDAF69147E613C610E127C
9C8190A5B3F5F9A3CBC6A9A61D1970F030ED0D623FD6AAE34DD12E7F12B00204
42C239808277550593ADE8004B53B5FC0BB124F58965745A82152F9860FA6FFF
94BFDF287A8FC265B6B0411ACFEFA520E402DA17AA6B6D0904D8DCB1A56E96FC
6A1C7300A4455F6FF98AA6226337D5FC699B1A0900F049453DCF3FCDC8A3E397
C011C9D2E55D0C2845297B4C50597F58C82B0348AC299172DD191715C1FC81E2
BA9F00D26B3D3098006622D2740A0EB0743B1ECEADE8F9697C7F782265A58C4B
7D8B174654EC7F3BB8ACCAD729170D100F5DAC4CB7CC0EEF74D662EEF94702E7
9237CDB6E3DAF2C65E5A10DDD52EB236C227C3DEAB315E5CE479878DD60BCA19
564DA461E2EC66ABD6E7B4952C21C2D3E37C7B97175C5668DB4C64CD1CC23F71
36DE0E644436C67784A3CCE2F3DA52F258B8AC9D36AD8E947AF7575525D2D645
28280D0A82181ABECDEF3E5DA19E8A35EE07FD469D9896154465BB482692E8C4
487E1F75227D65CF10942C271713B28F990E900C2180824BAFBDE4FB76939E77
31CD2798239CC4C94E6141CA7FACD96BDBFC373E1E1F87881FD7BC3A7B98F3ED
62AC3112B58FAB45215177C2805796FDC240A7FF9D029A572DE35D3D9D3E3E55
9A5B4CA4700A71D0510CEFD3175FA8E7A8D4B829F179558121181543EC7117EA
BA7B58E69FFCAD95AC5B40D03FA898F0FA2804E0B1CAB0DD9BF9D336F25E5799
BB341C0177F10D973EAFE7F7F8D6287C0468E3AE99C277EC2FAB34A2718D7725
67B5B1997AD2FE0801171A58B943DF0EA5AF5910F6315D432DAEC05785E0611D
82A36F9FC00D0C92F31E2C049463AE81F753E2F863AAF5E28673190638342D74
B1A09188847B2128EB8B139A5FB3EDF22037FCD51D6CF5DC1E2B1CED5D9B69AB
B37468777718103D87C1553A051391F0246769EF99A69AB490C07A9FDC54C2FB
1F6353EBDDC027D3925BD32D89219A778B3C4C1207108F3D4D7AC6BB7F5EBB84
447B363872C92410D15210568759D8B7156E36936C54269CD6C35E9351F86494
0B7F86BA9A04184607D4965C1E7FE952C244D78BCB7A908AACA1EECAE6A56A36
519311DDB3D1CB66837C2964A2DD0D34A23DDE404F43A166E2E533F1C050D35C
E4AEE92C35EE3913998BD3D92EC5CAC7416E4ECCE80BE54C77342B004590FC45
A1D4C5B764583A99748056B896A27FF97F4A510342C8A67BDDBD597BAA0DA4E1
0D0347ACAFBB9355D0219E14DC084DA2D384DF669B0CAA80B3AA3DA846129D2B
44DD121BBDDC1877EEE37B5263811E5D02B3A4043CA72EC2190940128A106C96
39482E44A972BF53BCDF199F90DF5B338501403614E907DECA0185FDAB99E820
7FFDABC084BCDFC2A202F15B5E590EE1A142E85E9BA72134CCC83B6EF7748016
4AFC42453ED4BC8C59DE0A5C01FE0E5F3EC7EE6E6540D5A2602E61D413E79CDD
37FDB07131FDC420EF525CC0B5377D3A005133233547EEDE16EAAC1024DFA2E1
61FB6367FDA5806161D31FB9F7B11D1F3A161B31F7072115A1E570389672933E
A7C28B31822AA9DC74A4F34B67C8E4CCE0AB011371A1F3477648500238C40EDA
C04F03C127444311964F88706BD4BF54A5A216F2EED84DCD4C7DDC79FA28FB84
5E4ACFCD0160136BEE30A0B65D1C13CCEB7B316717EE859D7C2DA83F003A1419
549400BCB01465B2BC0429162BE040639F2EE9C0FA967C9F3B8186EE2454E318
F5CC571A951409B0E69BB7A5EC360E6B5746DDE2AE0B93554896A1FF99CA74B2
F6A4FBC3FEE825B1DBCE083E5DD35010B87C93AEFD7C279D1E95EEF85AB528E8
CD2DA99E33C7EF0EE9DF6CDF3548EC4946749CDC981002C4414156DFE0D78345
686901564423F1F8A3AB5AEC5A549EA5707353F50EA52765CED0D79F987D963C
C392365BB3DDF7350A281D1B45D2A6AFFB7E617C9265B466295CF70CB228FEB3
A175D7E82D2846B4F9E855BCB5A68A509C2B7DD4D24935ED0E068B072C3F11CF
15C402D300D2FA7A665BBCA560E04852E7DBC79C2DC8561F805C0DA1E123D1D6
19980E73841F84F59E0500496E84FD5E9A7E4A2FAF1F0487C30CAE8A871B9627
A789E268385070E0983213780BB5ABE6B5DE82FFD9918CA6A2EE8407291E316E
B3ACCF5F83734CB4418FB14E9FA56A696CF4AD0473CAD3F3FE409D2B268F228F
0EDBC59DE4F648B6F6F9568EB7FEEF2377E65E5A037739E141A74174C2F9403D
488F94F4C714EAD8BDAD3DEDC8959D90095B2EF37AB28FAE58C074D92E17607B
F73CE05C8A32206AEFC8BF4731D38999658A393B898B83797E26A54891C329C0
542B9E1FDD366E1A6CCD5D86677D66B683C75C002339E952B6259884C37B2E98
CA646A8C3CC88384C45BE7DFC146AFB27C32BD7A3AE60ACBA39AB615F9544AB8
1F6B31C02D847D0A23740B64BDC143DDE6C6A8AFCFF8D1F97748F4B111817974
8A761BA76B9E0D0920C9326B499854BCB7C7CBCD9F998DDB429403619BCFC29B
109BE23860C670D5EB5B0EE6CA09AD1C5A025B577077B72959D846B0224772F8
1346CC8437A4D888FA4FA4772845A518108C5548A8E3E0EF0596D5BD57D23639
B1D82F04AB2B64EC307C8989B26C4928CBC3C8D3E114E264BC85D3ED2103D8AE
C2084A7D159BDAFA098838737BF264CC73DA9A1545158858FD994787FD2F1FD5
B46B5FAC77CE35CF5734A0779A9CF33B4FC3A6252B39AAAF7045B8A0E597F54C
D26442237EE2121C14F116A1114838B333EF11A9289928D5D31B088F7C1E44D1
71D013D490A0EE6A8B291FB4599FE5AF10E3513D141C31DD7109BCA7E9D83EA3
A8E4F5A17D763323249C164B1A53439CC169CD0B2F362FC1C2780E963028ED2E
CA0B7A027A91E51A26210D1E4FB511A37227B8236085547A8B0AC516FAAF467D
4856A8FE1E3057ED9B6CCA466A3EA918A1EF84D7D6DAC8936854A0E9B5873E0C
43A98002905B1F0810312A3CFC4AA9737766394E6DCD202B31E5162F69F41970
D2F3C7E76111744C5AB9164ABFA43D98FC8A082421D6EE28D15083E41EDC53EE
7F396692FE5901C4FBCC772B77EA42792FC42F4DCB37AF47A894E20B1CADB630
138C9B03ED2F4592D3D38E10A40C93C7328F23AA05505670EBC3A55E5E44DF8F
5E3971566CA14F1F4EA0E002D8B94CDA144057B4D5F9FD416AD754F2608735CD
2A532A8B3AF7855ACCB93D4C6BCD60D56ED71F2662826D9A1865668783704E80
26D233E70C181952FF08DAA85BC8B9094D2852C62AC3A626A7519CB3D02B7029
73982E4348F14C94F2C72E10C5C421C759EC937003750C28B4E54C10F41BFFF2
24FF7E50E17EFE2DD72FD72ECAF8623AC2C6E1DE8EF996707C6B25CA5E7F2A6A
E9C67EB7F32BA17242A41671633A5E19AD1D5E5C5F47775A67C69A80416EDE87
266DD010D9E3553DE260FFD590BEDC71CA9AD4AC12B0967577D2939F24A13BE4
C74F78384E7FD399CC47BB2E9C3D0EDA0F4F7211B5B5CC0A348F325F3E455317
8FA7134FD48A8C8480D9137F359E6287C5369650A06CB5056BCA70A7E3B757A8
130BF3BC078B17590D62E4798489D1F02B5F76FE3295DADA1A1B81C7FBDDC7A9
A6F94A21C9BC9BA5D0107429B5953FB1BE0128C6BD47FEBD092E906E7424CC62
AA9E61A47258A0C9B8A990E07D61256B14801160E4BFA86D1BB635E8AC746436
363D8485893B11398E7B381CBBE03E772107A0A7F2C8164F4425BAA6FEF71981
2D43D780770DD78EBEEA0713E69137A933A5DE7D832DC567F8D7F2C6FC5D7E3A
4F24A4D4C8BE1515C17497B0F2823DD5AC2A249D44E4C1F2497CC5A17D5E2DBC
4D5C1BD11B579C53E67DE417DF1512EA832CFF38AE62A7C42F405EBB4BE70A44
1D320688F0D2FE43DEBEC8EFE49627213BA42C597D0FE53DDC430B7320782185
9BB191D53398A26D610D53AE6A18F9ADC86D8E92256042E3E88F696D4EBFE58F
651270701A918B0E5D725D21F531072180C1D863F24617C2FD05A5C1D2FEEC63
5A9F1E67D57FE919DA0F8D433CAEDE97BBBD871065E8C41CEFA4148A2827452E
7CB712C1049B9D8CA89B6E813D9223A95FEC0D35641FEE00260B500FF20173B4
F25EA15E67C07A4AD81B3CC862A675AD5B46D5DBB4DAC6C83A858307703A6F79
AC6ED05FAAC5784C411376F3D23805CB9620828E3A3B42E9FC44597440135036
2FC4CDA7130CBD47865E2E2970795EE44D702277E648AA2DEED29B985455F21E
95225D7DA4780BE7588A2328BC49F5FDFCA8BE38549AE53F72B85A6F03B58AE3
644ACD4E770540F478500F9A415B5CBFF6108842C022A540D7FBF1C98BC18551
4EE689E7B9DD9A48DB968491BCF3D31CB0235F9C108C4CD95FDC0C8D5BF2E7D0
4AF5F2FCA69C377DDE8850BFD8D8A22E4C49A366DE4CCB332EAB20A47BA58EAD
A6EB66589C64259AB1F7B4D89A563B3E7BBEB30BBE13FC40A63E203F6E03A90E
D01EDD1A46782159CD556304B2D4113C97DEFFE1AED9B3D93703DA04B616B9ED
A1A9F772B457EA8FCE8009D30DFEB19A02D18CA44689E5D8C3551E1EFB7AF0F1
EFF4F1FD4C20B8E3F22CE2C0394A4D701EFF3967B5A741B252F764BFBC18C29E
0A119450BCF35CB9094931CB58D762AA581B02F75DA5484396B4469B06065D20
34DDAE9C7B38F502A82A0D35F24B66D1E075074E35E35172BEC6F4580AB5F541
431E0E308514B36238AB8FAA7956D34CCBAD35DBB4AEF2054421E956EA7DC4ED
AEF6FBE53B7ACE75E20197A2053EBD8F16D78B416B41B6AEB440DA475E132404
45D46726A6D4518CA92B2F7F9E34F5EA9823AD143D771AB97C2B16FCB27BE2C3
0BFB01B0A77189D180BF399AE37F3F10203F5066E2D80EF7C7866BAA88E214CE
6F54A5A6CAC1DCE1FD8B15622AC1F6C8A56A3E34309BF5ED9D8632C4BD136C89
169D45718A88BABE29507FF24B2CB8D87BFCCC85B1F91277DF1E391ED3208DF1
AF5D2E1BC3888224F96AADAB604224E142F3A0446948DF946FC093BBE4CB287A
03CF94937386246EC4444989F911A9CA4B2A098441C9B149518778E8C5B3C3D7
C646FC6BA3315D4C717CF34DC2F50D45D391FA8209DCF999478C99FFF087C75E
D783FE3DE2756FE91B3068255AA131C87FF582C8ACF9BF5602534BE942FF32DF
24849618CCD9786F929BFAF65B9F093F66AE0198DB15A1EB5F938028BF4BE0A7
2AAFE74199DA8D088056F1F1323CB75F9768453C3DC03DEE2825853BBF13AFD0
59468E3DD663A5097D8FF96CE8A5C8F9FCE901131D575196D4941074002A6BAC
67DA45FAC0B1339E63A2DF0854ABDADD091EE5CD5F6824BCF389AA13083B5191
5495A5A98EA891CD44074C3B78058725777666DE7703EAC3383DC10425D56C99
7A5ABA2257E904FB002E85A4E0740F8195CF1E171F1AF6535C0E67D552DD7F79
74F93EAD75FC26B7C098DD1E4F08E9A6DB793C1B1F3B8F937AE7E4D06991574E
95E05E383CE7851BE71430B4723391FF781AEABAF5B97A93E4553C8610D9DF31
C42A62BF096B816BF1E0348789385864B2CB30DF6E62F4C135D31756C2EBD239
A77779F88F053DF725F2FA768CD4958CD594AFF8C59F9A7890AE341ECD71D052
87741F6A99089C9BA6489E9D27C5AA9575819DDF023FF06A5F3B1A51AE4850C6
FDD58842E88443AFB83F96DECD5E0B32C5EA329CB34200253C79ABB5325CD9ED
FD49E8901092FF6B232F3CE2B322F8A248FA62F116941558BD0F6554E152EFD2
68E211731B3F05BCC93B20D730B43691E149409C10DB07153312FFFD1164F024
E0D901D6F4BC37F858F9C4B19B9AD0A826B881E05300A295431ADB8341097EEC
40F28EA574490F6493AEE59662497B7E1272D6209DA616F6D521685E1C613BA5
484CC6C201DF87F0F105C79882D616159780F83E47EA4515043C418049903E3F
36885AD45509FC3CF5C0A49A3C4E6440CCEE637518F5812EB351B65581525A25
CCA5752AAF92BFBAC68A88FA66C49E1490EC01CE4F7F66BCBFC852454446457A
97395E80B0B978A58ED8D07F5890E3BE6B8D5205497B7E69D652D658A684EA21
E0ED5E2CD0FE1C8162B1A98B9069DD8803284E8596260AC1B910BB59940BAC40
E626D5E1C7A474BA19F3AFCABE1A961FA82A0C847ADCC5187331D0863A4573BE
520ABDBD8AF397729222F3B7FE28FA141151082AB1027A7B6DAA4754928E228A
7225094340420FCCCC8C2F3ACB0200E1AA0CB0ACC846F9D65187171002AC3119
3E578D76E614F8EDC3A3B494F3809BC20E03E4DA37DA7FABD00FA4E1659093FD
46A564338A191EC83CD5AD0E88F6356CFB19D673D1241DDDA5FDA97AD809021D
1EA243019B299D2D2A42C02E3D1C41FD46552E7CA1B36B02C66505D76610E650
3D4DC2FCA7AE4C781A2AF6751AC2366302A42FF218699F292ADF54BA19904BE3
D91A86226A3B6AC65CB74BF55DA4FFB033321740F4B82C9E1D604056A76EFD25
C4FCCC7A4BAC3D34E426D7D9D908236037C83A759186467990C8FADD97AA8540
76AD6C685EB8A77528D9E4FEE2000097F2C755A7F47553C52D51B91D09F501C4
F0AADBA8D082E4057BE8562C583391781F4AAEB20AC697A74D933DD82E32144F
AC0F0E34F1D0ECA423C805F09EF4996E73B7124871AC35FB114E9AF481738647
2C85E88B1B67151184DB5FA0B27E7CE3787FED70B0431D35D79BA5855AA9D1DC
181EE715CB577C4DFC25482A27A09B4C18ADC55BDA19064432BAFC15371BFA8C
1A43E63ED6B05CF844837C8EAD4D4EF97716523276044FF1DA4AA267595E9A52
B3D8AC1E8FC11E22707E26253E1AA57751A0361165E9D8BDAC9197EC4A058ACC
E10D39633C0EA5DF269D89E303F37ACA22B901DEE03B85711E3B41947091BD5F
CF05778BAA1F71B2052CB92AA45721DF8F603BB2CAB32249871871BD55E515F7
FC9F4DE75B2CC3FA3258713DCF6434AE97F67BDD87E81163E68BDD4B8FE5F075
B9BEC948DB8FE7A03C5CEF1156392DB08FB51496D2CD4C9C679AFE350E0168E1
2BD0DF359CCD59FA104A633CBDB90C3C2A75D382C7F7361ADE33183B5F100170
84FAF49B45D16CD53C8020A15AE53C4E742567609F56C89271FD1BE21B1AD504
2B5AC5A138AC975E2059FE4E79B74123E160E65D2ED3DE1E37473F9BD92D3BE4
E77F72CD7EBCD51C597C1AF6102197A1C8714E87DEE3F0D3A1433A1F89DB490A
00E006CDBF5C2D61B80B78261A2AAD504E85513A94BE894217DECA2F18BF6FA9
2CFB8D5534FA4EFED6873046F14E850D30BCFD2B6A49A29126CF94E455EDE2B2
B915DCA5D50A7E3512B325253FEEE5F0E11F885A427ACE9890EF519FBD740A4E
6663380089C01FFFA86232F92FC49DBF4B870C28C308C0373A7CAC1D69A97E88
743D7EE30E15C1651991A6A9CD12066878AD37CA493CE47AEF92E526DDBCCAE6
410AD33B1E67AF49EFECC15C73DD46A2C464936A164325EA88A7A3362B706E41
8385124758A2CCBA6604E8F72BF2316D9271847C8C4C0AB990555BE6A705C385
65CE02C0350F3C3908A74D7C820678F4B87B292CF288D338C41D889292851E83
2265BC0E018F44419EFB00053102324F4C54961BA2C04E97B63A84F9AFE1C032
512E819FCC17EB00217E5323CC040E4BAD9A9260DD5D895AE3276AFDECB79079
3CA2CE372A2C548AAB3DB4B6D1148F3EDB90B6970DC51ABB418EECEC244A1F30
330B1C2495DBC7E205C4B0C7F6B5D2973FF4123DC1F6674B508B50A1B889980C
CEFA92BE0D1D7A1AFD423B1BF490E4400E6BD41BAC278FE141F082F81D06A6F3
355819580C478B6E2A509CED4243271E5AFCFF11188360AFC84BB2DCD919A160
C7AD5BB562C5D4198A9127F8B594F29CCFDAEA3CA1276BFC8969DA9AD3A45796
201DD36642B5A8BA107BAEA2B7086DC2E4804AF01BCA667137A76761CBA2FBFF
CEAFE3E98D5590DA05EDD00B90A3A4335C6936A3821D250453B717ECB749B836
51ECB1A45073DA24B6836FC3CB317718EED1319ADAEC1A0A684762116477A4D3
1E86315F29C0106A137F26618EF0DC35BBAF357A32CDCE079C1047F1E55E05DC
5ED6662FC9CF4D1A5F32B6E6F0DB26D2A2BEF33383AD298E04609B43776382C4
389362AEA7FE4E03637B459A9B627B853840CC0A296F593060E9CF41D2B8DC10
DBED35A1D62384F56B64ED2E391F08E5C6D966478C522E1C20996EE08ECE7455
EDEA610D0FB69A58D32F41B39AF04606327257D9BEB1BC43CE626586FD77921C
79F575FE0F36A9043906742D7FB5604173241EE0C7C6A83E5EA7C1E1A94A5F93
2FCE2CD96CA703FFC8167C703D76BE94C87BFFD859C9885E7F6A0CADC18E44BD
1CC4065D71A9AE8C8FC81C7A93EC9FC3BB5BDA3619E904570286AF4AF1411FC2
EC1724DBCF6E42D06B418F7CC6D43D43344E3CE232E38AB2B0CF3AB3029E31BA
333586646EEAD71F1CCF2C71E553FA3B4CE88FE8F9CB823F098D47ADAB33077F
0BD2721C066F31553E26153DE9FED3B3F6B887D11FDC6AE09073B38E8EC302C9
23C417F577823C021042E938F50544122F3662354376F998E255DECD92AEAF5D
F076EA121005DB4BDC978A8BE4D86E59B51793EFE0AFED1ECD8337A1B853A74B
2A172A7A235A3586E7B93E687A31B00E5697688998D4B8689B5638004350A974
6BCADCB7A933234276082E17993B297043B2F75674AA08FA5AD21B30140CE83A
F772E98E8CB3158C0C324C6C762A62524E355D312E8E0B4078AC809300807CFE
4BF7CAB7D95DBA3D75F1EFFB112F0A4D9FC5B6A797EF69C179AEA82EB07DEBA0
8DE74C2E4B5B3129DBE6223DC18CAAAECA06ED2A188680E41CEE552DF55A235E
A7E738E9BFC739CFF035BEAAA6D87458CCF25F198AA55DBC4F8AFB25E20AAD9C
DC3302D01D7138DA8832FCDD816A2AB4185280E3733ED13919BA719C14D80A9B
BE54DCCC08131995CEAF0DB6847516F91852E1FA44B33B249C615F4A4BC93052
1FAE6AED4365A5152E7A0F3AFD06F2B219A6CE389A3B8C465362CA8E91B3C759
943797C24CC83176CE29DD388F262D3B5D3B93ADDCB366B3F06E7E7F6D9B01FA
46A1AD155659591F21DC0446A249375C2BCCE37694DF8A1219DE0AF541979EB7
3B501C6A6B6371CFDF258F1E91F2A6E70A0088440F1D6E0E97B5AAA8A46AB2CC
7F096AEF83FADF34A6E5CFAF53CAF1C31EAABE44B4E65AC10F496FEBFD1A492C
418E90A879E70C1FE775325A6F54403B154E51F564C464428ED2D7308D332978
8FAF24F55482B34315A5F973442115235ACAC2670230C67883D344052C363198
B3186005E9D570E7A1E2EB5632AF3BF71AE9E3CEF148D23CD69F1FAAC221D701
C67236E08C7A5D8CA9F3213E4AAE753E34A7C120CEE6144744E50AD177438EFC
0B5CE164677EB1969E80FC408A5814C436B93281C6EC714D16934083213CC51C
1419D8F49C9DC05205BD0F8E9DF4E6E5CAAC59BF08AA970D567F9BF6734914F1
59ABA7FF72420F35C526A4FB1FA768069FBE4A72C9659FB6F8C1A819C885A1E2
9D7BA5BE903BE481B02B20E897BB091F3CFCAD3C46F36F0191A33C5E7DD8178F
5CC6D1B98B63008B156E60D52D395BBF46B92CDE3C52068336290D74705098D4
582B1D082645C50A99F058DE70A3C16F8CE40F74F7CA2B5DD69BA5817383329E
2CDA61D7589E51E22CD1E6F80D28B1BF048B779FD7636D5A85C5FACCAD425F73
EE8A47A13175DCF332487EBFA6AE2D703D7C3CD741CFDF7FBB0ADC2D578C930B
7297F23F8F12162440F21177DC66198ADE6EDB800DAED5F0E76308D168A413FC
661DF898393C9EFE59B5F11224859357ECFAE2DB8F2221D6994F6BCFD7695DCD
BA09618F9592084732098A974435425AC5056E7AD9D106C574EDBEBDA7D280DF
AB8B0B3A46F2CCAB505A7886F000800A4319C0482F9F2486A27BEBFD1A7F4F36
E989A4EBE041945DA324CEE32BCA0082F8C60F724B85161058706C148682972A
6E6F49EF1F4E6ED5A79472DFAD9BFDD47020AA298AADDC5E7B07C730EFE3F100
1A443494739A37A126C18FBA1F8D85A7FCB7D70E339334EAF80830CCD2342105
6677D71FBF913829720B6BA3BFD44765F5F6498FA3D6F4E13FF8928C4AA20FEB
6985960D83D7E37B983A7CF5036E2CC886A586DFFB7CC0F27B6715D3D861359D
88C4CA4F05828A679C52A7D827383D3AAFD0AC236A786FB3A0771779AC05047D
E14E2F16BDE095691BA21422C125907A7F1D7E37E410440BAC7E695B78D85F2E
516EFD906488B21B1687FE2A1213852764FA5006A465FF95D6CD5A14A7D34E31
28DCE082C9A36E053894012B9625ACE8B379456632E7FD1AA490E97EF1BD458D
F0821EE4F0795FAD09FCE908A5BAC001904C1FB4D0A379635CAEB66AC6349E6D
09199BA12884737714C5FF161637139040832151A6335EA80DA1C53C701941A7
88F1D96E58DB216AEAE99EEE868F964E38C3AE34E112373ABECD4ED5F234E868
7F7DE51BE75533B4FF5AFC84C6599010EC342D3AB82FB4C537E61AE73D6FBDD8
9E928009C8C7DCCA17271C5A43E9B59858D360CE66BE1436C16C9D2E08359824
B92B879932D25377F8D0EB5ED66BFAE778BE2215C400B936A5B6C8237CFE5B44
D05AA269A0A87029002556580FC5ADF247BCFFC4BFA4DFE3FD4AE99F5A8595EA
873B60730081EC25AF5765919460760E84DEFC0D831B525F86FF593EBB477FB3
B36FBECCDCAB62AF3DA89831F13D0F1E2C348EDF0CD9B5E64328E0CEC0B7334A
C7A08346515CCED2B1252A44A78528BD7D4C3ADD6E813D7270F0FA5B9C01BD26
50934FC3B8C5AB0611A3B359920157DE538F5C57EBCA86F44153CBA35E9B0D15
827204D5D5A2BCF17C1E5CAFF353E21E531414523527007EAD19EEDA792C5688
6570AAC7DC086D280B3CE685CBB0C9C9843DA6DD2485325D9542AF9CC62667BD
404A074A13056ABD1F78707FB11A6ED6F3F903B7A6351BE0E6D7F191666841A0
A1B54D1C2D60795B94DDEEB6F010C2D6158227B244F35AC6ED4AD287ADB305B7
58102C3602D8AC1FACB4B5A3CE0C34538C40CE89127BD552B9E6AC1A593FF7E5
57D1098CEEAC50EAB6A0858F98FA558D83B26036902838D156E64AE43911031D
BF781A1FEDBE91AAB361969F49100C35BFBB5BE19F35D7B290BBE6CBD048D302
03A701C5F4AAF31990B4B704F04060A9D7C99C7EF1FDA76DAD7AB989FC8C3078
902B1AC8D4D109FA9600B168C571A0DC9E999C23AAF12A577801C0AEE86EFB80
03553C2C0BD3A534C6F6686492298AA23F691AD977E6EEE6FD8B87C4C90E04DB
61386B526B401B0FA00E3C4B798386E997BB6A8F931D012BC2C902A7B089F536
C1C62F7C09A0AB015863EEA7B14D3E490808ECDDDB14043EC550DB5F0AD8C9C9
89241E67E3B60ABA525AA6C8CCBB3594FF04434F3B0E899154CBE7648E964A9E
C49BF3C415B6D3987160E858F76C4FCC94034EA40B91FCAC3F3D018449A6F5CB
DE31C5E0B1932E52AF3E89BE7F50D01ECD75D6276A6DDEB055204FCAEB73F60A
B6831F6B837FF74D012FAFE6D09100468A6313B1E582704C5699DD80F100675F
13817FBD42AA761018E2758C389FD2CB0F81712E5F1AFD2FA3B0C2B570FDE7E6
248B6ED9D0A45796201DD36642B5A8BA107BAEA2B7086DC2E481784EB69953BD
C54749A357A31564AEB8D6502956CCA89D9DEFFA417DE903CEA643F8ECBE4C52
A10C03486C115BE19624170E1B554D5833833818FEA5F5ED726D4251D4FE81C4
00FAEA98F62F02633E0F85A780A61DF255239EEBEB1C39F73B4F903EE544DA4B
390129222D31D01ADE0F97FF6B96F99CCD1D144AAFA9C44A8AC82823E6CECD50
CBCD24149CDE8BCE256B491D3F59CF6DA470516E702E270F8E4912183435D7C7
E70FD842099CFF02B6B537BA1EB93336ADD7402F1101B7666D7438014D72EC10
A798382A2B22773D894CBD5267C1C577884584AEA6C7F99B0DE869DEC5F9F546
69A8518BBC1336CA29E831E1E43E8342E3316565E07C7E22A2DDEFA915885136
85D3A86A24324A65D98AF2785D5B916D39A70A2F3F1509F1D9C57BE8500B09EB
7F877FC294E15353819A4300A2FA85C197D0443B9CBE917B01D90B6F456B9753
C2806CC4C2E9E615BBAD5F6818CE0EFE526E8C43F8279A423942A579EADBAB32
006D750367F74DF62FE687C32FFDDC1A2590AD2E912939F6BFAE231D0FCB09D0
A3B2BF307B86C0F754656A01074A27BB1FEB8529C4A2F795A05F2BE12FA7FC90
6F10A15859535D77B44B9E12D5EBEE7509E4D68BB6DFCA0137B4096492CB0ACF
13DA5AB57954B914ECA637ED4A18E80212151C1C0277D907055650B89FDE5491
890443DC179AB1A7FE57551B15C9951321EEE28C446EB36EF60126050BFF0B9A
15AE1B59D54159D6C6034422A39E2551366B196F4819C8C4756253647CBBD6EC
19FA67E283EAF7D1BB86785E1C2455DEAF0592A358B8C9EB383F87282EB77434
BDC79A29F57BA638B9E695AB10A9E7D237479C11AFFB4E0DB4C05C4C8CA01BC4
6F08EDABE22B162DA9A78C234FA2E075B9FC0FA8FAB9BA924CF3EC150BB5173F
64AC8F6C9677B9FCC27BCB0BF5557F29EEE84D0D1490361CFF6B86005E94F405
32DBBEF420B267B29B6F8643F42A4BD29EE8A8A7844568A90DC8A013EEBFBAA3
0FC247462E9C1172AE478CEE482AB7D31485ABBFDD86CD4E5DDD42922CECC44A
79EF02C61A1079A1FE96E5EE15C635E557B888E4F1B7FB089D28641AFC5DD69F
D07B7D03CBEB47D34967E3C99FC2AA1E8E200853CC75EF09DD006EF6C53E7A83
EA7D268E26E108CCBD96C66FF5A7F2BB88333D3AABA57B6B31371A83CE8101A4
E1926BEBD1C4CDBC54A3D451F3C0345BAB7FFDF30EEBC8BD4A7DF0884F7870FD
0C1C6B0F97B27345AA8316DE4F130A0B512508C064042986275483553D8A07FE
60B2E85D5ADA1125B5EFA5879D3C1B381FA9B54CC4195C597D6799CD5B7F09C0
67789C4B2FEE740BCF8F66A707BB17DCF1991BCFAAD26B5BC26F1727A525F170
429ECDA186071464EE07EE97A3D58B6720D556E3AAE3C6CD20FC30E38AAE46D5
DD4CA4415910C5DF7394EE947676675F885E28EDCE3031B5379522E76534605F
B2DC8090F266939384698D59DC2AB6543B6D253562EC756D2B06CC75C9A48A1F
FB5499CC37E4EDCDA4160FB7569F54EDD1A50783AA4DBF0A3E74A8DAF0873163
4F37A831AB51228155870C6B9819E52FB75C519D293289E7400E21C238588C80
FE789F17888DA06D8EA9A28B66A29C1001342120AFC854E2CA7F5113B3A4FF63
3F3947CB74D9963B0F2849882052CD47181C522914A510E070C8B62F82F71EE2
59CBE27F9412B50DC17CE32E39A63F1172A745FEA941FF67EFA98E3A891F6D26
B9D2640A6A8400F76AE5C2F045F20EED3189175D76F64E2B2C4D81B10BDA5226
BB7BA949600E9688A2261CC2C5D6ADB354B0226D874268EEAF1C990182258508
EFA4019CE3656BC3BCFA2C20D0E2A72837E4964B41B2EC7DE569B728136823FB
B5B48154BF79A323AA3F5DB0AFEA3B69CDF60B982AC26129FA4DC5738886E741
E00971AD04553E9F27B15F50FD125C5AD7D5CB2366289E8631DF20496C661A34
CA47CA1A93C0E8FCACF15B3DDB06C4D7E65503881361091F0E4F77DB7141F171
74168F3236BA41889C5669C3216F7ACA6103A5E5F483E279574CA2D0D685C7D7
F56248A987EE709C982BEB04A439D43635254CFF36C827155FC7F5C6703657A5
BF716407E9F63873237D152347D3AA2C575D1C09689361ECB8661B02C76A1E62
E9482A7E4F44E19EDFD8D1E44DB6F7A7B6F12D37227E82EA5098C5CA47D4EB31
7A1507419554D72CDC529AD3D87EC97A947A105B1382B257752C5AEE42439A72
D1C1998C1290727A9E2960C608C0E9A1EE967B95EFBFF12510C41A6EAC90E92F
ED0EFA9A57F3325640951CD6CCA2A71F819BB143A471E9032A17E5C2C268601E
8FB5C17A03FCA66B6493E4FE8F14576C976DCC5E9761F35BC7F439575E031FDF
97BF891DC4A95CAC8D17CEB984E66B8503B88AF6D4721596C77B0D3BD7AE82EA
E4C82760C098FDDBCEB0C201C64F56CF4AAE64E1F2AA294C00718AF11C0C789F
7273C70EE12434BBB59E91422D090457DF80F33606F42819D52B47DCCCE8D129
A4C05778EA6E4897494A7136955B9E08D8BD04B62936EF4DE2542BDEC278F7D2
6288A6F73804418C37592724E72FEF3CDE0103477486553D227070173A27010F
7FA2898AC87A1A4C593B8209797DAAD249FC1EA79916AA6BCEC50148942F90A9
936061A2159F8EE8C9F376DAF578EF35A799A1932A49161F108343C82F60A922
058A342749033F703AC8D176F4E0E2DA05D21F343AA49D83F27F22A25C1756A9
9671C5420CBB3AD06311F595DFC5B33E72662E3939C506ED22230A8D2805B69E
55969AE74CAE642CEDC44297BB2359E955A1BC529C144F7D7EB72154841F931C
08DC30E1B4C5B233D20406138D361E171AA36FDE4162BB9BB096ABC485AB2907
31341BD61AB1841437D46C8398A374BC42C2BF7E3EA4E4FA7FBD5CE49A47880A
592843ECD87F2B9818E3A26E8F227B97F8A595A1D6509E52396DA54972E50896
B4B4A6DCD16B4842C8EC62EE23270D34A2B8F194F066B8FDFF0A4DF059123CFA
3F235DEF5DFF9A0F32C21FCFA6C09AB2A1CDBAD39A16227A7896FF007144F8A9
E01E928B7B82345A3BC2D0880A9217B8534FCF8DF68EE31EFDADBC9B9E1BBA64
B5C7E6ECC2F003DE11A7E3A08BE941EFA7055F981C386462D806F8F5A1C1D177
D4E802EF825019E23C31650A25B61D24CA4FC468D623D7DFD326FF0769EA49BD
38970826B32F3CFED14EDB4E0F0BE16B9DBCAEFA9B74DE8A6967350C5CF3E5EB
5A891B7DBFF596BE8057B4C7767929D19A9C792C5DD80E9883938BB2F2BBFCCD
17EFD647BAD7095BFE6125C0DA390DCAC9C79BE3BA370215A15953B841058296
B4C7568DA923049847881947ECEBAE94FA366C4D482154A4F0C62B1BB6C11FCC
B9708565DDE5047FF8489BDE53DEB78EE13B19B08630E5B4945F61D09DCBD7E3
2C0027AF931877B862B9F111E663E7538F927A87C3FCB97298CA31726F2979EA
C946F8F2859FF309B8474CE66638DFA1253CA07B1CBD85BF493182D44236C93F
939FFC5263B6A387FB982E347B5A6E2F52106B887185FBECFB8364BDBD5EB6C9
DE3F79C14B02F024EB73799261116008DCA3BA99DB5958F7B9E59A5425B8C5FC
AB1BEF7BF4A44055B2C3FC4B2E1B11010D5158775C824FACB0A50096D0165838
EDF3B5A73C09AA475A156096793EF4AA02A812E51B64E0D3B325C15577FB0CE3
9BEDB251F1EC969BEC8A8F9033FF2942402FAAA4B0CE6C24A17D3D805691F685
99ACE69C5425B0C3A0D1700DB6860CF4EEA6BCFD0C33B5ED0FB620D6F62E4196
17CD56DE155C04CE2AA12201EAD60E95485CF79DCE50854267FF93A94C1550DA
B96CEF2AE08263950FE3A45D2CF001309841CAA6444E7445CE86724470B9BBAB
2A74D14D7134EDC9C2975B4ADCD6D9099826F363FA856DB1C473C510CA28AB90
147613F0EBC94C3EA0001042402C538AC36481229891A689CB8855AC2016EF05
B724AA7F5892DA7996380563BF7A3B679EA85FEF772477C100FBEB20F747EC99
431D5C184CBB71284EC3CE8741D2C28ED53AE8C12FFB85421943A78832A4DE2B
B999F2EF64C04AF133C1C758731AA348AB2BD113D4C2F5C4ECE8522172855A60
ADD7C8BCCD30CFEEA36D7A09BA2104C1050BE2A0372089CDE8BAF09FD52F1CEF
942C2327F446089E0A7E275C73EC8D7AC90FDEF79C0F78AE62F1E2097512AEC3
2E4BF7B7687F1681D103D7DFC415017C2E5851A06E301900BAAF4D8B1B920CEF
7D5709BC60E2B71D713B65BEBAF6B3769B667D2EE5A3923CFC69FBCDEA39CB00
DF220C779718E12179D360234E5B8B2CDF5B0D0FB1E383122EE9CCD34481A046
D60B5837D5082C3A6CA52CA18D0FF8D2AC2EF0B794E992600B2DFA8B5421D6FB
582396FD0F4F644413C2ED9D0848242FAE8AAEAC174E13329A14A2BC7BEE0C2D
6870958365CF2688AD5470018A3E768A59B8D7D1ED800D9835E6CBA7F3E2DB20
C2D8530D1CBBEF2F4F529AE4D6E393827B269768307A4F6635EC02A59A50F312
224950615DA20317F5C81DBAEEC3520665582AF0A8F629D31DE81207FEDF6454
94CA6EB8AD71340132658FF211468AC91D1CE2EBD3FE4C17F73A25B991A8B720
31661B2EB99A8D3E0C669A7081293A0C2FF33F69FCD81EF228FDF4FE3BAEC571
740EE854EC05CE14B4F63D977F95E344BC035C210DDD1889AAB8FADD3C015915
618AEC56D5B0B76B159EF695080C2C3A5459F52DF5237EE2205F83D987A95CFD
480503000FE8B587F1BC09B202034948688D627B68D2C86D3AD2DA85883698A7
4087C041F4CB906FACB9310742DC47A084620AFE85289172711778FD984B1FCE
4ABFBFA159B07ED5C93D976CCAD20691B072DA28B18E1154D1959FE6E01E63EE
885ACB4085A38D7B0B2C3754F84888CA17948C9FB31CF86E555B4815AA6C8326
76E172FBD3D7586D95E7DFE7FC0B97E29197713920E361350E5375EA295E3547
8252674A6F33CDD356147F201999F387474BE9A6E9B6F382C79A43B99209ADA5
BFBF74A6A0F1ECF3AFD684646C13395683F26418BBEABDA877B61551AC2513F4
18199D867936298E0DDC68CF3E2D9833F6C8093294282F81CDC0EFF8782071A7
8D4463B995CF6379645825941C8B7E1B14030058D931C4E8D4ADF7A319E9EA46
19A84AB8908E20FBAECAF08AF4B99F211766E7236D735325041F802CEEF28A85
8FFE05FBB76952EF296F939F20BD8C53CC3A1611476BF5120B31C54B7BDA730E
F0BE89CEC8F613FCDA39A4E57DD0309F10896881146A46FE9180591F1399BEE5
2D2345686C4C38E3197D40FC465955690D94B0C8DE37ABDBF7E8DDAFFFC3D000
3ED297FEC9B1EC9BE8C9C04FEB47FA5FD640739E1F09D5C0D16865FC2E3E2F57
2F339F48F22FBDB31B32E27C8605DD7BCD5E15CB2104827B60B86EDFE9A595ED
91541B4570A71AE6B11AB2D7B1099140CE83BD3212C156A0C138DA77B90BCDED
A619912D6E53B350637A1C6B75840B17EA1E9B9AFC48061FF5440E6474701B7C
F41EDA7BB3BF39F60A73211447F2F4AD6CB5ACB2C7C5DBEF5E30FD8339169B65
F6E5571E7997ABF7A447BDF55731E6B46687A19372EBFAA7BA8938D226A76B01
1D9FDD66C24C5345CF379BC28711ABCCCB06EB5A36E90C1F95286B0C5DB896BC
D65D0C55D2E264F74091CDF78246C28EE58208E5FE7A6FFB9BD8BF8D23D9CF65
C4D61CCEAF43758D9EDBFB247F9A4A5F752E9A7CE92289F1D8DB442575753A68
DD2309C78DD4A7B6D83F99EAD74396128B0C14658CE594452F2792469D4BC8FF
30DF62EC6EF7FF5542CE8F9AD5989BB24F9FB191508C75C058F8FB65399CBCD9
C9E61EB9B44B7EE36B8356A8740617776F18D167F6AD72DBCD5369D62E21FB22
9C2226465DBD27291A7AAD14E9477618596B424977CF88172D2583B788343695
6E4FC7F8A9A9EA0926637BAAE83A18E0D038943303FBFD21873D081A545C4276
1CFA952829962F20B9EE15BA516DC373341BE572CE9560025790B296F1916C4E
FAAC63A3E500942526F12590D8A239B8AC70E319262AF6A41B3FC219EE29BCD2
9A724AE4024D5B5A6A25612F7378739C8252B62E5192DDCD272649BD4EB7B771
85936FC36E28AE5E6887463F834EDD2608EA2C03E0164D07F2F4BB8F880B519F
7B53237A6BF0906A6DFF38E77DCACD3AC0751F2AE7219BFE341207F12B039689
66A34F5891EA305B0F66D4F9D8446E8BD3500489A6132C0F36D15D4289E157BD
CA47D36E0DA51E215709FF69322D42C893A30D51F62CD1B7B1450CF9149C462D
21871C2B71EABAC5F8ABFEF6D7331971E5B510BACA9234750B5DCEAE9B929BCE
507A08E6EE8D270015A2C4DC01CB803F2D05C45151474513F4AA8D5FECEAC8EE
88C8830B526ED9264D4F53C93B081DEE898D9D027742300E8669F40E28F9C32E
5614834CA55DC54B2B25B0996C2C590BBDDE3789C01AB80E54225C2920E3BCEE
9D09CA5C60F22B07F24A26DD83F3CDF0343DAD9AE4036069B8BC4F5A8CE06301
E09E15E615E5ACBA4C014A2D47DAF56605F718B787A38CD24CB2DFFE253C6D53
2D772D95F57D9DE63CF6F851C5E21FB36A292E8C9CD7F72DC87B7D52323EBA9C
5561B67744EE8888C044D049E9EDA646051AF86E03D22C944CF66A32E33799C9
D59B4B3B349146BEBD89F2113DC2DD208663A47535621EB87A3ACA107CD75951
62691EF7A85BFCB52ACBE6E8710E44EA188EAFBF5EA958EF011BE0E24C44D224
F359BB33327123B24688B757F4AD4411072FF5919914D83CC9107AD8C633ECBC
85C5558D548316BF25D6CAECFDCD3AEBFA0B25C5B9E2A61FA12A5C83C65E52D9
2A80AC14C297746AD019DFB4D758FD83A3B8E481D52F23789565B6D4AE9A5651
A140D24002BA43D9321A394FEAA8573FF718CEF0E2EA461EF974D242BF0ADACC
4543FA245870BEF74C9E4F13E53738592F3693928402E9A65B73A60B53D4B46D
C4CE9B9FF1A7480F80EC4A178BC10581599002E066EDFD837C54B7985532A77E
7ABE63DED235FAE9DC24349F29614784C3339DBF4C4D4D95225F2B43F82E3B5C
DF9007D9B8833335C407FAC26C11FC5C7941935285DFDCA777CE731DE6B46EE9
D1C3D61DB41BF01C296EF2D2D1E090052B8F9E29B4FCE68B369DD9A66C3B082C
E208D823C0D02DCD209EC01F28EC7B1CB0F1F85E5BA039D6BB9BDD1A78E47684
A3C53CA307ABD6199BAE7678E69728C89FB9F1E995FBD15C97D2CF680F1F685C
5E989B17A3A72248A138A3CA8622749CD74813E8F89278670404E541771CDCA5
BCA8F492C4ED21BA303EE2696939E42738595A9D0508543A040CB489A8D4CF87
A18C7DF0449F81590719B9A9284E841009D3C81A0DA1AC2A7A6133F46882944B
7D444B9CF969977681A88E3DC6E2ACC996C889BB23ACC950355F6B935D49902A
326D7D0638810834D55746262B47195560253D16818C5FAE42362BF3559056E3
1AF7320D8223226EED52626EC0609C1D4BC8F03084DBC222062695EBC2322303
F2F23FAF59CA484AAE98AF60C2AEF608A1119AA13FB6FA40C379512C21579BA3
6AC6ECDC5F4BF936EC6E3053A312FDE7C2C673C48B92BAC90417337835E3C30A
E76637C38AF1F95780C59378BAE88F6E3EAF3E903BAB38790E872C8FF1D538B0
B8EB1F74EF96BF93802DB51EC3DF2714117DD5ACFE8D730216129FDA997193E7
79293A1C911AA94D144BDAA3C4E6BE9637FC8BD3E94D6257BE1B7BFB11E2D457
52F93232509E529407836CC3924FBFBBD4E181FBC7A85E43C6E5A4F99F0133D4
148F48ABF20439F99CF15C6C06C21B626085A290BDCF236F813A15583AABB64C
DDE72532C2593550EB0DF54DF41CB97FA4ACCE1DBDF6A96E4DE38B96BF1008A1
7ED68AEFBBC8914D0B48202B0221AEFC90350EFC42DA44F23139CA45625EC8E3
7172D5B3E75A08A98A05DA37D8F25E0848811F0DF0DE168C2E6FA4B3ABD8B871
CC67D771BA8F05C3924C95A61DEA2822AC4D8AFF79F1746B14ACDB6FC83D45B9
D555017BCE9413D853847B32CD7D5C5097943F10715FAE51683AE6FB3708C00A
4BDE3339EE44F33A75C620A66DE2F6C6B06C6B2B9012F5C2D81ABA79B85916C5
CD51F1377E88115812329ABCADAF9CEB29E09A792E33194C428C73A6CFB6830C
394E62423A0D22D51EF24DCBE949D2F824112E7D266EF13D18FE4670DBC1A8E3
BB231F9B2D42476A9F6A3A2FE7FA1826E5DAC5C0D5A7CB777899F75DD0E08216
2D13926D3FBE136A04BC4FCA63B1271C7B181E75686CB14EDE6AAFB6ABA0FD76
5CECB9FD7CD85FBC77339026B17E42519948A32B270654E4C6B4A4F614773EC4
E0A9B6D96CA73DB8BCD3E76A862C33A0FE4BA3C647BFE7466F6B59CC5631C2A4
D2D9DF6A1C45DD0AE3299C87A33EB98EE5291006D04DAFBAAC1CC0B2135AA846
26BFE3FE70AC092A285AF9574D6391C93B9713965E2392693F2A595B994DFDDE
5C38B305841459D20BCC18C1C11B9363F910A36032D13BE99BE23D9030CE41D3
9C20CE46CEFC42AF9525279536814044F4AE7DAABC43A230FDAC3CE70CD05385
10DE7110A48839DE5DCF1EBD37A882B2FBAED5A8EC7DAB74F3CE3F20F05C37F2
EB54F2D393F16FC37B6FC3DDD73B92534D457C93E40ADB929E0107ABFBCC751A
7D639E32C569B568F112736EC85AE936965CEB90A8F016953104BF2422B1B8B7
C195E8AFFE85DEBA5461241002CC42F60DAA610BB3944222C01F0BAF8F623BA5
484CC6C201DF87F0F105C79882D6161597843941B03FC0FD52500E8D21D81154
899B9DF267A46266510F12D26D2489C6239BA362E5A3B9F67D361BF47CEE8E66
AB1ACE2D780F5624CF53DE046A36EFB35B52F0517B3720F5DC38E426811BE86A
560B49BA721CD63D7855E7703D2FA6CB6868AB239B5560E23D6BB679838CD6D3
22C11761CFF4E846C3B11474D833C7B92FF8AD8770701E79FAF65E09E5BCE22C
7830D816DB38805939C84C7C22CDB21453FE5AAC704881B576BF1A39A447EC32
563086F6AB251AD87A685592BD0B2E5FCF882FD10A220E607768ECA8E317C537
91614796DDB14778F9CB2F2D79B1F0F159D52FD8455FE659824D8B8C4DCA8A0B
EC187F42F448491C1FA278B4355C190BFAB12DE3FFEF8724343ECC36EB775E72
A947F0DD04D1BAEF96E0364C3D3B2561A4D010A3956490E27000BE476B00422B
CE47F04A7C361F6806B8E6BC70A73D47EAE72AF80CFE5EF28D81443F01EE8FF3
478BC197C0834CB90D5799EB7905C33DF0C7F451EFC22630DBB6EC341E042210
EF08D60FFBFF072EBA873F819AA31E649772DD46EF815CF94449B6359DC26A98
39BB47821E930C653EBE80EFCFE6094F1C505E451409F0581F71734F0B5CDB88
C047EFC8694419A7D0C5BD380A638507D0F994E502C6E144DE4B3C66200D4471
4A6741F35A89EDC240DFADF76A0AA6A8661CE6FC9FCBAE6C1BB500C89CE14E17
F87D01C4652E8769BD5DE8DF456FF5333C27FBE7FF54D1784AB5141D9C6C8C65
7CD8986E9340C11AC53D57209C70140BD62592C74AA67F44F4B8F348AFC3E5E5
7D61390DBCEF4BF3D7E3F56AD42B3E301ABF93A15ACA3A06B86069E32BD09E06
C4B5D8397818D86054936C7BF063C4627A88E1649DD421EB468F141167302672
C5B7C5DAA4DCB418F2C930241C04D3369505137491801EEE652357476D00B8E5
08882AD167CB715D0222741C2458EE4A8C8AA0175E8C10A3A63EFDBEE89C913E
EEEE85E95D3BEA369D570D1073A853F3D2698DE40DBFB9338561B487CD903330
3A9FB4352C995DE931AE5CAAFA8E90B1880B025A34273B8375FB5D2F04BF4BF1
3F70A7D787B8FD41367123CF3B3FFB1348B25B2B67F93843B179E0F49CCEE01E
1583E0656CFC60806D9AA46E89996BF4EB63FE0C62D96D0C76B937D729B94820
DEE11159346CBFEE91699ECB7795D77D8C4D38C423783D565B997B42164EBAD4
50EA167B729E6B51F3232847CB0B75F40F506FC2F22EE164970EDAFF69F09AC3
E7D9B4CC7B42CAB7FEB13D5C1CE0F1190BDDF372EA4957D9F6C92EBFC774E8C8
94592F37D21575E6E2253E807EEEE332F009AF8CAC686052A8AF6D117248C641
C078742BDA92A6DE69BC544FC2C1ECBC40550DBD47580126D5ABECD43D75A4A4
6AE101548A6408851F72F59AACE5E6A0DAD07A448C601D99568F3B8EF8542390
44FAFFBB2C44F7A78365D8EA638477D3AC1B714E23B7565C14DE2D414B7B73B8
52FA48BACF8D8D3F340AC297D52362C1A402C81FA07E23C1DA84FCAF472CB923
0C8B1AB9C9DE1FD969AC901E7B3A3E81A24E338971D7BCB5F3FBF8A77FDE7B3B
61A1D4BE732B7E9C3F319D464DDF7A54D3F72CB50E0706CDC0F1A07A3DA92AD0
6D2943D395213C24D8B46D95B2C813F10BB52F2D38DAD35C64288A0F0B5C2A0C
EB60AFBC485D235A7FD3A9DCB7D0C37156A3EF1B1697D69B038D3104645D7BC4
7E26E39827EE074BDCF28BEDEDA81A4D3F1A81FB3B6277AE21C8F8B5688AD64F
CFEEB88E72197F5B082D1EF2E93B088FCF94F97AAAD4C610C67ABC41FBEE5BE7
9409425A2902DD4698FE45E892F39B9E13DA3536A1FEFF235979EF982FF10004
5C55CD022011F03BBD36FEAE849F596D0C266748F33DAE4A007D82C75B811477
B31858C0D13EC05322B37BBFE8FDE429FF5B9A3B8AA770FDA6FE7132D0CA6744
BE954D8930F7551BAE70CB24B0F8B9D811F2E6E968DA3AE06F801E6C37120483
03FD593197B51EF44732DD035649A646F484B410B44631ADD16CDDB671CC59BE
D1F3602877B7321941E5829D434B7A8313714F14BBD37A3B789DBBA44556E34A
994E06BF33FFFBDFC39820C8BC4D1AEE5CC487307BDE0342A7A7F2B297111203
F6AE6D0E2DB7A9939B2958080FB73FB7AE0E97D5A29248447B0AAFBA1C71C134
2E7ADE75AC83C82F0144F29E4DF93D4939123D85878225211685EAB6AC9AFCA5
7CDFB55CFC67C3AC25C7750A73726528EBCC4EED9AF326F5E04C7363189F1175
88703C8C503CAC8EFB9584A8B216B510EC1289B1B20348FB2E7FB69729AF91D8
FA0E198FA27CEC5385147BCCDCDEC020BD875A43FFE3FC430312BD685ACDAB71
3389D763D356A1AF21AF6D629F83F0D013AD79B1D70FAC10A4EB783FD6D62A00
883CBF18608A57861D1EF8A7406E6E68AFE132115CE5DB87887EAB494C475771
38912B0CB9FD0788FA6949A347135E22727946022A28FDBADDDBD07289B95D04
6C72FF867ADEC79E1293F5A441BD59778FED5F97BAE9D2AE662D430EC3FDD719
797B2A3AAC7589401B349CD49A26E3EAE87D636575728B5C7B4B75819B3886D3
D32879A5F5487DD2DDFD6598B187E6F353D1B5D722EC540CAA185E9A646D7D89
D58A89102F3F463C79CE998CC8700709FC2F7807DA8DAD17C0437906F217A4CA
04D0FC9504163E55B17BF3510521588C1AF7FE94A92700C60A452852F0319092
E4C5BE696A4660F9DAB880E8B7B48ECA10C3077564BCCC79E42A47FAA10118E0
6F4EAB8B8DB9C3A2B9C69A0ED01AC4044FCB372799887DC397292B269D9C268B
24248D3A258417EE9C63431690B3CDB93259908598D72ADC1F933F3537695927
F4F964B53871D8685BFA6E265309F7C597E7F62A6F6E52B3C76234431A1D8007
C4EE0DBA1372FC86706DB0AB89E818B7F42848B859F0FDA0E96A66E71A2B5B27
C1EA888DB71FA61A68AAAA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans12-Regular
%!PS-AdobeFont-1.0: LMSans12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans12-Regular known{/LMSans12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans12-Regular)readonly def
/FamilyName(LMSans12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMSans12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-411 -308 1407 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123833081E024C973A102D8F460BD9
75ADEB5A09536D6F3C9E0404C494A7531556EFD108E97E770410E56FEFC620A9
58A40E61E443EA13AB10BA1FFC9A8C5A0AE4B3A70B9DDA35CA4FAC9678E39054
2086BDBD692C89708EFFFA5F235831F7A839BBC56C877DB8F713A2D5393994A8
357B4DD54096FEC1724D57F143398862CA36F1C982DF09539CB8C9F0E7CBE7D2
13233BF5F8C425FABD2185591D3722ABE7F23FDC6700C38136752536882D7EF2
65AF1EBCE3D1D0DA11C2DBD4DE61169AD2010446EE632BF9DF6D929733846462
D10A17CDA1BF70BC1B45EF8BDF72CC5BF96901EE0E7FACDC309AD744B803E28D
170937F444782DBF1A9F10FFCA1E96428C339564080B955D616BB9A3E6C6A801
ADF0609EAF23845FC74ED07C0FD09827EA10884C9B6B900F3FC4C2DAA80823C3
52199CAB38314687E16B2402A698EF5C895BF425ED9B2499D4202D0A8D1216A4
E1187557EB50C8249AF9CC836B1B1D9B4A28CCE970EDAEB57538E662AF941CE0
53D88DB0B078DB739F022E2F92A79F2EB23F089A0E3199C3C2FAE7B93A66DB5C
F10E6763DAC5C342EFFB9104ECD0125C6E7D32D5CE68D11C2014A33EADEA70A8
03A83F22CAB36A7EE9AFD9569661D2B65FB216AB8D1FC7A52F1A471D48B5AA41
16746756E0A8DDE70884DB4D1DC78EFCC745E00B803C7496C6FFC65CAE5FF981
CF760C9E8224BB781DB61934E01B2E9197BB6702E6B1A57C454FA5DE2100267F
912D837CCD9A027E9A7B3BEEEBCC3AF72685CA319212891B6D217650738552E1
048F13CD46B6620DC526A8164D1FE7D9D20EBA6F65CF59CA7A611B1DACB00CFE
42BD5BAAF8E4C6076820DB48DEBAE7E5D36969EDD94FF0050D5F880823A40F9B
6601CF5E16B62AC684179510113589997DE43DAAF37144199ADF6D36E3DD98D5
D4B7A8437E6E7F9B01D636671DF223DB8FE2188D1505B5E82FDAF2671D468141
8E63895C1C7A4273E038B5B3B8EF260A0A35D2FE2A391274C38EAE50A6507512
690D2DD4D64276AC5E544B36BE0B51BCB83CE53A6F20F4DC5E2F347A7E54C91D
69204A83F1D46A59DF25AD24664C9D5FEAC7AF6488D173C2BD855385676D8C39
2A82F8DC836C8BB653E4C9A19210AEA6313E62E70EC9BEF8C4560812D60B1472
F6404B1AA6031C346E175A9CFFF3EF2873CFBFD2C69574A5D7DEF679902FF59E
3B86054DF5B3FDF83856591650C9E72BF8E2143D43A1481140B10252DC8E0EB4
8E2446E4AF11C73D52910F14BEF067F255C44923EA6464AC86DBC3773EB7AE9C
408E9CE5EC893F4705C65569101693F0D22636A00F432618538766332BE25A0D
74993713AB2FFA10EDEF127303002CF111DF1BCA43019F62AC6FBAD2A4F2C83E
0B909AD58E95EE807B83CF7E1E095CB10D5CD3263B03C83FC4B7BE57C6625B1A
B3426B888F236D57DB2F5A50B37FD8E60F42B30857EC5CD2FB4EFA5A8E48AB87
BA6E9E942DF5E90DCD355962158491A8FD8AD2C7F470E48D25BBB0F614F72326
C3F650CFD4308DE0425FD9EB666115759AB1B2CAFF3EEE454AB8DF6BA02B83A2
075274CC778873F53AD1ABD686D1351BD5A9CB20517C21CCBAD3E56801DB21DF
90B45A73F62F5840BCABA506F4CB1434403DBEEA9845063F46A9EF1C97C915C9
1E637A223A0F6B13086A33988A6DFAF899A00F8B8EC1202C05C19AEE115A46C4
9A663A888F8B36C5E2345AA680CC0213F630DBB2199A8DC08CAA7DE0E5B6F374
0DD98E2AD199D39C56BE85889670AB5AC6B943C4B9D41C4A6A03DF00E2D87F00
952D0388BAE28280D93E247F05FB893CBE5D859076B5AAE89697E3FC4A6441F3
3A5597D72C82E4BD9A85E2004635A712A8495C2305C7DA7391F7F20453206FC2
7D3F8F02ACC7A579B470A9E340A6985189FF8B6AF914A6B0EF0CF3683D235A0C
FF2135609BE8E89D1210716035D01958DAC0F5A84B217BD0B75692BCF2B45DD7
11488CE444F9AF47CA876366076CA0FDF190DBC423710365236648FD74B10777
24560AA6AFDB6EC9401084DE82B440CFC45DE1634C04CFAAD333FDF84E0F33A2
EDCF78332E793EC734534B91EEC5DDE1D8BF68483C3D2447E31FC56F48648689
B5A0FA8DAEE8CCC5B3CC8C6F270EFC258A343C72A87D5140274C829F239D989C
9E1A28AC72D636AE969256DC91944150153C99FBFF355CCAE7DDB2FE3DF3B0A5
4FA6F218627A66EC82A85F461F951D83972DECD70AA8987112F05C939A6FB070
2AC274C63378573CA78C550B45EE3720261CAB35E0934CD29EB760C8F0114D19
D4BA0161537A4B2E5569FA0D73DFB2FCC6CA510D1697AC1FF0A19C372A97327B
8974079E36D67129C17A6FCC288B9CB288231E1706112A781CB563378D8C5CB7
F8729D436B65B80B3B634949E55CC2A2BB87E8E9DB44DB791D1C46AFE2BA7EBA
63CD47F5B91A075F5BE42A3BF17038D2ACCA7EC331156E0315F306643F0BFF06
EB0DA016066AFD30FABBDCE740367F31FAD328F6A15B0148E05213561DDCE9AC
B79888AF725FDD44F3B23F8FBACF1E5FFBEDD180E94CA387F4ECE353A14E82FF
7D86251B59C66D81FF8FBC05291063120165B4379B1A4DC9D967DBF0F4AC2679
EC035DDBA628E6C4EEA8E4B391FE883E586BBBF83B38E149825FCFFD89AEC9CA
FDB57DC0C4C3BF0A0255ABDEB555EE5EA7AD4D7782A8387E49B8F6D4940F8B3B
B3E8C7295B779748273C485A5F88DC1F92DC8452D0F3C5AF89D64754D9F00DB8
B4F16252C67205713A9B31042BB5A1A3B74395F8AD7A723EC10160DEE4BD2E4A
16523198B2E05EC8749D3D46AA1882968591775A445645D175505AFB1AC5CE8B
310138933B6CF4B205301FE5A2F54624315981DB9E59213A103E32A41A879A41
C90FFD91A30625AE7C9E1E3501BF9686543ED82DD7C0F29D3522C88917F45064
8A58EAE4242CE5BE6A645C2653FE55D062B786BC3C6651B1BC9E4132E2BF7FE5
6CF6503EAC88E8B4F4DCE6515698117D87585797FBD853408549AFE87D9E1FB6
3B8A0F2BA279C60649618BE2D9B1E10DECA9090F66F08EEFEA3FBEF65ED35C6D
8E31D2914E409D64B390B0BF48547BB2DC104E45B02002887372A7028342D5DA
1ABDC4A1D071EAC263297A33CDD908F8CE2CFC49E0FC2FAEF512224950615DA2
039D4EB3B18C87BC21D807874FD5500C5FD4773525A9E12912D6B2A265DE09B5
EBEF1BF8D4003E95F831AE1D7FA22B15E6DAC8C7C1DE7A41D2F69B4CB22412ED
01BDAC0BE83554A4BEA15BF6581D93BB225684B50FC56691BB3A1D226C2E053E
1B5CE76BDCEBA951B61BA48FC22AEA6EAE2B2167EB61D185E06F8741AE6FBB6D
DA9C8EBDE42F5C0EB5BF594EFBA262EB2C414E43D8ACC9CB195D12F3B2ABC959
7EE5FD1996F8AAE791FF65FB53F78C6F639F55A99D3332B13D2D991742FAB22D
66F51581C9885CA1DFBDB4CA8582DAF2809A41072FD817E7072D80C5465BDE1E
01D0E78EC979866E4CA2F3528521C1815333FBA22309F3094A2950EE0299930B
FB1D34B257F66BDBB19596012837CA40EDBAAA2ACD2B44574480A07B37CD37FB
970F7B11087373B6D43BC6E86AA0D5F88AD77FD873378141C0D5E654274F0A88
4B4E81A5864A528819D054345DF144731DD2332B0F7F5E84C46AFFB88747D798
ABE0A28C3F80352864A3F80BB3DCAB9B2B4A4F206B13B702DC4E76A76885AF0B
09EB7F87742DFFB8367445B690245E81AE0A38693F0318A61A07BFE6B7268BCF
2B4DDAA573EC35918A522431497700E2780071A93BC36DFBE6029F878FC59A65
461578501277042937E911586EA16547F111B035E4950C2E9BAE720075EAD569
E7BEF81B824DA5A6D2B21C7CB49F1A8737E0EC21F7CD596D42A88458B89786C2
F6D960EF60FF37AC5021250FBD02B7D5DCA774B841330A240F0E18641EAC906A
5EF0F9BC2108062134A7F1095636B882F29EBF3868C43355F65197E939AAC716
BA62D67350819D14FE3ED2226B71E37AB4EC84EC4C9C1CC45D8723CA7D2A6B00
CCA24AC55E90EC48E4ACC15BE22CBC4FE38AF37D16325FB9929DEE8C2848745C
4BAF9EF2911A80F453FE60FAC91C0F1C634BC8303F8893192AEE80D5A156E3EF
0EEA375E66905D49892B70588D776F15A036FA09D383749CE7FB7E4F83319252
5F8D0110DE3D487C130D8C59F8E6BC0A3D6A21AA60543F3470B8218D56D90B90
C3F3C665E41CBBD9BE223629132D9D75062A01EC5CB1BE74CE9522C06896B9E6
41673A87B47E3089DEC533A7F9759BF94C667916F166A4AD0D7458B845E067EF
C7F9128A17CD447047E6DBADB7AE9A7B205CBCBF1ED0549BAD624D9A1762B670
A9A506C02981DDD545CED0C7CE429D9BF87A7718A844BBA2C252FD10651BE0F4
BDE45B9E7C914E0074C4F6D3A398A33A4BBBB1AAE7858B7001DB7CB38F2ED456
8BD464C960DBF2CA9A24878608565B1F8768FB56B3F2C98AEFBBC8914D0B4825
15B453B86879DFE1185BF04B4E527C706E114259F9942E38D3DBAB5C51E5FFC0
F527C5B59A59FE5C3360A0CB509C16145FCF7D27CB7F13F38FF4ABD16D2FC226
56FA5BFFB230D7AF6ABF63C7B805C438ADBE8AE3408EBB68EC85E3C03E3D6921
2E49DF05A42ED088BEDCC2539F8C81C6A798B6E803A0A99CABA87DA35B532BCA
16C510BC253CC45C7158D89312F84726F3677654FBFFA4E3A2642A93F64831A6
B4924EB4F3D49A5986FAD9F7D46C06CCC29B6F75C799F437E74F0E185AD518B7
E446C30415C8A350E2504DC6092E53F92783E0AF62957C5F79B80DA2B906210F
E250E64C24A95C9342F0DCC0ADAC14486166030FF41D29EA8262E689C52530CB
43926685FF502BBEDAB6258A37008484F27750EAEAE17A63DC636EE6CEACFF46
61232A95ED2B05C01B32EF1CAD05AB36A40A0F84857BE3FE4DE1CC269861657D
AE11CA5F1565C3CEA89BF993E2F85EEEEB0C32EE8A2F40E30BE8EC1A9A84A3A5
881DF03EA2AB1B276B793ACF6A6703AE01B46A6546905DA9D61349DA0D23A713
96BA0A0F333EF5FB3C608FF37988C7DE6A41FB1020DBBCC762F2BC969640876C
1ED130F192EBD571DBDEF885B59E0183831C0F9D7413E0EBA099CEFFDA4D1AC4
528AF6B5E307A322D3390E6ACE54B7E7A9CF3D32E278603FDD8C754C643CB215
60AD3E1F15030EA41B1EF8DCD78388E7DFB73472E3D73B8EEB506440F3B34C32
9E6921C37292EAA5AA98B091AECE259ED9E5FAEDAA738B59D64A9CF93969584C
743C7D8A12A49AD70A5D13AD9A644A43B24BDFC4833DB43341AA37BFE2058C59
E1203EBA3B15A71A44BEE691D8D8ACA1B60FD474A38C925E0587A1CCE74ACBDD
76048FBB9B8B867BEF191661E65D79A249AA3D1BD36ED71F2662826D9A186566
8783704E8026D233EEEDED6C98F92E3A81C8BE23BEE4B7EFC230F62253BC19F7
D6F37D15B6C6036B78F502A37A0FBEF817DCE1BA41E8B9C64C04B9B9C1300B4C
E6A4306C5FF41162443F7410BCCAB0DD9BF9D336F25E5799BB341C0177F10D97
362FFF37CAB297762FB5C45277393235C450451C550EE586CF3037B06DD77539
7C844678989C902067EC814CCC389B1926B36B9306836131B18D785FF63B4FC1
9AC4852B7283794C228F06268D28EE4DFC8498FFFE101EDBB878D44FC736141F
03DA35D68D91E93E80203A62ADA5F0225348396089023AD8E73A16A49262295E
2C7E90D9FF053632D0327FDD1B8EBE6504EA7C1337060BF404064251150F09C6
E0D346853DA73055FAAB2DADD904DE6BB15E8128158134359B08B66C67CAFF0A
F3E4D393CB67133ED5BDED06C1CB188FA1FDDDACA9B869567B7E0DACCB3E4A02
50B12E20239252CADD4C97377315695C92C8F3C56066D3F9D51BF73E000254A8
671C3523CAB620C1D7C63661C44D9886D92E479DCB4CD49B945B3BA652767339
55CDB0A26FA78088234891C970A04C42CF7216E5DB8CBE124D00B4AF84EF56C7
059F491D1C8BE038ADD1FA4019E1C78B8C7653E34045F23AF2CC8C8B621E9E32
71620735C9C7C11C216280DBC7BAC0AB21DF14947CFA3DFEBEB43427D4B8A3B8
7F18013CF71A53C9B51115B533559B56FB9D2DC3F64D178151190BFAB12DE3FF
EF4EB1C1791129C526E7EE38B34A9CB6EE412F54DE75B3EC897FAEB296D9F156
1CAE3E05BCC93B20D730B43691E149409C10DB07153312FFF2738192BD7F2546
B222880AA3DA9472A22295C9BF8205EF7AA35548174F41D78903B40367915D4E
EBE9B170637DD7BAD6C8CF1D70B9CA4381DA2CCE50261937EDE4B289CBB4AE7B
8AEDDC17BDF457835F33BDEBAC1DBCF6AAC70B239D36D31E5808B877D069EDB2
E2ADF1F8CFE8C5E66618B19A9E2827E94DBD4BE8F8EC4704BD05FA94E9A3BEFF
5427C034CF0128DF47A8B3BE724F188694385762BD50BAEA04E96DC81F6F9F74
2A10CFFDABEB1551CD7C62913054F9FABFDD9A08823E4FE32710DB207BA35635
9E2893B59E81369BBB557FAEF2B8883F578DA55D9296373CC7E6BFB2E25C8E5E
C1E76C9D065EAED9FECAB7C7A67CD65AA53D6253DACDEA33953718948E0369D2
21B46789BFD576826B14E2D55D8A414957F08FEBE9C7890F5AC9308B32343F2A
9CC22EA7D87E512F124916704E6CBF7316889A602D35C37EF36DEC95AF26E9BB
090A44B4431489AD6E8101B910BC71EA0645F89E12CBDF2F0D916FF9E4B2E310
D48403E301699E50BB542741359A16178311FA4DC6B27A1A5982211AAABBA904
7982493AF94D878810964FF5E53F25285B542F3130B6AC84ADD0FB6FC6FEE98E
026BC5B3C51E92B1C66D314A9A4AFB78FEDBCEB0C201C64F56CF4AAE64E1F2AA
294C00718810BEBD511B8CAE488343C923BBD13695840A4B561422923655A083
37C9812303280228A1E6E048CC39F018729ED6474C6A051E35ECA99C22F4BBFA
0E2B0BAC8739A749AE0941C1C8C5CFBEE735D796E365A1B0F60BB4CF280A3EA8
412546A9758D208D0BC66C9EF7240DC22B6DC31E72924602E53DD9BFD2DAC29A
0339A42F6A342FAFA7A4A37AC8E5B4F0465D0868939AC77CCB448D3F583665F5
CF923E344AF2DBB26F0983369BC48AEA1FB37AA157CA175FA8E7A8D4B829F179
558121181543EC7117EABCC124AA93F5437EBEA5A06488A7CB7074776AC36B43
FDF00E453FECCD0AF58C15FBDD5D36338CB0ECF40BA2317662F65715BEE99940
BD3B54587424A5EE94FCB35E3D3674A11134812A55A8E3C9062E52A6DC77BA18
72B603C5C2C3CDA4FECEAFBAC6248D305562EDBFA9548D54E379A51238DF70AA
3A421603ECC1623D32353CD7684A18FC0FBB21DAF9EBF112F30C26B597E78976
E829981826D169B6905ACE2A941B65D5B197DF0A09C675E4537954144D418F55
82332AFAAD3A3B0832C2CCD40CF07EA3A99B44AAFF10B7E5B883E4F758C6A6B0
4A4D2B3CFF2DA0AE73C296EE579D2F20575F4CA3B9DA9E2DC2EFF49CBEDB0FA3
CBC14D8D087E4AB1D89F945EE06A5FC0B48EBD9760E7A4023D6E01921ACD3C48
F937880B6D5DC23F5ED1B58669ACA5771BDD5AB3A19482D69422D24EB4A4AF58
9E703F542EEF57BB334A8B9A1D5BB894A0F043F08C69F7FE69DDE14DB1462E4F
9859384B15882C6B0E2212B64F73DD0E37570A1CCF16863E0997CF9C7D3CF251
6718403285DE1416B017D4551590395D66CB4F4334D8B41C755F61423DD2C022
E5141779DD5793EF2D2F1DA1B52CE7E0987446F1B42166292D0CFAB1AAE6541A
3DB6A579BB24340D570FE840E1141502C1218C55773CA3C6D04D126F538914CA
986D90864BA13504A76E3B85EB914C03004DB52D650029AF22167A5DA9F08FCC
3727D2412E8E1578C968FB3FF4848C380C8B9839873F934C88858F2686155606
4A55FC2CE634031B2D1759C1C252686166CF5C092322025988003939B48CA8DF
17373001D829ECA27324DCC582B1430A73587F1FD58F0E75AE419A2BFC5FD3AC
495ABE520B354D612D4D03C34258DDC4D38013B2ED00951944E8205963AD84F3
05C99A04E9DE6CF33A6957519520CC06361F075BCCC0E4C90A598B0F9E10AAFE
920479654DAEF4707A8E9378D24FC8949895D672D07849F5647C4B7D10A12937
EA59229885DE2FF1F9AAE163B6FEAE07A0CDFC782280B8436B909CB12D82ADEE
F1AA7C0BD3F3154883CFE4EF0460ABD63DB61E3186ECA691524C4F9260BCC53B
76CB0B57EF83D4F56FDBB0B23809AB67589B48C84DE86FCDDD4D184B193736C5
764EBEE6C1315A12FB600B92EEEC2CE2B6C918A7906736E8926B9E060610E429
744B45DF032165ED466E72502FF6207D39A6097C93F217F851A9E251C407E655
C9C0304300FBACC53D00E01279397F08669A63BE88715C699C1A7B370187850F
9073E30FACA80736C0BF828DC7E5A8F8F019374BADD5F8D34B7D484F76524300
580E09E87995357D97767E309ABE6CA45067EFC6923A5FCE039A9B9DF5CE04EB
D38F0DB5BD23B4507496C95A57D76C2C39A36A170BD09ACABB0532B101D2206E
A79309A7F87B1F8052B253C7B5A51D29A3AF781F1551F23E2D70CD53E723712C
D6B885F3D4D1A0DF6DD22A6A57ED89C7614DF95308AE792C3EF61F720CE7F778
8599AAF3FF46CE5AFDA10FE488F16A8421B4FA121305A1AE54DD6930796B1928
640FE284DB558D875B609A4EE86A1212B92B903556C5BE7AFC8310685F8DEE7A
7A5D209265986F92AAF11143DA2B351B2E9CEFC29A1772EDCACBCE337B4DCD11
3B464C2EE3F9E90B484FC8C8D637F6F6C0136E0E1F0FB0A3B68072150375E57F
66F06D0F943CB8B47B6498BAA98F877CCD06CC4E7CAA58228247DBA2B741188B
73332A47C407AD8044B1746FF6148CE49015828E2C2CA02CAE79CE7AD7F858CE
686804C3F119899F5BB3DC8DE39690B59C4C51026E0398156AE3FB3294437151
D12C10153203F076536C0086C730D91093F42EB0554BE826A2F95A986F89BFA5
C97B6B8F4763D21E005D89FAEBBD7D8B06F3FBF744C04AD5F17FCD1E87796B6F
6721ACE5F11E543056F5F7B93A7464D4753A9319354E3E4FA9C56227FB920DEA
3893E0EDAB19EF1603373D80117733976840A4D7ACF13AB851ACF798EB6086D9
9D6AD77CA64AA2EDC679AA19F8EACE5FB811DC8CB1CB94F4EE9A978F9D8C023B
77A4A56C73968C2409AAC3DD643E0EFE1857807BFA0B93A343EA0F954AD7D034
74A6A82DAF5E1ABDF8CE3C652D2A238540A9FF11ADA29B5A795C29AF1758A378
BBED7FC4C05D82EBEC804D15C0FEF51E81E63603AB1E9281C56EEEF8F43667B7
9E809F5F38468C15B44107090BF34BCAFB7BEFD291A0DBA52EDFD3A216173C3E
69F47405B950C245785D28DE4EAD3AF23E8EB270FF2FC011EB0C25AA7F5892DA
7996380563BF7A3B679EA85FEF772477C05FFBFCE63F70B669768CC7AB6E79DA
32FEC9ED8B48DF92EB3E80036CB39365B733D8759590CB8309079CDE319BECF0
CCD7039E630D0A7BB94ED4DD307A0797DFC4C5415813210AEC71AED983171862
44404D4812EB1E27AE12020BE9D22618FE9C8A973A4F6FD332AB98AB0BD4E5EC
7F47AF0F39883F6536C3E621D99D18CE42EE5A34FDDFC3CE3BBACA2D739FBC72
E90BC0E886D4BD5E272DE64ACAE997DA7C363799EB647602502B8190281BA5F0
A86E8C602D962D745036951CBE2F48745501CFAA4364C99554D57C494DD907E1
E6DCAE729D19A6F9ED2ED65CE1CCE8C18CC368C55FD0BFBB72B49DA6F49C7240
F00F511A86B1BAA4DD57ADE950401D73E1E0FFFADEDE5FB469AFAE79A4821E48
802F50EAC63D9917C10E24B9304C21757F5F8723199E67C94A7F81AD08BD684B
FE08C9D31B4830D6A16B7EABC23C5943095BF1E82A90ED9258885DF57B26FEF8
370A38E142AAD5349BC4773E95182C70A0301A0EFAF286E04ABE3DAFC8C628EB
F668BD3AE4E6033E5B4D77035D241AD41FAE4BB693A50E24F925F3A8DF63BB9F
D5A5ED804CF9A763367BEC85D9D26CDF0AEAD446531D242C1D066E165BF330F4
D3A0A807DA8C72ECC0AF017892630923CD601E96E722DB1BE432987A61FC0E11
1D70B5759D7DEA6A5634D8C408A4217BBD280FAA471E2B8B86C23DF95F6CEA46
42F2409E506EDBFE9AA18228F19716AF8B554E270A351733DD7D909095F94F91
6B6B124B97F62FAC2F2E1F29EF28B4A46FAEFFCFBE7A8FC5D561A143A594F232
3043C65EE7E84BE6501F47A663FFC6F673A91F6451F6CA0AF3C9D75F66C83E88
5A167B3EF4E3C4F57847EBC5AF87C86FF819AD0834C9B7DD065FA573AB3EAB60
60F37CA8DF33446E877BCE976680AC3DBD132981E7111A7668EB5E73730A4F8D
DEAE3628926FAA59BD102BAAFEAF854C1B48B036052A3D727C050AE473289159
66BD921C486DFC3FFAA3903870ABF407DA9F76876CE1CFE159231A026D3A3F89
047579FD28BBFEC125B2FA8508290E2C6D80A6AE0478021E111AC732FE5B2752
90E7FA7D4518CEC7399BA752788E65FDD0BC63B2E45394EB34971F085E6275D7
116FB37B31EB763428B19E810F7246F2DD3777FA4061CFF9D9C1A82925C7E682
89C7C6E030FDFA52A4A0DD1FA6C44AC165850765B2E85DD27D19F27B189ACCFA
1C6C760DBEFBF5A18E58BEFEDB71B7F94B263E2C7A3D9D0248A076E7C94D63E4
E74EE0CF4387389F47DEDDA4A180282AC8B591F2B8775D5A139F8B0F4C80FD9E
D2073D21FF50B841774BC20AAF6A2160BCD025878AC44DB91F33D815AC9DC3F4
429791FBCC45C80493B3ABABB911186600AC62FEFFF4F7754E3EE12E23DB94A0
D96E085BCDACC4CCAAC9DE3F669EC47389EF192BF46E8EBC016257E8F4582FD2
D73B6E5A189C18281ED5A52676EFBCAEE4D911C2EFEDA4A3960CF70923F27894
85D6751EDE2C433F2556CC26775D013923857F52887E0396A7FF695FA4F909CA
C5D4382A26258E0408C3F35B17022EBAF43DC8DC09B4427AD37CBF263640EBC8
5C42693EFBA715AE8FB177215EDDF8F1BCBE5DC83BC15ADA995DEDABB15E3C88
96E918DCCA818823AC26E61CF7CA45E59681C07FCD8E02E18FE3DCF62463AD80
181F8034395A19C44199A566F6E1078F7B9F348954D59A13BAECFADDF6AADD34
5014D35EAC9BECE4E62BCDBF60C6047783E14D6D2D1A9C88ACF7B9A1E820720E
C4138F2209376907AF57B31A3C2D903194376644F1935D240DF3231242282E12
816289272A4CEEC9F5F38ED119D484FD8064CB10BE29153763D5AA5F6F19B680
57C28844D71ADBE46DD93C4937494F0E63E14BAE87DDF54875A05542CF4EFAEB
4254FFB61B87018D8F8C07B4FBDBDEEC446E77CA24F82C9C16873C7C700D8A5B
203546F396723B047EC58146C835CE2E3E5DAE0AA5E4AF287350B0376261CAAE
246F32282A9E52EACC54E4EAFB169059AB4B73F71DD0BAA29C316E190EDA5F82
AC13268CA45E353D5F4E3378154FD0C9971F43618D0E667685A662BF38551B50
DF4F12EE6C723521748B01D45A0CE4F8EC989FF10865E58A7BA55D337F12B588
B579BCD8BD13107973003A71F5147CA479EFC1134E6845B11F624FECDA0084F4
C01FBA64E8353A58C9425F2A9417D5587BC725DA6426632EF5C7B56621B471E8
66BA80D997CA87FF8D592AF0FFF40505D15C43108D2FE5D6CE50FA55B668D1AA
574597ED9AFE2BC345E31A42480B4BB27C7CF9E47E749CA865A6D4EBF7A9FDE0
E88B8D52087F5FE1A6FCCD2AAAA431B36F55097E479EE81939BC8D8D7589DAF8
148D380D77F8E7DE4DAE00D18C90D9671CA9FEAAD87981D6DA72961783F252E4
9C5574737445F29AC54033E2AEA70CE57180265F10B9458B6B78BD0873481A2F
4E805099DD20BD5794C717EE522FA72D099740876C1ED130F192EBD571DBDEF8
85B59E018381A172700DD929155D93CDC05BC055D4DA9A5F63FCFA3FA04E17F0
DFA667A8907CC1B8FAD72BB381E9A87AB2E0559908E8F310D564A71A4A426645
3D8122CFB341D1120B6070203BCD340E9653EACD75BB140A455C8C6A8B66D231
36C74DC04252F4BD16DE9C0E713F556814E0D1E27BDFF27E8A21C962EDA7622C
DAAEA90AD2A0668057C207D15C12A5F546B81B794461D25E0DDF88DAEA70FDD1
650848FFC12F265E4064004499462CCFF9DDFEAFAB5C55EE04DFF82BF14931B9
F3D2BB605419BD6D78E210D30567F17E885E06066228CB7A9CC7A11B2B08A241
770BDE66D61FB55DE46E4479E7B9DC7B22495A49A924C62DB641B22E7B1A8B36
3495476D11A280CE151EE4D213EF0280697475E1B9B9B1AE8DB439390598DC72
97EEEF12720826D7EDF72FBE83643C23E0B030F6713A0D26EC4F62A11DF4A385
6B69B97CBD0AD5633645F38705A9B01BC869FDBC4831EB36D1269F0EF8128B32
C7F3555B2CCD2A3970A8BCAA0D1DCCBAA5AFF4F8032A501D346059981EBF2BBD
D152146C7ED6CEB362007A28C7FD516B1A9BE2D0D207C80CFC44675836FFD27D
21F892B9AE92E8480F5B8A2AB1B879128FCDDE7132008080C78C427E7CDF80C5
0C825C3B84499198F7FDF74C99067B16E889FCCE2939A3B6C50ADABEC9082C4B
A840A74F7D74911C926CA943880388B39BB79178E27F92DCB013A748EC7D5E12
F87D3E6EEB008464D81D39988E6D14A40F26EF21334B08F47527C3D37F285153
BF1EC03635E0A8F511C5212BD1B8AD4C61E9683CB5741A968F8B23FA77F42AFD
FCC4CB23306030744F3CBDFCC6BC3388641BCD7335D4E4C5F2D3D72E35B4E3AE
A1DC06E7F54EDE050EE86CA793BAFCF313178E02D3BFFC709F92ACB6CB2BA47A
5F2BDCF09DC85681D27B2BAEE02BD1E38F66FDB635B6D9CEA2A04B73CB2E4EBC
F70184C5E1D9C9E3DF6D0AB7F57DE8797767D30B108DB84589965ECD597F3B3A
F8C45EC52B37A8A51E974792EA3EB750D2FE9809C1AABB52A370E7240F7C45C6
6F9F0AEF834149B1A4F94BF66535C66CFE989F3346257D00FAB638A6635404CC
56D29CA2A30A08A2E9470F03EB72D7BF4F6F42634E4B9D96E5720E9ED02B5BAE
9CFB356A8CD7124C119706E8F6070A92ECB8564958BDE1BF8799AD4FC0BE4380
49DD58719392C09593CACA215831AF98893672C3DEF7A733E839622CCF936159
31BCB6E94DBFDF8A78969FF3C08562DE4012BAEF33DC71FAE8DDBD0239537235
58747BA298F73D9B4ED711C9813FD1026FF2C288059ADF71FDE9964352249AF9
2B70F83F0C021D81C79803A8DB45D0498D18CA3C2A26BA4CCDC753515B1184C0
675012A12389E20C373A057CD514D7ED57882F78857C87E574E30710BA9731D8
F27AE69F6E9F2B23DD184A0643CF7397EC2FD1A3676A2E5FA0826AD515456438
FED1B333FC882FEA17CE5ECA50FE1EA1FE659815AB3FEB37E78106CA0A344173
5AAC9EB49CCA34FD62628A5411221B1CE3D8837C328CB1C0322CCB731C928FC0
E56BDE223615AC1316EA2FAC998F9E08DF9086325D566003B04D0603504C0495
1290F43BA455DEF16823861912967A0B572926675826D7D6D0492A224C56B39D
0E9300E2B78B3C5FA256CEFC9A6439318AA8B6C9075757466C08090BB0C88CDD
7F3C1DD6D30AE0FBBEBEABB161753B0D1286E52CC4A79BE12483332E8F172584
082A6ABBC6F62F17929EFA23F0F169B2EF6410445E2802EFD2FFBC37CA2C6B59
979DB29C30081AC873362B6C0318ECE0FE5945999FF924FC0CC323672341BE3F
2F8A6E35011FF6D197C9BEAF73ED4197A11ADF59C4919F63478DF2A25BE2EAB1
04D70BDAAF2B03B9F9E11056F01E8858F8FD4463F8583F6E7068528F02D3EA5A
2A4155A18995E5700E5F9A3278481C226127C9948826ED2E56C67571D9A777AA
8C00CEEA2D593874859A612352C2F5CBC7FA77BD600682BC4870481D8FA43372
0A62B11053C62E4718D6D3A70D89729DDDFB3C9AE7E533F2DED94F2C7457CD2A
8A30B424C71B314038A2EA1CFA4D65EC7F5BF95B5DC3E0F15232651822EC66F0
9B7874F9D832D585A78FB6D428532F90C1119DD69B3DF37ED819F0AC0E734A9E
46C0D94B3911FFA435B4560DB12A7687ADF821AB8ABEDEF76AD7F14CB416CC95
7E016A4C72A6A3ADC5E3811089AFF3E608D224AAB01DCAE309E0AFC3DE377044
785EC754C8C57735031B7A58D1CC858BC7B4D1B35F3C563E6EEB73BA022089A4
C47ECF01BC05463937E04F48FFC0BEAEDAAEF7F7DF4CB785CA239BC5600B55B7
BF1D27DD3AAA4FCA708CDCE4E888FE4DCC5ECB25F2B951A840F79B0750B938F0
30EB256A565A037C778F5D63EFE4309877849DB5B06C8087C1B6C908D7AF2E7B
B1953FA2BCFDA904F9208FE93B67DED01E650BBD8D9527D2AD0F13646008EF96
A7B11D539A584A375CC8B94E271D3CC26DF19ECA7BB520C245E1534A22D3DA1D
120896DF0639B5E4B29BE06B3080627975B53D51F574EF2850C53BEB302A59BE
30E315F7DA3BB326F1F6EA7D90B9BAA935E78DAFEA52CD3639A32B140311904E
15EBA71268B72AA0C064D2781D90FDA8E3BD344DC02AE472083A07958170FE15
70F638F15A7EBD12F7392F7BCABF5D85B2C9EAB3AFAEF0C0681753D6CCB40966
CC124880BE7A2FFFE59642F9610BDCD137F87752CA18F8147E983175FA450580
110EA293AB6B122954822C27F9880CA42AAC79E825472320B441D4037E21A7F5
B55FBF3C58A2E07D021C172810C3F525C2CD610F1DB2D3873514092161A9C9F5
72701A3C80B299C0B96915C2ADD25EBF77DBC319F814A38BC01866A5C88E7A3B
C28E2E7BF13ACA6B3BB54E58726C1DE836B64BC0185B6DCCAA31E67DFDC33E96
75CCD879D1FC8DBB1EFFA0E0A37F242A86EABF81AA379231DB5D3C3328BA0399
E305130673D6B4E81751CE821E908DEACAA0D183F61B977341CB8FEEF8741BAF
6E40329076BBC201BC8C718582B5210A1651EB434A49398159E600067CDDEEC9
40608DB1743FF0C698C2A8FB0A797676FDFB41E6C329B92A718846E38E374DE0
1977C142E0ED10318333382EA000C2160FA3AEA099002BEE8FC602BBD6EDEE6F
D1192616D5F8F8A970305EEA103344ED8858C8FC0E664FA67F058BF1343CB19C
D1B9C06A2B23E1383946EBEB0643739A1C8B380A42D3AB886A9197C0079E12D9
A79FE6FD1DEB9095DCEFDB354F6605B75BDCBBF35A0CD2A66E9B610EB4C8798F
70E661D2CC3C4CF505908345350474C497BC9C3ABC426E10D15D7F42B865213B
82CE78670BDFAED619AAD497147EA6F9898C5B8A6E18CCE9C6FD655271517375
5AA20939F3BA8AA5ABC54774ACF8366FE6622ECEB154CE3857FB4314F2EFAC60
FAFB6B3622C0DEE0E44D408757AADF31D1EC9DE0AEB4A09FBD09D74C98FDA858
620289F48F54678B1B78C6255492B37E6167E59CF4494EB9C5BD5C5ABA7E8FEA
49CD29B84B6E46EF98A74087C041F4CB906EF250631E86379F959CBD9EC46414
A822A022439DD25111618530BACF47165362C1E0F6B93CCEBD0545DD32D89E7E
26D9C375C5FA13ECA16AD1716CC234C4F66BFC1EB5E55DEE1AF58852B50FD388
4410A7B77F47D006E76DEDAB32A13A3DC4FAE0E34E485C31FB2952DAD2A6149D
B09F1ADC65ADE10FAB296A939884449842FE797BA2E3A9ABACB6D9EBC22A5572
7BF4A74C60DEAAD2B20681528C55FF3AB16A802632521D45C2E2444374EA88ED
78361C1E0F6A86662F1D32C26DAB395B662126CF97B8EB2C5C7AD9ABD78C3B0B
E5AE092F1B220F7BDD11C600E83697BB866ED9AA11865B538D351174CA94DA51
B8108E5AF327C75F285A7C4D903A367CDCB74C56BF8356F948164AA478FF00A4
0E236B7BCA3A83192D97B128519E4CCA39BFBCCCC899EBA81175526D2DD96D71
2E62BFCEC18666235B021CB46AB683E3A36EB6DBCA51BF533F4F66E9766DBE89
617CC9B46FBF2F7279FD6A1A1A68C4191BB968DC0841C2E785C0851356A4FE39
BFC1390EBAD6D893DE1C565CA5149EB72643B4AE94DF0B25AB6C9FC244233D82
EB380DE2F1E100FE7121DC203A89648C906439A86A2160BCC3DC2E76D6E45800
21BA1F0C4911A6C88BBD59ED45A23899124AAF1FBDA95E1EB39C3F3DE154CD65
B62E51CC2C22669FFF744F7B3B3452AC5B3CEC243DA0A9B677C365B6E95CD771
D0452943086457A0A9E830C0658485CA66AF923246B30E960A439F315C4093F4
AA8854274B18EE8C5CCD14388C7164E96AF3E71BE046AC145BE61D1F72BB5D66
C4DA164EC2F64DD3E2383554FE5F16DBAF19B633E596575F5B893924EFA75FC5
5E740C78D4A1C58DFE27F2194D4BE46D007753445B322C7D3AF68FCF93A5440C
32CCD4447BE0C2D6DE59B1BD629F47992475754878D389581602A206FD79BAEA
B05CCF5B81D99CD34D1429DFEB1881D931472249C8FDCE5D6C0C14E44495D455
3551834E24D19A522317BE9FCF6AA5696AC19BFD864F00394849AD59FA832041
95FFFC19670600428C90C59B9853E25856EA80E017465377A0FBD5B878504A44
F089AD17CF090CF5F36B3DA0FF93246A390879AA6AA248BE0C6C2EA9EBE4DD2E
4ACA345BB401A7B127F68F2914E2EC06E8728B9458990C7913426DEC6B5C0571
30D3F2F5DB6B0EA766F146FB68007DDC9950CA2C63425D1BCC302CA25DA0713E
92EDE9E4D41577EF58AC70B402A4427CD8220B13F44F655AD6FC40955A3EE68C
16EF312027D107417B5473B3DE1F4A38916E55055891BA976FCE898F18AA2169
DFB86A6693CC2CB6FD995D95B1FED23A9547DCB00AEC09B7B7D697A6CC355BE2
9D6BD5706D9F0A6CCCAA8321871A09D6ECAED6F3418A66D35D6940A3FB517059
D1EECE54FBC7B5A887C3478EAEE8720CC128DCAEA242B8B7D33B55839F745424
D22BA34F1BA11FC742A486423C25F8D3E3D79B6AC71A3913971C253B5A055B93
F596E7C3F3F02E3B8751E078517F614A52C9CF58B499F22E7C6EC024BBCBDDA2
519088F3823665B10806DB02FBA0707B0A9B94E0BEF9D47D21527A3B1D808785
CA310F3560EF18E5C7FE2EFE91C42900EBFFFFBB7464003BCB709A7E118BA9C5
900EE7B1E8CE89A55C0BEFB530C7C62EF7F7EF76DFE5D49BF413AA1A5444502C
CF78BFF5ED16E6503D4DC2FCA7AE4C781A2AF6751AC2366302A1989756D54BD4
331E99B92136EE97A6F8588D8F6CC97A0A35A8F06A7361E0635EF78EE2521C2A
29418764E4E0B90D2F66BF8B28CC148252E90F6E7536E42E562D80320AD93F1E
F73F820B00E188F569F66DEA6D6D320CC018D4B2CD12D6D3D8431684EAB1BBF9
3810BFFB43D3B77697033D78B8D5F89E222C4AEA94089E8E969EBD7A6CB1890D
121192E89219AFF8691D87E462E872EB6794D6EAD1708AEE4F5A83290893C0B3
59EA0DFDAF09E423761E70ACF40ABD8187C303AE9B7A5F45D61E02D0AB82AFBE
793D708ABB6E9B95DD704764914593BB144BBB0F0AE0879CE48632D8EF6284AE
128906F7C735DB24AB4F9677F888E53B9FE63FED8D2BEC3A2B111D6B34523FF1
8F738D2A61D153E714C0809474D611522E42438EACB09809CF4419424E0D5A5A
D53C8DD8710ACDB3786A919FB356CC2695CB277E926CDB78220F28E45A84B0FF
8EF5884DECCC661A610D8322527963417588F04EFFC68E0B69FF3FFAAD0C81FD
472282BD5F0CB8BF4917C65752C45EE8EE6DC1FA330AB6BC5E2CECD68B9981B2
BEF1AED8D00A3AE2E3DA3D932896D5D3D5EC77EE31A5F93D7942A15FD76BE208
AA8F06DCC288F0FE1CA765C93BBB6B7085F338CB552D176F8E9257CB36EC8753
39EB25DADAA0E1A671EC75837FBC872405B7183D2385AA4D74E4741583059D79
F780C16328AEFE032A82125BFC780B67E76CC1454776906165FAFBE78109CAB3
5AC2730A761CAAED96AFDADE148689691C1EA942403339023DBC4A50793CC443
112A3D27BCF96ED9D3947EC669D9E7CAFBDFCAE03ABFD55EA0A668EFC6C2F83A
E423590FCFCD5F871F03C22DA4F9A45EE22639CF5F41585C9E0A80B2A1A1F7BF
13E2B80326561EB45ABB32D64FFBE3475AC402B3DEC385C5933EF08B627F1900
6CC52D9E451DC21450FD3DBB18715AF6B9FEFC1662493942C21F78C831ADAF4E
40611505FAEC259B6D38260D23CBFBC986268FE1EDA208C1B92F418618337AFE
DC530E5F627D5E2622798C4E3C8C6338FD425E2EA16515D394470EBDB58C0C86
03C1ADA3A7DD72A46E64952A0F1382E9F2913A745245CB6AA618D8F66D60B3D9
CD73B2B2A80AB7B924F1BEAB9F601CDA2C40EF9130D864A6EF97AA88A1AF3326
775379D3B8E694DCB2CBBD941A047119B40830A39909494E86AEE21694223DF2
52323B439CB1F1A3363D265FEC5734C81CBF1AF913F88704EBDAD9B0B755398D
8FDD8C1BE6EA9CBB6D95FD83ED782DDE733D6153ABE0DFFE80FF09597BDEA4E7
1E74898F6C7D8D18BD2AD151059F1A220E400E7F38B995AE417ED75C7D6C2315
8B0D6A1B0568B966B0989355759D3B70335841A21DF88E843E29989C846C3737
5F136E296F1C6F96039EADDAB1C48AC04DB2A0D87AA2DC263933EA5E43A72702
5E5B23E9EDFD422C969BFBB8C47A09776CB5F569BE4F25923AEFDB5E6050B862
0A70BB1321CA03560269484241A8D61FAFCCB13A3715BAAEE70345F2F5F039B2
B4830DA2FFDD7B721978DD641CDF0C045917C8D10B215C01EA61946012C986D1
7A147289DD4C38A3BCD1309FAD7B43340ABCF99AC4B3D233B4A8C7C5D837ECC3
C3C3F9B01526D9D71A74984522CAFBAF6CD275B0F40B422CCAEB6E1AA789B6A3
AD509757677D93ADE140CC8E7721FD043464A75D9E0B6C92A50F401541055833
CE268E374EDCA9ECF658E4B8978DE1907C5B7D407533B6472B67034F7316B592
2CDA33478F8BB69EA1BE414AB9DEE7F51DD5C45AF9CB8A6362CD7F38CC43C354
FB4E9604BB2D09F2A0667A4E0B5D6BC5439622D0710C5605B6E889F497760138
814249051AAADBDEE4C99F4FF668F718A6C6BE1F33A0DB7564F01C4CD135F96C
C59DA7959D61357848E66AA5C67CDE427A1F1E3DA8EEC5B53ADB0447FC6A6F74
FBCA5445D5B4F43726D9BC891653DA61E0E9E51A8BEC4A742712F00B16A6798D
6760D9FEE55349B6DA16D96BEDA842C9B8078D60E5FA106E3980191F94D30DCE
81AD466D6DDE336D4B5F9F8395469839226A85A7BD8AD9994E963269C3DDF1A6
7170CB45F2AC14CFE029DD7C36589B1EB8917C876D7C780E4DDD73C0C6181A9F
E9EF9EDAEA2173C69C564A8BDA78F61B61AC9873B46F8D606142E4B244E66A85
437E20B97683C69DA60D2470D142F7D6039F6115845E21FB2D04A6E73B21EF6F
EE93BAF2083D9DFFC0FBADB40AE130A9F2002BCD8A10C6525F8ED949521E774E
0D15FC36EE0170F185D81252407BD9A9522AB5851F8574AD1CFF3581FBBC1DFC
0476E61DF3802AF740BD9C765861A95092B7CED26EF1639D5557D1EF02842E0B
8EE7C73113FB217E372888F11E03338CA1653959BD6F18A593F7F2F727BAE27D
7A66202D78D5ADD253FE74A224D2F07EB970C525B6BF8E81FB5F6D3B6B92C7CE
AB400829E6F649EABAF8BAFA31DA0FF3BF33B6B59E943262F2E6EFB223B25C16
F0A20E27F57F5A5A7904281829F30C7154220A64C0A6B89BFED476AAAAB54DAF
0BFD6BD22B450926B69A090620505014FF976025EEB6A027BEA7EE7554248140
D0CEB6EFA6CD0545D81BD9AC89078910F3D70211659CDBCE05F0733AF96E38D8
2A8C6771364CC604446A77975AA682A1E37C8778D97F62E51BF95F2A67090FAF
972407EBE347570AD63AF5F1714AE0B564BEBE2FF35ECC4DCCD14C35346631E0
0DA2B802610A0BF6A7DDBD2B1241785EE4E3C12C9815B985B29E107C77DBDBFE
E4FA9528484AFEF77CB1015152FA58FE825BC54EA5B184716D9B3136AC2E7C2B
34D5CFC6EA6B562AAAFE1CE74489C9049F0F4999FC5108D1AC5BC957AF14C2AE
CE5819AB516CEE0E1C7AF3DD198A17C4B22F21B630E2D0D5F8F796E0C285B0BE
95D3207AA7D4A91ED4903EE143F0FF84E3670B8D1D046FFC2E8533A1588FEBE9
3512B86F05473C7E82BB2E21934F06513DC68AA5CA60411CC615B9778A9B58A1
68969D01842EBFEE97E956F2BEC8DA741392C241057A119BDFBDC3A71E0A3BB0
7BED25AE3BB9AE7D89470386BDB6CD26559AF2FB49CD7A4D0500600EF954CCE1
A7ED40F1AA5867DAFC809F0BBFD3ADFA44CC3A1D926B8736786B06895FD9B8ED
39EB3C7C9EAEB3D47348C47D928BC883B8E7606A4389C2282BC39C571BD45057
FD09085730695ADEFF8E283A658764701CEF19E33CEB900688B76623F07A3506
115410F22C646DDA1374D05800CEF19D67CCD897B64DEE665A01A7EE18656AAC
3D73B851D54A2FA55862DD786C53A749EAB7C6F6D76DD96C7795933CB7F3E7C1
A598A385832EFA3675F1386F3FA0700A77387EA8EC418455DABB88A44B23A3F5
6EBCD82E0702C4A95FEE93D8A535B20D5D2BD19712926E230DD02AEAE6461EDD
83AC935AF49F8C3497C382B1FBBDD8DCC67CF1CABC23E8D3B4E3FAF5189A2583
50CDB97056F97CCC4209CAA120DF414CA84B2C2F2097B96B8E4D4D6DE0147D28
AE03E92173758510F33730DE94088B1A6A04E89C6F471409D1A371A398A678A8
0629EC540CE82D0C19F584B301CC69001B03065429501C7799228C013F0DC20F
7E241623BD9D798CAD8713091D65D3F9820DAD703C2AB824EFF47B42803316C0
8B047148E29D0F454541A348F47FF94855F43393C3790A0EF9687924FCEB4B41
A1A63D7A48C19A333921972F4C21A7C69E96FD742883228410531DC5733A8A32
7001CF9D8A22F8B416868E93FEEA20F625E6B687D8E27CA56FCD1F3E6429FEF8
9F5D3416BBDD4513C1F1A45F3C7218A54711DB2946C19594D8C5A24EE4E5D158
EF9751C1E9A6CC520FF3C45BF80AF23AB87B18CD45308E0E3D6C95F002AC2B41
942A962F76E8980516D1720380BF14DE59A9FA9AFE5AF712E89076E2CA6EC7A0
42CF11410DF6F12A272589C6F61D91A73B435511698B46059239C0D0E35614C9
62F1F1A833C0B93AD78A8A6FB59D582FD8B459F84317AB0378556F964CF36B29
80633C2146FAC4193F031B83533EE5EA7A3255C0CDE2E3BB0F8F67BA9E418EB6
80E15091937103CF84D90B5DD38779622788A63F8C5174ABD1C9DE88F4B9C624
3AD53745EE0C862173DA56B9C7F0D2E8702BA6A538DAF6BCD5CDF53E42E66C5D
C5512CC0863E7F1564EFBE34E741FEFDA2296F94A214F3DE1FDE7BD992B55385
8852E23BA2B012D018911B4BDAB9D01956FC4D0BFD32019E874F2C339E742094
2D33CAFEEBF02927BD1B9EA723F2FB111FA9B4BD53151E7BE06A82A19415A122
510BCF1F2D8322679D069740F8DA79C6CABFAD15A3A7CC5114AB201FB501BC27
E4BD3BFE86DCD661390FFF00469B84E321F53B69DC927744D408E289B5E5A864
5F9F2BE278B1D0F72CE3FE6E941718EB6809D34555833A0ED97325DAD95ED315
8C0A7AEC0CC9D3D768CCAA1924831A5CE10D2AA01B74A5EE71C93574B50A458C
1B9AF533A5DA8B4B2457B62A6DA755AC045996EC494157D657BBBAA330C7E165
C7203667BA0FE24D41D9417CC0E8160EED3AD380A0E834CC3D7E62F088E8B2F1
68E5FDB9D0A5B7C5A4AA2733B592A9D442DF9794CFA4107E2CD15C183AFB3490
2FF7AC753ED3E4AAC95A83280E45265274A0B50ADAAD79CE6BDEF995A4AF79B0
6EBE1DB8826B713EC37570723B5D452BD024E2AEED8C988EC673D219BEBD3632
006ED6A30CD33EF2500CBE8817B09C7C5E16F3F1AE5B1E49AFCA782BC17116FB
9DECB6FBEB8691D6CA0663353FAEDCA80321D2EE07C3963782D5D91EC421F45A
914B3EC5DA4EABBFEBE29ADA40C15A967DB531FC801B299AB6D65C549B7CFD9F
23074E8876405E2368592A8D9FF9480AD1B0565EB022A8AF3294E5F73891DF1B
4817270F554883405F61575163F811AECE1FC2B8ABF308A062495296B3489FBF
70088277CE876A93AAF1614843F93CA1D6A3B1E3F815C1DC9A8A44A33A6E064A
C1250B9F17C5ACD421D97CA9CA335C3A86F0FA2833D1E775E4CD3053CD18E028
C0F8972882FE53DC216E954F343F3E4F4CFFCDC0CFFFA2D50A65F9F7CB8D1F29
F69AE2A6916151223C6865DDA33AB3DC20D46F21626B25183708A97942C59E13
6D37E5B7CBBE6873DB883FCB957BD488578A19437ACDBC56D765E21F9A81036A
C86096966738EBCC5AD59E3193E1567FD2BBFD16608768139C9559EAFC4D556A
58CE519B29CBC30AF93A95517DA2A3D576D0AFB4D553D86CFD8CB32A06F53D76
AB0AC5E7731D95B5E8BE6B80644C83BDDF1240E736E05B8CDB2D529C36BD3623
222F8CCA95F6847AE0A95031DB1576046B1784A868
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 29834874 16782118 1000 8000 8000
(G:/Atif/NUCES-FAST/Teaching/Research Methodology Course/Presentation_Beamer/Presentation_Beamer.dvi)
@start /Fa 198[667 57[{ enclmec ReEncodeFont }1 1212.12
/LMSans10-Bold rf /Fb 136[828 2[438 465 3[606 626 4[290
3[539 3[582 12[825 84[{ enclmec ReEncodeFont }9 1212.12
/LMSans10-Oblique rf /Fc 145[606 110[{ enclmmathsy ReEncodeFont }1
1212.12 /LMMathSymbols10-Regular rf /Fd 159[1045 8[922
922 922 922 922 523 1045 1168 1[1230 1[1230 1[1230 1[523
1[922 70[{ enclmmathex ReEncodeFont }14 1106.96
/LMMathExtension10-Regular rf /Fe 133[481 510 510 2[572
400 424 378 1[572 553 1[879 264 2[264 1[553 1[492 572
1[572 532 10[738 1[753 615 12[630 661 10[307 7[553 553
2[307 369 45[{ enclmec ReEncodeFont }27 1106.96 /LMSans10-Regular
rf /Ff 139[255 1[241 2[353 1[560 168 2[168 364 2[314
1[314 1[339 12[482 392 4[498 616 6[404 4[470 9[353 353
353 353 353 353 353 353 353 2[196 2[274 274 40[{ enclmec ReEncodeFont }
28 664.176 /LMSans8-Regular rf /Fg 134[434 2[434 486
340 361 321 1[486 470 486 747 224 2[224 1[470 288 418
486 418 1[452 11[646 1[523 4[664 8[564 680 601 1[627
13[470 470 470 49[{ enclmec ReEncodeFont }28 885.568
/LMSans8-Regular rf /Fh 134[559 559 828 559 626 438 465
414 626 626 606 626 963 290 2[290 626 606 370 539 626
539 626 582 3[350 1[350 741 1[808 3[825 5[859 1061 657
842 1[337 1[808 690 724 875 774 808 808 7[606 606 606
606 606 606 606 606 606 606 1[337 1[337 2[471 471 18[606
21[{ enclmec ReEncodeFont }55 1212.12 /LMSans10-Regular
rf /Fi 135[714 2[801 564 598 530 1[801 780 801 1234 367
2[367 801 1[477 694 801 694 801 747 12[1065 1[1005 2[1151
5[424 1[1040 886 930 18[780 780 49[{ enclmec ReEncodeFont }27
1594.02 /LMSans12-Regular rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -6899 -8111 a
SDict begin H.S end
 -6899
-8111 a -6899 -8111 a
SDict begin H.R end
 -6899 -8111 a -6899 -8111 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation1) cvn /DEST pdfmark
end
 -6899
-8111 a -6899 -8111 a
SDict begin H.S end
 -6899 -8111 a -6899 -8111 a
SDict begin H.R end
 -6899
-8111 a -6899 -8111 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -6899 -8111 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray -8000 20346 a

 -8000 20346
a -8000 20346 a


 pgfo

 255.12138 453.54913 0.0 0.0 pgfe

 clip

 newpath

 255.12138 453.54913 pgfVrgb 0.0 0.4 0.4 0 0.2 0.2 0 pgfshade  pop

 pgfc


 1 TeXcolorgray 1 TeXcolorgray 42394 20346
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 42394 20346 a 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 0 0 0.25 0
TeXcolorcmyk 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
0 0 0.25 0 TeXcolorcmyk 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray Black 0 TeXcolorgray -6788
-8000 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -6788 -8000 a -6788 -8000 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -6788 -8000 a -6788
-8000 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -6788 -8000 a -6788 -8000 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -6788 -8000 a -6788
-8000 a
SDict begin [/Count 0/Dest (Outline0.1) cvn/Title (Introduction) /OUT
pdfmark end
 -6788 -8000 a -6788 -8000 a
SDict begin [/Count 2/Dest (Outline0.2) cvn/Title (Example Tables)
/OUT pdfmark end
 -6788 -8000 a -6788
-8000 a
SDict begin [/Count 0/Dest (Outline0.2.1.4) cvn/Title (A table with border)
/OUT pdfmark end
 -6788 -8000 a -6788 -8000 a
SDict begin [/Count 0/Dest (Outline0.2.2.5) cvn/Title (A table without border)
/OUT pdfmark end
 -6788 -8000 a -6788
-8000 a
SDict begin [/Count 0/Dest (Outline0.3) cvn/Title (Example Graphics)
/OUT pdfmark end
 -6788 -8000 a -6788 -8000 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/FitV] /DOCVIEW pdfmark
end
 -6788 -8000 a -6788
-8000 a
SDict begin [ {Catalog}<</ViewerPreferences<</FitWindow true/CenterWindow
true>>>> /PUT pdfmark end
 -6788 -8000 a -6788 -8000 a
SDict begin H.S end
 -6788 -8000 a -6788
-8000 a
SDict begin 13.6 H.A end
 -6788 -8000 a -6788 -8000 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -6788 -8000 a -6788
-8000 a
SDict begin [/Producer (dvips + Distiller)/Title (Full Title)/Subject
()/Creator (LaTeX with Beamer class)/Author (Full Name)/Keywords ()
/DOCINFO pdfmark end
 -6788 -8000 a -6788 -8000 a
SDict begin [ {Catalog} <</PageLabels<</Nums[0<</P(1)>>1<</P(2)>>2<</P(3)>>3<</P(4)>>4<</P(5)>>5<</P(6)>>6<</P(7)>>]>>>>
/PUT pdfmark end
 -6788 -8000 a 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 14220 -2238 a Fi(F)-43 b(ull)520 b(Title)p
1 TeXcolorgray 1 TeXcolorgray 14592 1698 a Fh(F)-34 b(ull)404
b(Name)p 1 TeXcolorgray 1 TeXcolorgray 13568 4195 a Fg(Depa)-26
b(rtment)314 b(Name)6158 5247 y(National)h(Universit)-26
b(y)313 b(of)h(Computer)h(and)e(Emerging)j(Sciences)p
1 TeXcolorgray 1 TeXcolorgray 13212 8142 a Fh(Ma)-34
b(rch)405 b(17,)e(2021)p 1 TeXcolorgray 1 TeXcolorgray
14019 16252 a @beginspecial 20 @llx 20 @lly 592 @urx
592 @ury 572 @rwi @setspecial
%%BeginDocument: Figures/NULogoOfficial.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: jpeg2ps V1.9 by Thomas Merz
%%Title: NU_Logo_Official.jpg
%%CreationDate: Tue Sep 15 15:35:23 2020
%%BoundingBox: 20 20 592 592
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%EndComments
%%BeginProlog
%%EndProlog
%%Page: 1 1
/languagelevel where {pop languagelevel 2 lt}{true} ifelse {
  (JPEG file 'NU_Logo_Official.jpg' needs PostScript Level 2!\n) dup print flush
  /Helvetica findfont 20 scalefont setfont 100 100 moveto show showpage stop
} if
save
/RawData currentfile /ASCIIHexDecode filter def
/Data RawData << >> /DCTDecode filter def
20 20 translate
572.00 572.00 scale
/DeviceRGB setcolorspace
{ << /ImageType 1
     /Width 250
     /Height 250
     /ImageMatrix [ 250 0 0 -250 0 250 ]
     /DataSource Data
     /BitsPerComponent 8
     /Decode [0 1 0 1 0 1]
  >> image
  Data closefile
  RawData flushfile
  showpage
  restore
} exec
FFD8FFE000104A46494600010101025802580000FFDB00430003020202020203
0202020303030304060404040404080606050609080A0A090809090A0C0F0C0A
0B0E0B09090D110D0E0F101011100A0C12131210130F101010FFDB0043010303
0304030408040408100B090B1010101010101010101010101010101010101010
101010101010101010101010101010101010101010101010101010101010FFC0
00110800FA00FA03011100021101031101FFC4001D0000020202030100000000
00000000000000080607050901030402FFC4004E100001030302040306040303
060B090100010203040506110007081221311341511415223261712342819109
52A11662B12433437292C11718253436447382A4B2C25563657493A2A3B4D1F0
FFC4001D010002020301010100000000000000000000060507030408020109FF
C400491100010303020403050506030507040300010002030405110621123141
51136171071422819132A1B1C1D115234252E1F0166272082425367333353782
92C2F1172634B25354A2FFDA000C03010002110311003F00DA9E84234211A108
D084684234211A108D084684234217C871B529484AD2548F9803D47DF5F7057C
C8E4A168DE1B0A5516E0AC53EBB1E40B6FC6139AE6C2D0A6F23B77C12300F6D4
91B455B658E27B31E2631F35043525BA48279E2901F073C43A8C7F7B15525638
C6B5A56D44CB9A805116E642931DBA6BFF0011438A3F3FF79000273FA69861D1
F3B2E0D826DE2E7C43B76F549753ED2A8E4B33EAE9B69F9061EE7AF98503BF78
D19B56B168A2D06974DB8D5212BA965396D096F070927BA567CBC86752D41A35
90D53FDE7E28F1F0F7DFF44BB77F69EFA8B745EE43827CFC7D863B7939477703
8C5BAAE0A85B150B5995D2FDD213227324E5125FECA49F56F1DBEFF4D6E50690
A7A764AC9CF1716C0F61FAA8CBC7B4BACAC929E4A31C1C1BB87473BA8F4C2F3D
6F8BFBB6A1BA14CBD20475C6A3D3DB0C2A97CF94BADAB1E2951FE627B1F2C0D7
B8748D3C740FA679CBDDBF176ECB1557B49AC9AEF1D746311346383B83F6BE7D
97AA81C625C91774E7DDD5961E7A81319547452D0AFF003284E4B64797367B9F
3C9D789F4840EA06D344712039E2EFDFE5D966A3F697551DE1F5B3826170C707
603963CFBACDEDCF1A3518553B9A7DFCCB9258969322971981D1970744B20F92
48C64FA83AD5B8E8D63D913290E08D9C4F51DD6FD97DA7C914D5125C8643B760
1D0FF2FA1EEA67B75C64D11FB22B55ABFD4DB75785295EC90A3A70A90DAFAA12
9FF57B127EFA8CB8E8F95B551C547F608DC9E8473FAA9DB2FB4CA77DBE6A8B96
D234ECD1D41E407A72255976F710D63CDDAF83B9570D419A63524969C8DCFCCE
07C1C16D23BABC8FD8EA12A34FD532BDD4508E223AF4C774D745ACADF2DA1975
A970603B11CCE7B0EEAC98F548126146A83729BF025A50A656A5001616329C7A
939D42BA27B5C5846E39FC934B278DF1B650767631E79E4BD7AC6B3234211A10
8D084684234211A108D084684234211A108D084684234211A108D08468423421
1A10A377D6E0DB1B734B62B375CE3121C89288A1DE42A095AB38271E5D3BEB76
86DF3DC6431538C9032A2EED79A4B24427AC770B49033E65525BC5C5733B7D79
5098B6041AF5165C2F6899E0BA093CCAC24A163B1001E874D167D2A6BE9A433E
58F07033F98483A9BDA136CD5D0B69312C4E6E5D83DCED83DD2E972F11D7AAF7
3AB57D59F559306354BF09315D3CC82C84F2A4293DB23BE469CA9B4ED28A1652
54B438B7AF9FAAAC2BB5BD79BB4B71A1796B5FB60F2C6303215526A550F124BA
263C954BCF8FCAB23C404E4857A8CEA7BC36600C72E5E493BC7932E21C7E2E7E
7EABCDAF6B0A34211A108D085EDA3D16AD70541AA4D0E9D2274C7CE1B618415A
D5F60358E69A3A761925700D1D4AD8A5A49EB651053B4B9C7901CD49770B6AEE
6DB18F481763688D3AAECAE42618395B2D8381CE474C9EBD35A36FBA41732FF7
7DDADDB3DFD14C5EB4ED5581917BE6CF782787A81E6A1BA924BEBB0BEFA994C7
53CB2D20952505479524F7206BE0001CF55E8BDC5A184EC14CC6F15F8FC8B705
42BD25E896CAD930E38561090D9C8240EE71D32751BFB22900978180193393EA
A7BFC4D717BA9FC49096C38E11D36FC4A64EC6E3165DE3BAF4EA654A3C4A25AE
EB4EB6B2F2C7397393295AD67A0191D87AE92ABB48368EDEE7B097CBB72FC005
6A5A7DA53EE7796432811D39079F3CE3624ABEEC1DDFB2B72EA956A6DA33D530
51CA03AF7272A17CD9EA8CF523A77D29D7DA2AADB1B1F5231C5C87EAAC5B46A4
A0BECB2C544EE2F0F193D0E7B29A820F639D45A9F5CE84234211A108D0846842
34211A108D084684234211A108D08468423421719F2D084B9EE0715964AA8D78
DA0876752EBD01B930E328A72975D4929050B4FCA7CFAE9CEDFA5AABC582A4E1
D19C13E43CC2ABEF3ED0683C0ABA204B2668734762796C42526ECDE6DC0BE2D7
87695D55955422417FC765C7523C5CF2F2E0ABF30C1F3D5854B67A3A19DD514E
DE12460F654BDC753DCAED46CA2AC938DAD3904F3E58DCF5508249EE7B6A4D2F
AE34211A108D0846842FB759759504BCDA90A2028050C1C1EC75F010792F4F63
A33870C2F8D7D5E54A36BEB754B7770EDEAB51D6A4CB6AA0C25001F982961252
7E841235A37385951472C727220A9AD3D55351DD20960FB5C43EF38C2B7B8DEA
A199BAF0E067FE634A69247A15A94A3A5DD151705039FDDC7EE4EBED567F12EE
C8FF009583EF394BC8049C019274E0AB0033B059CB92CBB8AD28D4B9170C05C3
3578E654669CE8E16B380A29F2CF9675AB4F590D5B9E2139E1383DB2A4ABED35
56C646FA96F0F883201E78EE560F5B4A351A10A4D66EE3DE3B7E8A826D1AC394
E554DA4B2FB8D81CFCA0E4609EC7EA35A5596EA6AFE1F786F170EE14B5AEF95D
66120A27F0718C1239FCBB261F69F8B5A1D83B651A8D5B8F52AD57C4A7944295
D3954AC8529C567D4F6D275D749CB5F5C6588864781FDE159DA77DA2D3DA2D2D
82A03A49B27EF3D494E1C0A835360C3985494196CA1D4A4ABF9920E07AF7D573
24658F737B157743309636BF971007EABD7AC6B3234211A108D084684234211A
108D084684234211A108D08515DC9DC2A4ED85AEEDDB5B8D21F86C3ADB4E08E0
158E7380707BE35BF6DB7C9739C53C440241E7E4A22F97986C3486B6A012D040
38E7BA4E77FB88A72B779D1EE6DA6BBAA50DB6A0786FA53CCD61CE7270A41E8A
E9F7D58F61D3DE0533E0B8460EFB75DB1DD51FAC35A9AAAE8AAECB3B9A037079
8DF3D4724BF552A536B3519356A8BC5D9531D53CF38463996A3927F7D37C51B6
1608D83006C1569513C9552BA694E5CE393EA559F59D8BAAD3F62E93BB0DB0EF
88FC973DADA20FC315470D398F4C83FB8D41437C8E4BABEDE4EC06DEBD4271AA
D232C3A7A2BC341C927887F94F23FDF7553698124234211A108D0857C70F5B0F
12EA537B85B8AE269F68C379096FC73C8273A5402520FF002736013E7DB4A9A8
2FAEA5CD1D1FC5311D3F847EAAC8D17A4195F8B9DCFE1A76918CEDC47A7CB3F5
5D1C5D6DDBD65EE739568CC84D2EBAD25F8BCA9C21B52404A9B1E98C0207A1D7
AD257015943E1B8FC4CD8FEAB1FB48B33ADB75F1D83F7720C8EC08D8854769A5
576A7BB0F48F7DEF05A700A39926A4DBAA1F447C47FC35137D97C0B74CFF00F2
9FBF64CBA3E9BDEAF94D1FF981FA6EB3BC55553DE9BE77190AE61156D461FF00
71B1FEF3AD4D2D17856A8BCF27EA548FB439FC7D4137F9703E817DEC96C55EB7
DBEDDE0CC86E8741A6B9E33B5592904008EAA2DA4F45118EE7A0D7CBD5F29A84
1A6238E476DC23CFBF65EF4A692AFBAB85783E1C4C39E33E5CF00F3FC178B884
DCD85B997A332694A79D8147889A74792FE3C494104E5D501D0731EB8D65D3F6
C75B698B64FB4E3C440E43CBE4B5F5ADFA3BED783064B231C209E6EC75F9AABF
53A9391A108D0840241C8D08E4AD6DA7DE5A8D0B7328D75DFB5FAA4EA7D310B4
F865C539CA3C329484A338F4D405D6CEC9E85F4F48C01CEF975EE9CF4EEA7969
2ED1565CA57398CCEDCFA6060277366B7B295BCEC55A75168F2A145A63C8652A
90A054E95249CE076EDAAC2F36592CC58C95C0970CEDD15F9A6354C3A9DB2C90
30B5AC206FD72AC9D42A694684234211A108D084684234211A108D08468428CD
CDB8F635A5506A8F72DD106972E5345C65121CE4E64E71904F4EFADEA6B75555
B0CB0465C0765135D7BB7DBA41055CCD639C323270900DC9DF1DC5AEA2BB6254
EE8155A2AE6AC3656842C9421C25052B0338E8356E5BAC945018EAE38F85F8F3
EA37D97375F355DD2AC4D6E9A6E388B8E36076076C151DDADDAFAD6EB55AA144
A0A9225C3A7B935B0AF95C5248C209F2CE703EBADCBA5CE2B546D966E4481FD5
4769ED3F3EA19A4829CFC4D6970F3C74F9A89D4204DA5CD7E9B518CE479519C2
D3CD389C290A070411ADF8E46CAD0F61C83C942CF0494D23A19461C0E082992E
1B77B5FAD9FF00812DC79099D42ACC754184EBDF330A2301A27CD27CBD0E3495
A8ECA21FF89D10C3DA7271D7CD5ADA1F55BAAFFE03743C513C70B49E9E5E9D95
21BA360D476D2F8A9DA3504ABFC91D258708E8EB27AA163EE3FAE74D36CAF65C
A95950CEBCFC8F555EEA1B3CB62B849472743B1EE3A1529E1DB6C68DBAF78CEB
6AB337D9C7BADF76391F378DD0254079F2E738D686A1B9C96AA66CF18CFC433E
8A6744D869F5056C94D5071F01C7AF4FA2C1EE9ECFDE3B4758F765CB0B31DD27
D966B432CC848F43E47D41EBADAB5DDE9AED178901DC731D428ED43A66BB4E4F
E1D537E13C9C391FEBE4A0FA944BA9EEE1EE75BBBC7C3DAEC6B88F868A40F619
4A6D410A6D293CEDBA0F91C75CFA8D553A819359EF1EF50FF16E3F02174668D9
E9B5269BF71A8FE0F84F4C6370564772AEEE18EE6A0C0B62FBBD21D49BA4A925
A536FA96F73253CB92B6C75C8EFEBAC36DA4BE534AE9E9222D2EF2DBE856D5F2
E3A56B69D949719C3C3396E49DB6E63EF55B7B6F02EC0F0BD8DD731F9B9249FE
B9D4D706A93BE7FF00D52AF8BECF9BB70FDCE59FB06B9C1ADAD7346BA6DAABA2
9F508E149655254F84A4A8609C28119C6B52BE0D4955018276F134F3C61495A2
AF43D0550ABA47863C72CF175F55E8BE76276537BEE195765ABB93162D46A185
BC88CFB4EA1C7318E6E4242813D338D78A1BE5CEC908A7A884968E59047DEB25
DB495875554BAB296A407BB9E08209EF8E6ADAAFEDBCE5EC84ADB3B765B2CCB1
48F6061E427910B5848EBD3B7360E7EFA5F82E2D17415D30DB8B2473FEF09CAA
ECD21B0BAD74CE01DC1C20F21CBF35AEABC36F6F3B06698176DBD329CB07095B
8D9F0D7F54AC743FBEAE4A3B85357B78E9DE1DF8FD17305CEC95F677F056445B
E7D0FA1E4A3BADC5148D084684234211A10A4F6C6E5DF367536451AD8B965D32
24C703AFA63AB90AD40633CDDFB6B4AA6DB4B592092760711CB2A5A82FB71B64
2E828E52C6B8E4E3BA7DF6AF7BF6EEB10EDCB1E15D4AAAD75D84DA1C0942D64B
896F2B2A5918CF7EBAA9AE964AC85D2D53A3E18C13DB9676C05D1BA7F55DB2A5
905BE39B8E62D19E677037C956EE9753AA34211A108D084684234211A108D085
81BEABD3ED7B3EAF71D2E0226C9A6C55C9447528A439CA3246476E99D6DD0C0C
AAA9642F380E38CA8FBB55C941452D544DE2730138EF85AFADF8DF346F63D499
8EDB49A5C9A6A1C6D4A4BFE20712A20E3B0C608D5BD62B27EC50F687F10763A6
1734EAED58354BA2798B81CCC8E79CE554FA9F49AAC1DA1DEAB9766A7CA9D6ED
3E9D27DB821320496895290939E54A81CA46A22ED6682F0C0D98918E584CFA6F
555569991CFA6634F163391BE074CF45735F76E5B5C4FDA0EEE6EDE446E1DE54
B6FF00E57A40239A4240F993FCC71D8F9F63D74B543513E99A914358730BBECB
BB7F7D53EDDE86935ED09BADB070D4B07C6CEA7F5F23F24AF34E4BA6CC43CDA9
C8F2A2B81493D52A6D693FD08234F443646E0EE0AA81AE929A50E1B39A7E8426
DABD6739C5A6D750EF3B6DE86D5E1441EC1516DE57207801E67CB3D1409F5235
5EC15834A57C94D382617EEDC74FEF91575D65B3FF00A896886BA9481531FC2E
CF5FEF985D968707DFD8BA6B573DD3BA26DEAEB4A4AA33F11694351D7E854B23
9FEC31AF957ABBDF5E60820E38CF30799FA725F6D9ECDC5AA21575557E14C391
6E0007D4F35EBE2B6B556A7EC9D228177D429758AB4DA927D9E7C34E12EB4DA7
3E2E3F2A88201C1C75D63D2D0C725D1F35382D606EE0F73D167F685552C3608E
9EB1CD7C8E76CE1D40EBE47BE3649A6AC9543AB62C6DEF46DB6D9D66CFB5E94F
1AC5C2A226541E7072328E52901B40EB9C13D4FAEA02BAC86E35CCA99DDF0339
01CCFA94ED69D56CB1DA25A2A361F165FB4E3C80E5B0F4553EA7D24E728C9F5D
0846842FA69D75858758756DAC7652145247EA35F080E182BDB24730E5A70558
3677101BB763AD028F78CC75847FD5A5ABC7688F4C2B38FD0EA22B2C36FAE1FB
C8C67B8D8FDC99AD9ACEF56A23C19891D9DB8FBD4DF7338A597BAFB6AFD9B725
B0CC7A917D979B99197F8679159394ABAA723D0EA2EDBA5DB6AAD1530C996E08
C1E7BA60BE6BF3A82D2EA1AA8B126410472DBC8F2512D8DD90A86F4D5E7438F5
9629D1A98DA5D90A5279DD5249200427CCF4EE7A6A42F77B659A36B9CD2E2EE5
DBE6542693D2926A799ED1206B59B9EA7E416162EDF55AF1BEA4595605066BEF
C771C6B9242C070042B0A71C3D128FB797D75B4EB84747482AAB1E003DBCFA0E
EB49B659AE7717505B2324B7237E7B7327A05635BBB1DB6741BAA05AFBA1B908
76B12E52229A551505D2D38A38E575E2309EBD0E3AEA1AA2F75D3D3BA7A087E0
033C4EDB23C8269A2D2369A3AC6525DEAB32B881C0CDF04FF33BA2F6F175B7B6
AEDA4CB628367D19A8309D8AF3AE28654E3CE0501CCB59EA7A6B1692B8545C9B
2CB52ECB811E8079059BDA459E92C869E9E8A30D69049EE4F994BCE9C155E8D0
8530DACDC89FB5575B777532991A6CA65971A6D120A8253CC304F4EBA8EBA5B9
974A734F23880483B7929CD3F7C934FD60AD8981CE00819E5BAD816C1EE0DC9B
99603577DD1121C4765C8752C371C109F092700F5273939D5457EB7C36DAB34D
012400339EEBA4F485E6AAFB6D15D56D0D2E2700761EAAC9D42A694684234211
A108D0846842F0D6AB948B769EE55ABB51620C36B016FBEBE542727032759618
24A8788E26E49E816BD5554145119AA1C1AD1D4EC1243C4E6EBD6D8BF1D56DFE
E6BF2A89538492E478730A9A6D78295A08EC32307F5D5A3A6AD519A41EF9061E
D3CC8DFB85416BBD453B2E24DB2ACBA27B770D76403C88F9A5C3BF5D392AB165
ED2B56B37B5C112D8B7D843D509CA2861B52C2428804E327B74075AF57551D14
2E9E63868E6B7ADB6E9EEB52DA4A6197BB974561B1C30EEBCC81517615103D50
A44AF669B003A9F1539405A168EB85820F91D43BB535BD8F6873B0D70C83D39E
083D934B7405E2489E63665EC38737233CB208EF951CB76AFB89B1D7846ADA69
F3A913E3AB0B664B4A421F47E64281E8A075B9510D1DEE98C590E69EA0F2F351
7435174D255CD9F84B1C39823008EC7BABE6FBD8E637F6DFA76F2ED8C26A912E
AA926A90257E136569E8B75071EA0FDC75D2A50DECD86675B6B8F106FD9237F9
1FEF65635E34A335853477BB53781CFF00B6D3B0F323FBDD535B43BCF716C756
AACE5219667B52DA5477187144345D49F81CE9E9D7EE0E992ED6686F71304870
46F9EB8EA12269BD5153A4EA25F0807070231D3239151FBFB742F5DCCAA1A95D
F5C7A575FC36127959647A2103A0FF001D6DD05B296DACE0A76E3CFA9F52A32F
1A82BEFB378B5B2123B741E81493756A7B6551B76DA89B7957ADBCFC46CB7361
4DE72D36E14272B6C1CE0A940E40E9D35A76B8EBA39A575635A01E4473C763E8
A5F51545A6A2929E3B63DE4B76735D9C0381B8CF73D979AC8E1F7762FF00E47A
8B6A48662AFF00EB533F01AC7A82AEA7F41AF75B7FB7D06D24809EC372B5ED5A
2EF37701D0C4434F576C3EF576DB3C05D45D4A1DBB6F865827E66A0B05647FDE
563FC34B153AE9836A78B3EA7F44FF0043EC8DE4035B518F268FCCAB0693C136
CEC6F826CCAC541C47CD99611FB848E9A87975A5C5DF6035BF24CB07B2DB2463
F785CE3EB8FC02EEA870D1C325126B148AB86624D9292B65893572875C48EE52
92A048E9E5AC6CD4F7A95A5EC3903B3765B87D9DE9D6FC26339FF515E6FF008A
5F0F35F8267D0EA1203057E187E2D552E37CFE993919FA675EC6ADBBC2EE1900
CF62D5825F66760986581C3D1DFAA8ADC3C05D2DC429CB56FA90D2B194B73638
5A4FFDE4E0FF004D48D3EBB906D3C40FA15035BEC8E9DC09A49C83FE619FC153
97AF09FBC36721729BA222B5111D4BB4E5F8840F5283857F4D32516AAB6D61E1
2EE13FE6FD79246BA7B3ABDDBB2E6B3C468EADDFEEE6AA095125C090B893A33B
1DE6CE16DBA829524FD41EBA626BDAF1C4D39091E586481C59234823A1567F0D
3B8076FB75E9531F7B920D495EEF9993D391C202547ECAC1FDF507A9283F685B
DED03E26EE3E5FD137E84BC7EC7BC46E71F81FF09F9F23F22AD7DE59D56E1DB8
8367722DE8C9729B71B45D90C6308772407900F91C80A1F53A80B3C71EA1B41A
298FC4CE47B763F9273D4B2CDA335236EB4CDCC728DC77FE61EBD574F103675B
F0136E712D638F02354E5C7972A13A3914A749E60B00F62794850FD75F6C1593
49E2D92AB72D0403E5CB1FA2F3AC2DB4D0F81AAA8360E734B9A76C9E79F5EFF5
58FE27EFAB5B792D6B72F4B42A4D3ABA60719A84171413223F3E082527AA9390
464646B3E99A19ECF512D35437ED6083D0E16AEBDBA526A6A182BA85E0966789
A7670CE3A7E8A97B476BAF2BD68955B92DFA6B6FC0A200A9AE2DE4B6103055D3
9BBF41A65ABBA53514AC866761CFE5B65215B34F575D29E4ABA76E591FDA24E3
CFAACB6F0DDBB7F74CDA40B02D76E92CC38286A62D2C86CC89181CCAC027A74E
9F7D6BD9E92AE95AFF007B938893B6F9C05BBAA2E56DB83E216D8B8035B871C6
325579A984AAA79B4D757BBEF6A03571DD5369F40892D0F484A5E73C30849E6E
5E549F3231FAEA2AEB4BE25348618C3A42303619FAA63D3970F06BE06D54C5B0
B5C09DCE3037E43BAD8C58BB91676E3C49136CEAB09EC445869D586D49095119
03E203CB54D575B6A6DAE0DA96F092BA7ED37BA1BDB1D250BF8834E0EC7F3527
D68A964684234211A108D084B9712DBEF6B5BF16B5B5371DA95390E5460FE1C8
4A901A3CC3285A73D7A287F4D39E9BB154543A3B843201C2796F9DBA2ABF5CEA
DA3A264B67AA85C4BDBB1DB1BF223D0A4519E453ED8701292B0143D46756A389
C15CF71805E01E4AEBDE3E19AE2B069ECDDF6DA1EAADBB2586DF528272F44E64
838700EE9EBF30FD74B167D4B0D7BCD3CFF0C80E3C8FA7E89FB53E84A9B4C62B
68C17C2403E6DC8EBE5E6A3B666E659F6B6DFCEA1BB66ADEB99D79C5C2ADB2F0
69D8614901252A1F17439E9E84EB72B2DB535558D944988B032D2320A8EB55FE
86DD6C7D3BA0CCE49E1901C16E4743CD5F1C1AD62E7AFDA37C43855B51AC9759
7234A9A54F04ACA081CD93929E98D2A6B1860A7A881CE6FC1BE40DBAAB13D99D
5D5D6D155B5B27EF72082EDFA75F256B2A9772DEF9B5F7DB6E68EE535849968A
BC295CD1C29B20E141585B7919FA6323501E2C145FBFB54CEE23B7091BEFF714
E260A9BA7FBA5FE99A5837E369C8DBBE770A83E2038A3F7830EEDDED32C40A24
7498CFCD613C85E48E9C8D63E547D7B9D36D834C7864565C3779DC03D3CCF9AA
DF58EBEF101B6598F0C6362E1B67C9BD879A584924E49C93A795509395676D17
0F97DEEE484BF4D89EC3484AB0ED4A4A486FEA103BACFDBA7D750776BFD25A46
1E72FF00E51CFE7D937E9BD1971D44EE38C7045D5C797CBBA6DE89B2BB29C3B5
A536FCB9A3FB77B9A399332A73182FA9B48EE50D8040EBE833F5D577557DB95F
6614F11E10E380D1B7D4ABD6CBA2AD1A7D9E2F071BC7373B7FA0E41626D6E346
C1BC7756D4DBDB6A0ADCA35DF4C725532B4A70250A908C8F662D774AC149041F
A7AEBC4FA6AA69E925A994FC519C16F91EB9EC99595D1BA46C6CE446C7F24B2E
DB717DBD149E27574DDD5BA952AD235F936C488E9650D3115C2B219730077181
D49EC4E9AAB74E50C9690FA36624E10FCF324750A3A2AE9854E253F0E70ACCE0
E2B355A27149BDFB7556AACC9494CBF6C8A990FADCE540795F2F31381CAE27B6
A2F5244C92D14754C681B60E0792D8A07B854CB1B8A8471DB2B9F8ADB15B27A4
2B665BFF006F8242BFF4EB7F4A37FE0D39EEF03F0586E27FDED9E40FE6A8BA85
D536DFE04AD5A0D3A5BEC4BAFDEB3657332E292B286109EC475F9B1A60653B66
D45248F190D8C0FAAD1321650B40E6495726C4F11B7847B2F7A77D6A772541D8
348A5C0A75161497D4A61B9A5A4A125283D01C804FAF5D415DAC9099E92DEC60
E27171711CF195BB4D58FE09272760063D54D36CF8E0DC9A33DB6B6C6E75229F
569777539EAB546723FC9570A1F3AFC374A47C27F0DB52CF6CE46B46BB4B5348
2A26A471688C8681CF27A8FA9C2CB0DC1E381B28C970CFA0576DAD5FE1EB8C0B
3A45C9168EBF0999469FED52A3FB24843F8C84A1CECBE983D09D43486EBA6271
17174CE01C8C798E8B56E164B4EA484FBC460F9F223E6A86DE0E11AF1DBEF16B
F66BAED7690C9F10842712A381D72523E603D47EDA73B46ACA6AFC4353F03CFD
0AA67527B39ADB466A6DE4C918DFFCC3E5D7E4B8AC716950AC5AB49A355F6F68
B51AC521210DCFA827C64A5613CBCE1B23A2B03AE4E33A21D28C8677C91CCE6B
1DD06DF2CF65F6A3DA3493D24704F4CD74ACFE276FBF2CE3BAA9AF5DCDBDF70D
E6D775D75E96D327F0638010C33FEA369C01A61A2B6D2DBC114ECC13CCF53EA5
24DD6FF70BD387BE48481C87203D00D95D93386A890B87476F5A5486AB35F7FC
2A82DC8AAF110D4619E66918EE403957D47D34B0CD48E7DE452C83823196EFDF
B9FC958326868E2D306B6122498E1D91BE1BD40FCD64AEA8B22D7E0F2888B152
1F8B59792ED7E533D5492ACE52AC761CC1293F6FAEB052B8556A390D5EC583E0
07FBF9ADAB846EB7E88885BB76BCE6423CF9E7E7B25674F8A9B468423421333C
31EFE48B59AA4ED5D1AC644D91539E4AE526494A94A59195118EC948FE9A49D4
D616D517D7C92E03472C76FD55B3A0F583A81B159E0A7E273DDB9CF7EBCBA04F
08D55AAFF5CE84234211A10B1973395B66DEA8BD6DA595551B8EB5C44BC09429
C0320103D7B6B3D3089D3344DF673BE3B2D4AE74EDA67BA971E200719E595AD5
DDDDD7BC7746B0D3D79C684CCAA673C74A5863C3281CDD52A39C9C11ABAED36A
A6B5C44531243B7DCE572AEA4D435D7F9C1AF0039991B0C7C9404120820E08EA
352C9701C6E1597B6DC406E0EDDD4D2EFBD9FABD2DCF82553673A5D69D6CF420
736794E3CC6A12E560A3B8331C21AEE8E1B109BAC7ACEE5669B25E648CF36B8E
411F3E4AC9BB3672CBDE9A1BFB8DB0CE2199E81E254ADC59095B6BEE7C31E5F4
1D8F97A6A1696F1556694515DB76FF000BFF0054D772D3141AA69CDD34E9C3F9
BA2EB9F2FEF057CF0C1B49BC2E5C13AA10EAF54B3296DA7C19AFA9801C90A1D9
094383071FCD8E9AFBA9AED6E10B58E6895DD067979E42F9A0B4E5F0543E46BD
D4F1F271C6E7C803F8AB1EF3DE0B06D18F725A352DDFAEDC950914D910C34E47
6D5190F292401CEDA46159E9DF1D750B4567ABAB3154474ED634381E6738F425
355CF525B6DCD9E8A6AD7CAF2D737040E1071DC0E69261E435672E7EE65345C3
A709EEDCA88D7BEE546718A59C3B129AACA5724770A73CD28FA773A45D43AA85
3134B4472EEAEEDE9E6ADFD15ECF0D586D7DD4619CDACEA7CCF97975571DE5BD
B6E4EDB0DC4A4F0F558A6CFB9EC680E36985110088EE253DD09C617CB8576C8E
618D2853DB6515704973043243CCF557487C7142E8E900F80721D1223B45C40D
DB41AD51AB3B8D7D566E8B0B70D97A8573B15378BA20CC5FC2B201E88C052569
C632927D35605C6CF0CB1BE3A68C3268B0E6636C8FEF63E6A1E0AA7B5C1D23B2
D76C73D0AA9AA564DF9B497E56974090FC8776D6BCD4E4B2D654430A58F0A520
0EE85808048FE64EA699574D72A7678A31E33719F3EA3D4745AA62929DE780FD
839FEAAEEAB70C3BC3BFF7EDED745A346A851A8172218B9298ECC40623C89CA4
A141B5157C4929E773E203B8D40457EA1B4534314C439ECCB0E3721BDFB6FB2D
C7514D5323DCDD81DC7AABDACDE0EB884A3EEE44DE1FF857A350EA52624162B4
888CADF54C0D2501E412A006161B1D7BE49D2FD4EA4B6CB44687C12E6824B727
18CE71F4CADE8E8676CDE37160ED9F3565F12DC1F31BF37552AFCA2DF322D9AF
53A0B94D53A2307DA7A3AC2811CA48C2B0B58C8F5D45D93519B4C2EA7923E361
20F3C6E167ABA0152E0F0704283D57F87F349A3D836D51AF36DDA459B12A3E3B
32D83CF3664A4ABF14149C240572F4C1E835BCCD5CE2F9E57B3E290B791E41BD
16236C18635A766E7E64AA6EBBC19EFD5A9B2142D9BA7D163D4D35ABC3DE3704
CA7490A6DA8C9086D9242B95440056A3D3A6353B16A6B7D45C1F5CE716F0B30D
0475E6569BADD3320108DF2727D153BBFCC5C573F14354DB5B229921B794DC5B
329282D2904466D08694A4E47CA70A248F227535673141686D5D43B6DE477A9D
D6A5487BAA8C4C1E43D14DF796A5458F75585C22D8D5F9D4DB5ECC971DBAF56A
96C2DD71CAB3A405BB86FA9295AB03EA7E9AD0B632430CD7AA868749203C2D3B
7C23A6FE4B3D41687B2923386B7991DD30CCF1836F70E772D1B626F6AFD56FE3
458EA4DC57404655094A58F0D2B40F99284948592723EA74B5FE1C96F313EE14
ED11711F859DFBE3F25BFEFCCA57081E78B1CCF6538DE9E1A6D5DD9A2237176A
DC8ACD466C74CC6C31811AA2850E60463A25441E87CFCF5E6C9A967B649EE95D
92C071E6DFE891F57E80A7BD30D65B806CDCF1D1DFA1F3492D4E9950A2D42452
AAD0DD8B322B85A799753CAA42877046AD08A564CC1246720F22B9F2A69A5A39
5D04ED2D737620AB8B86FDFE99B59594D02BEEAE45AD515F2C8695F17B328F4F
1123D3F98798D2DEA2B0B6E91F8D0ED2B7979F97E89EB446B17D86714B547303
F9FF0094F71F984D3D276F05BF73BF02DB80DD5F6EAFB65C726444A816E03EA4
7378A8F2F0D63C87638D21CB70F78803E63C35109183D5C3B1F30AE1A7B38A4A
A7474CDE3A3A80789BD1A48E63C9DF8A46775ED1A7D89B855BB5295514CD894F
925B69D49C9093D794FD539C1FB6AD3B555BEBA8E3A891B82E1FDFD573C6A3B6
C569B9CD470BB89AD3B7E9F2E4A25A90508AC485B09B9B55B1226E0D1EDF767D
3A5A96036C7C4F250938E7E4EE527AE08CF6D433EFD431559A391F870EFCBD32
9AA2D1B76A8B736E5047C4C76761CF03AE3B28B5BD715D1B7D70A2AF4590F52E
AD0CA9014A6C05B648C1042874E9ADFA8A782E10F8728E26150D47595964AAF1
A0259237CB71F55B18D81ABDE15EDB7A756EF9ADB350A9D40190391284969A3F
22484F9E3A9FBEA9BBFC34D056BA2A56F0B5BB75DCF5E6BA7B47D4D755DAE39E
E120748EDFA6C3A0D9591A854D28D08468425A38C6AF4D836E44A85ADB8C69F2
E339E0CAA6C69C10B7DB576572A4E7293FD0E9DF47C0D7CCE65443C40EE1C472
3FD5555ED2EAE48A95B251D57039A70581D8241EB81BEC91E75D75F756FBEE29
C71C515296A392A27B927568001A30173F39CE7B8B9C724AF8D7D5E572A4A907
9549293E846342FA416EC54FF625BBE64EE6D1A1EDFCE7A2545E7D216E209E40
C83970B83B14F2E7A1D445F0D2B685EEAB19681F7F4C79A66D202E0FBB44CB6B
8B5E4EE7A63AE7CB09A9E2DF7D1FB1E888DBFB6A6F2D72A8CE65BED9C2A3307A
1C7A295D71E83485A4EC62BA5F7B9C7C0D3B0EE7F40AE1F689AB1D68A716EA57
7EF5E3723F847EA522E49512A512493924F9EAD4E4B9E0924E4A683852E1DD9B
854D6E75F5107BA632B9E9F15E184C8527FD2AF3F9063A7AFDB48BAAB509A706
8694FC47ED1EDE43CD5BFECF3458AB22EB706FC03EC34F5F33E5D97471B1C41E
F1D29A4D0B68A81598769535116A156BB29812B4BACA9630DB0E27294A410428
FAF4381A8DD2F68A194992B5C0C8721AC3DFB91F82B82E15133006C43E11CC8F
C95777F53DAA09A4F1BDC2CCF33E1292945E148E500F31003C5E693D0051CF38
C6012143A6A4A8DE65E2B05DC60FF03BF0C1FC3E8B04A38715B4BB8EA178291C
22D7B7E5A937A6CC576934EDB6DC175AA84B87516D7ED348948592E25A401851
4A8AD29503829560EB249A8A3B4910573499E2C8047270E995E4501A905F09C3
1DBEFD13ED67EC86DD59F358AE45B7A2C9AEA2931A8F22A8FA39DF90C3284A52
159E9F9413D3D355ED45CEA6A5A637388664B80E809536CA78E33C406F8C654F
5294A404A40007400796A3D665CE84234211A108D08586A95A16CD5AA0CD666D
1212EA7190B4479FE023DA18E7494928731CC93827B6B332A25634B1AE3C2798
CEC7D42F258D27246E932AEF0E5BADC2A357EDFF00B2131EBC235C31484D3A44
443D508F254BC891E21EAB0DF329400EA4E323A674EF1DE692FE60A6B80F0F80
F3070D231CB1D32A25D4B251F1C90FC59E9D7295FDA2D90A86E76EABBB653AF1
A8B2D4A604BBF2A89520B4DBFE273A639715DD5CE424F5EABCE01E5D365C6ECD
A1A3156D8C6C7110EB8C73C7DFE8A320A6334A6227FD47CFB2BF2A3C725D7B63
7A4AB62CFB2298D6D86DFCF8F6C3CC3EB227BF825B0B6CE7E6C214AC63181D4F
5D2EB34AC55D0096690F8F282F1FCA3AEEB78DC5D13CB58DF81BB79A61788BD8
6A76EEDB2DDFB68440CDC4DC54C84279394CD64A7982163F9C03D0FE9A87D3B7
E7DAA6F75A8398C9C7A1EE3C92BEB9D1D1DFA9CD6528C4ED1FFA8763E7D9218F
B0F4679C8D21A534EB4A285A143052A070411EBAB61AE0E01CDE45737BD8E89C
58F1821371C1BEF62DE0768EE59CA1CC952A8EFA95D474F899C9FDD3FA8D57BA
C2CA07FC4601FEA1F9FEAAEBF667AA4C83F6355BBFD07F16FE6153FB8DB0BB8B
4EDD5A8DA94AA2D42B2E4B7D52634A4B64879A59C852967A02338393DC698ADF
7EA39281B512383703047623B04937CD1F748EF3252C31BA4E2390EEE0F527F1
52E89B15B69B5115BAD6FCDDEDBD37979DBB7E98BE77567D16A1D7FC07D751CE
BE575D5C62B4C786FF003BB97C94E45A46D3A7582A3514C0BBA46DDCFCD6617B
C1BBFBC9165D99B1B6F7B8285468790D46584BE591D128F13B2547C923A9EBD7
5AFF00B22DD67736A6EAFE37BCF5E59EF85BBFE25BD6A763E8B4F47E1451B7A7
3C7419E84F6096EAE52EBD4BA8BD1EE3833634D0B3E28968525655E649577D3A
412C52B018482DF255556D355534A455B48775CE73F7ABB7848AF59D40BCDFAC
DEB7A7BB1319AE48515E796969D715D0A95F9700791F5D2CEAC82A6A294454B1
71679900640FC53E7B3AACA1A3AE74F5F51C181868248049EA7A6C9F98B2A34E
8CD4C86FA1E61E405B6E20E52B49EC41F4D54AE6B98E2D70C10BA36391B2B03D
8720F22BB75E57B5E1ADD6A976ED2A4D6EB52D3161436CB8FBCA070848F338D6
586192A24114432E3C82C1555515142E9E7761ADDC9ECB5BBC4155B6F6BFB893
2BBB7535E7E14EFC59016D14212F93F11467A949EFDB574D822AC8289B1568C3
872F4F35CB5ACAA2D959737D45ADC4B5DB9DB033D71E45569A9A4A683DB42027
3DCD99D8FBB36F2CBA9DE5544DBB5BABD2996D998878361F5A503E60AF849C63
BE0EAB4178BA52564ECA66F1B1AE3918CE327EAAFC7698B05CAD94B2D73BC295
EC003B38C903AF4524DB3DA0B73867A3DD1B9155AFB157693139A2C84B7CA432
067947520A94AC0E9F4D69DCAEF36A4922A28D9C273B8F3FE814958B4DD2E868
2A2E72C81E31B1F2EDEA4F64935E976552F9BA2A375565E5392AA2FA9D564E79
139F8523E80607E9AB368A923A181B4F172685415DAE535DEB24AC9CFC4E39F4
EC3E4A6BC3E6D1C8DDCBF18A6BEDA934781893527476F0C1E8807D547A7DB3A8
DBFDD85A690BC7DB3B37D7BFC94FE8BD38ED45700C78FDD33771F2EDF34DEEF0
BB6FEE159B7370F1B67B954EB76F1629A86DA84CBA943A868A7296B1DC2549F8
494F500E75585BCCB4B511DCEAE22F8C9DC9E44F7F92E9A7471887DD6021A40C
003A05ADEDB9DCFDE0E1C2A736C365D91364B53154DAD58756616FB3352A072B
60007A103AE3D41EA0EACFADA0A2BDB0549D8632D91BB11E4540C534D467806E
79169EBE89AEE0D3659E9D734BDE4B25DA9DB1B7773C57999D67D518E70EBF9E
5525255D14C024F2AF015F97B693F525D38621435187CCC231203D3F5EFF0055
2B434FF178CCD9A7F84A762994BA75160314AA441621C38A80DB2C30D8436DA4
760948E806915EF748E2F79C92A58000602F56BCAFA8D084684234211A108D08
4684234212B7C5EF0D93EEEDBD9327672DF8F1AA8E5698AD56E9F01622395B4B
631CA5C18F8C771F5EBDF4D7A76F4DA6A902B5D96F096B49DF873E5D94757529
923CC237CE4F4CA52AD7BD1DD869B7B56F72AC58754BDEFC94C1A4592F27DA95
11C6DC2A6E4C9EE428123953F3ABA9E80E9C67A51776C31D2C8445103C5272CE
7981F9F40A2D921A52E748DF89DC9BFAA673636EDDC9D91A2B9B89C5A6E23D19
DDC4AA311E99467182B4C0797F2E543E16472E072760075EBA55BA53D2DCE4F7
6B3459F08125DDC0FC7D54953BE481BC754EFB4761D96238C9D966693313BAD6
C4548853D611534363E143A7E57463C95D8FD7EFA9AD1F793337DC273B8FB3E9
DBE4A9DF69BA5840FF00DAF4ADF85DB3C0EFD0FCFAA58A95549D44A9C5ABD324
298970DD4BECB8938295A4E41D3C4B1327618E4190762AA3A6A8929266CF09C3
9A720FA2696F5E296F6DC3A2D02D7DA48B21BAED4A314D53D9D92A90DBA300A5
B3D824F53CDFE1A44A2D2F4D6F964A8B811E1B4FC393B63CFCFC95C374D7B5D7
9821A4B234F8CF1F1E07C40F97975CAC3D0F8539E8695796FD5F2C50A2ACF8AE
B6E490E4973CC852D4700FD064EB667D52CCFBB5A62E33D36DBE8B4A93D9F498
F7ED4750231CC8CE5C7D49FEAB38FF0012FB53B354676D3D8DB54CE5139727C9
252DB8BEDCC49F8D7FD06B51BA6EE17894545D24C790E7FA05BF26B9B369980D
1D821E2EEE3C89EFDCFDC97DDC4DDABE3746709976D543E941CB4C36D8434D7D
80FF0079D37DBED34B6C6F0D3B71E7D4AACEF7A92E17F7F1563F207200600585
B4A5D0605C94E9B73C27E652D87D2E49618500B7100E79413D3AEB6AA992C90B
9B01C388D8951D6D929A1AA8E4AB6974608240E64765B31DA9DC6B67732D66EB
76A43971A0B0AF664B6FB1E1F29481F0A7C881DBA6A91BADBA7B6CE62A820B8E
FB1CAEAFD3F7AA5BED18A8A3690C1B608C72ECA67A8D538A01BD3B9545DB1B3D
DABD7EDF9957872898CB6586C291F10ECE13D1293DB3A97B35B65B9D488E1786
91BE4FE497353DF20B15099EA632F69DB006DBF7EC0AD68D6E553E756264CA4C
03061BEF2DC6231739CB4827213CDE78D5D90B5EC8DAD90E481B9EEB94AAE48A
59DEF81BC2D24E073C0ECBC3ACAB5D1A109C2DABE22F65EADB7748DBDDD2A4A5
B55363A62954B8A1F8EB09E8160804A4E3E9AAE6E9A76E71563EB281DF68E763
82AF2D3FAD6C5536D8ADB766E0B463E2196EDD7C94CB7EE950B72B6214C6D157
69D229345E590F468AE021C61A49FC31E6929EF83DF1A8DB14AEB6DD78AE2C21
CEDB27B9EBF353DABA99B7CD3C5B6691A6366E403CC0E9E58E7BA42D20A88090
493D001E7AB617380049C05B18E1DB6C256DB6D236D4561845C35760CD794F83
CA1E527F090AC75E548C67F5D533A8AE62E570249F81BB0F4EA7E6BA97445885
8ED2C691FBC7FC4EF53C87C82D6CF13B4BE216D3BF135CDDDB620D36BA64F3C3
BBA90CAA3A5E00FC3979AC0560607C402801AB26C2FB65453F8744F2598DD8ED
FEE3F96CB3D68A863F8A5183D1C15C9B0BB5DB99C4EDE56ED7779E93CCC5AA96
E6C5BD29B2901EA934850E48AE38D9C3873D79BA2D2010739D415DABA92C7049
1D03BEDEC632366F980797A722B729A192ADCD74E3ECFF0010EBE4B642C30D46
692C30DA50DA0612948C01AAC8924E4A9F5D9AF8846842342160EF0BC28B63D2
515AAF48F0632E4B1102BFF78EAC213FD4EB14B2B616F13F97EAB56B2B22A18F
C598E0640F993859B04119075956D2E74211A108D084684234212C3BF767587B
0553ABF1376A6CE3F775EB5379988942095B719E5FC22404609049E504A467B7
6EA74D569A8A8BB3596A9A7E08864FA8EDFF00CA8FA96329C9A96B32E5494DE1
B7894E28614ABFF896BFD16550E3C772553A8E004A22AB94942DC46795B03CCA
895E3D353CDBDDAEC2E14F6A8FC479D8BBBFA77FC1691A3A8AD1C752EE11D930
5C3A5E5676F66D0D536ADCB9DDBB4DB31D142A8D61510B4D4E5727C2EB592798
0C6028F53CB9F3D2EDDA0A8B4D736B433C3E33C41B9C91BF22B33E082EB46FA3
94F1348E12929BE2D3A858D76D52D3A9A087E9B214CE48F9D39F8543E8460EAD
8A2AB65753B2A23E4E195CA178B6C969AE928E5E6D38F9743F4569F0A97BD3AC
9B96E294F30D2EA4F511F5534B9E6F3639F907FAC07EB8D40EA9A27D6C11341F
8438717A1DB3F24E3ECF2E915B2AA7711F198CF0FA8DF1F3556DDD7BDD57D54D
CAB5D55B953DF7145403AE128467C929EC91F41A9EA4A2A7A1608E9DA1A127DC
EEF5B7698CD5921713E7B0F41D160B5B4A311A1081DFB674213E5C256ECD4EF5
A1A6D26EC56A9D4EA1474B7EDF1578654AF24949EA567A93827554EABB5328E5
F7832F139E791E7FFC2E8BF677A8A5BAD3FB98A7E064631C4397A63B9E6989D2
6AB352F5C5BEE5DD565DB3EE58566C59D47ACB4A61FA849FC46DB51FC9C9E4AF
3049D38693B6D3D6CFE2BA521EDDC346C7D72AB5F68B7DACB5D27811C01D1C83
05C7703CB1DFB1484EAD85CE28D084684234214A6C9DC4AFD891AB71A8CF14A2
B94F5D3DE4951E509511F1E3CD40640FBEB42B6DF0D718DD28FB07214D5A6F95
36764CC80ED234B4FCFAFAA9070ED630BFF766894779AE78719DF6D9431D3C26
BE2C1FB9C0FD75A9A86BBDC2DF248399D87A9525A26D5FB5EF3144E196B4F11F
41BA63F88CE2CEE4DAADD5A1ED658B6FD1A5BBECADD4AB52AA92BC06A34452F9
7E0EA32424151C64E0741AAF2CD608ABE8DF5950E237C3401924AE9AA9AC3048
D898079E7B2C4FFC7CB869DCDB88ED7DC5449F368F56909A7373A6D3C2E04971
4797B1F88024F45119EC7A6B3FF84EEB4317BDC6E01CD19C03F105E7F69534AF
F09DC8EDE4986DABDA2B07666DF7ED9DBCA3269B4E932DC9AB6C2CAF2E2FBF53
D7000000F21A5AAFB8D45CA412D4BB2E031F45BF0C2C81BC318C059BBAAEFB6A
C8A3BD5EBAEB3169B0591953AFAC2413E807727E8351D2CAC85BC721C058EAEB
20A188CD50F0D68EA52C37D7F106B4298EB912C3B56556149240932D7ECED1FA
84F5511FB6A166BE31BB44DCFAECABDB8FB49A3849651C65FE6761FAA885B5C4
F7155BB93151B6DECAA725AE6C29E6E2294D35FEB3AE1E5D6BC771AEAA3885A3
E9F9A8DA4D59A8EF4EC504200EF8DBEA55B741B178C3AB210F5CBBBB42A30575
535169C97D63E99C01ADF641717FDB900F9266A6A0D4F30CD454B59E41A0A5FB
8B999BC96CD5A9D60DD3B8DFDA682FA1355610CC34B2EB6A6C9195A503C8E48E
BA8ABA1A88DC2291FC439F2493AD64BAD248CA39A7F11A7E21818231DF0991E1
524EE65DF6642BFEF8DC4F7B459AD9444A7B11D084B4127949756064AFA76D4C
5B0CF2C62595F907904F9A45F5F5948DADAC9F88386CD006DEBE6AFAD4A27146
84234211A108D085C292950C28023EBA10923DE1DA4E33F894B86BB65D66B145
B2EC387356D460D2D47DE2D24FC0B504FC6B0460E0E067CB4F76DB8D8EC91327
634C9311BFF94FE0A1EA20ACAB716121ACFC5583C3570977D6C4DC11EAD53DE9
9357A73315C8A686C400C423CD8C2F19F98119E6C64EA36F7A829EEB1963200D
39CF11392B629289F4C725F91DBA284F1D562A60D7E8F7FC46708A8B6614A207
FA5475413F74923F4D31687AEE385F48EFE1DC7A1E6A99F6B36911CF15C983ED
7C27D472FB92B2D3AEB0E25D65C536B49CA5493823F5D3E101C30553EC7BA377
134E0AF8D7D5E79A342308D084684267B838BBB759EAC8B42DD8F11EB663ACBF
3D721AC0602BB94AC752B3E40E748FAC2928045EF3312253B0C75F97656DFB33
B95E1F3FB95300601BBB23967B11D4F64EEEAAF57EA5038D2ACEEDC0E5A6BCB6
13654E294B6A8CDF55383AF23C4F507CC63A6AC5D190DBE4F8C7FDB0EFDBC952
7ED42A6F50FEE8E3DD5DD875ECEFC9287AB0D5268D084EC70C1C3CEDE54F6EA0
DE975D198ACCFAC05B894C8F89B61B0A290909ED9E9927558EA6D41591D63A9A
9DC5AD6F6E64ABFB41E8DB64B6B65755C6247C9BEFC80ED8554F173B396C6D95
769556B49911215652E05C30A252D388C64A73D9241EDA9FD27789EE513E3A83
97331BF707BA4DF68FA6692C73C73D10E16C99CB7B11DBC92FBA6F559A6E780B
B650A7AE6BC1D6FAB61A80D28F967E35FF00E9D57BAEEA7022A61E64FE015DBE
C8E807FBC5691D9A3F13F92A5379B7DB864DDEBA2F397BD76487AA96855052A8
4AA3CB719995488974A5656A3F0612727A9ED9C6B6ED969BB5BA1885049F0C83
2EC80434E3EAACAA8A9A59DCEF1C6ED381E6A456F6D26D2EE1711B6DD9968EE6
78969C68512E78B6BD36125C8B1FC048010B9295101C2AEAB27A9275A92DC2B2
8ED924F343FBC24B0BC9DCE7CBB765984314B3B58D77C3B1C0FD56C2BA253E80
0D572A6D6ACF898DDEAE6EA6E4D4FDA663828F4992E44A7440A3C884A1452578
F35288273A4AAFAA754CC49E4360B9D356DEE6BBD7BDA4FEED84868E9B75F52B
C7C3D6D4B7BB17D1A6CFE614BA5C55D467F29C15B68ECD83E5CC7033E99D474E
F30D34D50067C3639D8EF819C7CD64D15A79BA8EEACA69768C60BBD33C93DF6E
6E2B16B5363D128769D3A0D3E2A421B623E501207FBFEBAA7A0F6F95D110D346
CE11D01705D830E86A3A588454EF2D0390C0C2EFB43895B5EE6A95D1407A03F1
AAD6C496987638F892FA5C40521695631EA08EE31F5D5C757ED0A92D5A529352
5C1B83521C591B4E492D241F979A5E8ACF254DC24A184ECCC649F30A3B22BD09
DBBA75EA2DDA7B9549CCA62A9E928F194861231E1A73D1293939C77CEA89ACF6
E37896A0CD4D046C1E60B8E3D72A7E1D036B6CCEA9972E908C67CBB0F259CDB0
BA2DDB310FD123519BA6C09B2D52B963A8F82CB8BC7372A0FCA9246703A649D3
5691F6DD1493B692F108635C7EDB79027B83C87A15A3268586DB13BF669DB24F
09FBF1FA2B9DB71B79B4BAD2D2B42C652A49C823D75D1CC7B64687B4E414AC41
07057D6BD2F88D084684234211A10975E337882BD362AD7B7D9B069B4F72B173
CF5416A65454131A284A398A944909C9F2C9C743A65D356782EB33CD413C2C19
C0E656857D53E99A3806E7BF2484DE3C476F74997EF5ADF134F3F5C615E243A4
DB4CA9D60BA0FC285A9212DE33D3F36AC3A6B2D006F04749861E6E79C1C77EA7
F0506FAA989CBA5DFB04FB6F0C2AEEE2F09D0EE1BA29AA8D5E6A990EAF259527
954D3C129F1063CBA295D348962963A1BE78711CB092D1E9D168EBBA2370D3D2
39C3E2680EFA73FB921DAB6D7302B0B612C5A56E36E951ED7AE385305D52DE7D
20E0B894279B901FAE31A87BF57496EA07CF17DAE43E7D53468EB4437ABBC54B
51F63727CF1BE3E69E9BCB87BDA8AFDA32686DDA34EA796E3ABD9E4C66421D65
60745730EA7AF7CF7D55747A82E1054094C85DBEE0F22BA16E5A3ECF5944EA7F
05ADDB620608F3CAD6CCA63D9A53D1B9C2FC2714DF30EC70719D5D4D771343BB
AE56959E148E676385D5AF4B1AB73866857FD5B7123D32C7BAFDC99C3B31C538
3916D03D47867A387D0697B523E922A32FAA8F8FB7AFAF44EDA122B9545CDB15
BE6F0FABB7D88F4EA56C75B4A90DA52B5F3A82402AC6398FAE354C9DCECBA85A
0800148A719541BE29576333EBB788AAD227294A8313C408545C7E52D0F2FEFE
3AEAD4D1D3D2CB4E59147C2F1CCF7F9FE4B9EBDA6D25C29EB049513F1C4EFB2D
CE387FF2FE6971D39AAB51A10AEAD9BE28EEFDA3A32ADA14D8D58A58529C6197
D650A6147A90950FCA4F5C11A59BC698A7BB4BE3F116BBAE3AA7ED33AFEB74ED
3FBA160923E809C11E87B287EEE6F05CFBC57022B770F84C351D05B8B119CF86
C249C9C67A927CCEA46D36882CF0F850EE4F32799509A935355EA5A813D46001
B068E4141752A9713D3C2A4D816270E753BD6A2DA8B0C3B3AA2F848F8948693D
87FB27554EAC0EABBBB69DBCF0D03E6BA43D994429B4FF008C7F89CE3F4D92EF
6C572D5E219173DCF7B70916EC5A4B3459359A54DA7BCA6A5D41D0AFC36799B2
32B56493D33F4D4CCF1CD6531C34F5AE2EE20D20F203A9DFA04D2C732AF89CF8
863191E6A79FC3EED5D9E7AE4BAEEEB3ECCB8AD2B9A9ACB74CA8D1AAB2BC7447
6DC3CE16DA9494AC6797042BD35A1ABEA2B8471C33C8D9233B87346338DB759E
D6C8789CF634B5DC8829DD2028149EC7A690D4C2D4BEFD5913B6FF00766E3B7E
634A4A0CD724C6511D1C65D515A543F7C7E9A45AC88C13B987BFE2B99F52DBDF
6DB9CB0BC6C4923D0EEAD1E076E3854BBF6E0A1CB5A50BACD11D43055E6B6CF3
728FB8CFEDAD699C050D530F589FF814E5ECA2AD90DEBC17737E31F22AFAD70D
9E6BB59557BBBBBF646C143F794BA4B92EA75F90A78468C52971F525201716A3
D80000D5CFECCBD9ADF3DB1548A413F874D4AD0D2F7648682490D68EA49C9FBC
A55BF5F6934CB3C4E0CC921CE075F32A23B37C5C52774EF2167CDB5DDA43B2B9
8C2743FE2A5640CF22FA0E55100E3CB4EBED4FFD9BEAB40595D7CA2ABF1E38F1
C60B785C0138E21B9C8CF3515A7F5CB2F15429268F809E47391E8982D73127F5
E6E1BF7D1E1BC97770F771CA2B5C222A940716AF88C75A12A718FAF292549FA1
23CB5FA1BECFA392E7A06DB78E6784C6EF5638807E980A97BBBC43779E9BCF23
E6329A37DF622B4A7E43A869B47552D67007EBA95A8A886923334EE0D68E649C
01F358991BA5706306495E2FED1D03FF006CC3FF00EB27FF00EEA23FC4F65FFF
00B71FFEB6FEAB67F67D5FFF00C6EFA15DF02A94DAA25D55367B12832BF0DC2D
3815C8AC03838EC7047EFA998668EA626CD0B8398EDC11B823C8AD57B1D1B8B1
C3042F56B22F28D0854B71794DA14ED94AA48AE6D6AAFF00444799719A434A5A
5E2B2B09E76D480540804F6F2CEA734F3E4657344737859CFC5D3E6B52B834C2
789BC5E491DB4B77EF1DBFB8E15A5B67C145B941B86547726C34549879E9AE32
D8CA9C0A7707031DFA69FAA2DB0564467ABAF73980E0E30064F4D942B2A2489D
C1140014E4EC76E6D7B888E192A5735DF0E1B1549ACD4A0C9662B650D254DF32
5200249F4F3D25DC68A3B2DE1914049682D233E6B6AA49B95AA66BC6EE6B87DC
520EA494A8A4F91C6AE25C86E1838590B7AE0ABDAB5A8970D0662E2CF82E0759
753DD2A1FE23D46B0D453C75513A19465A79ADAA1AD9EDD50DA9A7761ED39055
D175F191BA5745B0EDB818A6D39525A2CC897150A0EAD2460E32709CFD34B54B
A3E829A71364BB1B807927DB87B4EBB57521A60D6B09182E19CFCBB2A1BBF53A
6B55B9394684298ED1DBF12E6BF6974A9B76B76DB6B742BDB94E142924764A14
3B28F967A6A3AED50EA5A47C8D8FC4F2FD7C94EE9BA3657DCA38649FC119FB5C
BE43CCF45B368349663418F193579AF869A4203AB91CCA73000E627CC9EF9D52
0F94B9C5DC207C9758454ED646D687938037CF3F3486F16B65D26D8BF553A1DE
EBAC4AA865C7E1C874BAFC3F4055DB97D0743AB5B4A56C95549C0E8B8437911B
03FD573B7B45B5C34371F15951E239FB96939737E7DBB054569A95768D084684
2BA6D5E162FAAF59326FFA9CB874DA5B701C9EC24ABC475F425054300744E71E
674B355AA2960AA148C05CEC807A009FEDDECFABEAE81D7199C18CE12E1D4918
CFC952C3A8CE999201D93FBC3E3D6FC2E165B9373325DA3A21CF5D41B082A2A6
3997E20C0EA7E1CEAA1D442475EDC22FB596E3D76C2E9FD01C2DD3909772F8B3
F52900B9E1F0351A53B32CFBF775694DB8B2A69B8D0C14233D7092BE5381F7D3
F40ED40E01B3C71BBD4ADE9050E72C738270FF008797FC12BD6A5D72F6D64DD1
5192B9ED26A553B81094BD20F27C011CA48E548CF9E73A49D63EFA268DB561A0
6360DE43752F6BF08B098B27B929BAD26A94540F161C3CA7786DA4576DD6509B
A28EDA8C7F2F6B6BB9649F5F349F5FBEA2AE743EF4CE367DA1F7F924CD63A685
F29FC5847EF59CBCC76FD16BB29951AF58D73353E387A05569323AA160A56DAD
270A4A87EE08D26D443E346F85FB64107E630551B47555365AE65447F0C91B81
DFB83C8A73EC0BE2977F5BCC56E9EB487080892CE7E265CF307FDDAE3FD4DA7A
A34DD7BA9671B7369E8E1DFF0055DD9A4354D26ADB6B2BA9CFC5C9CDEAD7751F
A25038BF8B3AEFE2028366C770853D1614260770953EE904FF0051FB6BBE7FD9
5A9E2A0D073D763774AF27CF85A0055C7B4173A6BC361ECD1F795B29A16CAEDE
ED3ED4FF00672D7B629CC1A7C10152BD9D05F75D007338A591CC544E4F7D457B
51B8D45CB4ED7C93B89CB1DB74FA2DDD3F0320AD85AC1C8855C8D7E7D2B8D2B3
4AA848A6FF00119B71C8CB520BD263C75E0E3285C6208D7E92FB126093D91C40
F4321FA3D517A9896EA477CBF05B21DC1FFA1D51FF00B31FF986913DA7FF00CA
75BFE9FCC29CD3FF00F78C5EBF92A175C2D92AD8549ECEEEF5D768F1D354DBA8
527C5A0DD9E1352E2AC9E56DD6E28525D47A2BA60FA83AFD2BF6736D86A3D96D
BAA88F8D8C383E45E76545DEA7733504F1F427F20B611AC6B22E7421477706FC
B6F6CACEAA5F576CB31A954860BF21694F32B1D82523CC924003EBAD9A3A496B
A76D3C232E76C1789246C4C2F7F2094B5FF122E1B25D61BAD546C2B884E61B53
0CCD7696D29D4B47B80AE6E600FA69C4689BA359C0D91B83D325457ED7A62724
1FA263F6AB7136DF7536B95766D82596E8B25B7D0596E3060B4E8079D2B401D1
5FE3A58AEA3AAB7D678355F6863AE7D375B9E2C73D339D1F2C15ADA61D8D16BC
87E5B5E2C766605B88FE6405E48FD46AEF21CF870D38247E4B8FDAE64757C520
CB43B7F4CA69CF085676E5386F0DB6DC1618A2D470FA23783E298E55D548C823
183E4474D227F8B6A6DA3DDAB6125EDDB39C67CD5BEEF671417C77BF5AEA4089
FBE319C771CD75DE7C0FC6A1D9B50AADBD76CBA95660B2A9098CB612943C1232
5200EA0E338D7DA3D6CE9EA5B1CD186B09C673C978B9FB2B8E9A85F2D34C5D2B
467181838E894E52549514A81041C107B83AB015304169C15C685F14976E6059
D52BC29D0EFCAAC8A7519C707B43ECA39943D01FE507CCF5C6B4AE1254C74CE7
523439FD0152D6486867AE64771796444EE47F7B0F35B1EA5D036BD9A6446A9F
2E1AE2A186D2C2BDE04F33612394E79BAF4C6A98967AE748E2F073939DBAFD17
51D3D1DA5B13446E1C3818F8BA636EA934E2D2DFDAEA25ECA365D51F76B0FAD4
BAA454AFC465951F459390A3E69EB8FA6AC9D29515D3D2FF00BD37E01F64F227
E5DBCD517ED168ED1495FF00EE0F2653F6C7303E7DFC950FA6B55D2B2AC0E1FE
FF00DC3A5397053114E874969254B9B36621B4271EA01247EA06A16BEFF496F9
3C19325FD802536D9B465CAF50FBCC7C2D8FF99C4008AAF0E5BCB4B989889B26
64F439FE6A441297D9701EC42D2718FBEBE45A8ADB2B788CA0791D8FD1151A1E
FB4F270080B81E45BB83F309D5DB6B2AE3B5787A168DCE7FE51452A5256D7373
784169514B79F3C038D56771AD86AAF1EF107D9E21F3C63757D592D95341A6C5
1D5FDB0C76DDB20EDF25AE15A4A16A41EE9246AE61B8CAE5B9070B884FBF0AEE
49AD70E0BA653A432D4B6D53E2B4B7521486D67252540F420150241D54BAADA2
2BC71B86C784AE95F66D2F8DA798D1CC170FBD27576F0737AD5A6D3EECDC9E25
6C73EF0A90A742770A79854B27FCC212801015FDDC7DF4D74FA969E26BA1A4A4
7EC327A1C77279A9C92DF23C87C920E6999E0D0C9B2EF5BF765EB1B90BB9EA36
E08AE169BA6A22468C92083E0F29F8C1C8C9C69575262AA086BA38B81AFCF5C9
3EAA468331B9D0B9D923CB09AFD28A93468425D389AE15A81BA50A4DE36D7834
BB9E334A716BC61A9A948CF2B8076574E8AFDF50579A589B03EACEDC0093E600
CA4BD4BA2E2D407C5A6C367FB9DE47F548BDBB705E5B3575ABC58AEC67507925
437B210FA3FC0FD1435575CEDB6AD716D003839A776B87369FEF982AB8B35DEF
7ECDAEE78D858E1B3D8EE4E1FDF221745C77353EFEE2EB6F6E2A6B2E88D2A752
5B297138E5712E1E647D71ABD3D86DB1FA7F4154DB27703231F29D8FF0903071
E6AD8AFD4F45AB2E11D7519E61B969E60F507F55B5EBD7FE89D53FF9756923DA
0FFCB15BFF004CA76B37FF009F17AA5F476D7042B752A6001FC44ED2C79CD847
FF00C0AD7E927B0B39F64ACF597FFDD519AAC7FF00721FFCBF82D93EE07FD0EA
8FFD98FF00CC348BED40E349D6FF00A47E214DD83FEF18BD7F25426B8555B095
7B0D5CDFC4829A73DA611FF82D7E9EFB32FF00C24A1FFA7FFBCAA12FBFF324BE
BF905B451DB514B6D73A10AA1E2BE9F60D5F622E6A46E4DDADDB74798CA5BF78
AD2545A782829BC207559E603E11D4F5D4CD81F531DC237D2B38DC0F2F2EAB56
B431D0384870126368BF48B8B681761DB1C55D8F26ED72B6D488B52AA46F6652
2025BE5F67FC66F392AC1C69DEA1AF82B7DE66A3788F8704039F8B3CF62A2184
3E2E064A38B3CCF64DB6C26D02B87CD86AA522A37147ACCE9289B599D3A3A795
85BAE209FC31FCB803AF9E942E771FDB37263DADE11F0B40EB807AADB7C7EE14
12B9C7386B8E7E4B5F8EAFC4716E1FCCA2AFDF573018185C7EF77138B9367C04
87532EEE90B79623A198E3055F08565449C76CE06ABFD7782D8401BE4ABA3D91
710352E27E1C37F35334EEFF000D9B77734FB922DDB59ABD624A9C4BE52F3F21
0798F5484AB08001ED8EDA8CFD917AB8C0D85D1B5AC18C721FD54F9D4BA5ECD5
4FA96CCE7C8739DDCEF96FB252F7765D9555BD66D7AC07DCF74D5146508EEB5E
1AE338A3F1A08F4CF518F23AB06D2CAA8A95B0D58F8DBB679E4742A96D4D25BE
A2BDD536D3FBB7EF823041EA3F450BD49A5F52ADB1996440BD29F2370E992275
14383C669856083E448EEA483DC0EFAD0B932AA4A67368DC03FA654CD825B7C3
5EC75CD85D167703FBDC770B64F4C636EDDA6C4769D4EA6888B61B5300450006
CA472F423A74C6A9595D581EE0F71CE4E77EABAA6065B5D134C4D6F0E0636E98
DBA25238D07F6C58B8DBA650ADF2D5D1CC1DA84C6925B68A48E8950C616A3EA3
B6AC2D1ADAE7405F2BF31741CCFF0040A96F69EFB4B2A4454F162A39B9C3618F
3EE7CD2CBA775532C9522E4AF5051259A455A4C56A634A62434859E4750A1829
527B11F7D61969A29F06468246E3C96E52DC2AA8839B03C80E1823A107B8566E
CFF1337DED335EEB414D668C4E44296B3F85FF0066BEE9FB76D41DDF4D525D4F
89F65FDC75F509B74DEBCB8E9F1E09FDE45FCA7A7A1E89A3D85E20676F9D52E3
A54EA2C7A6B3122A1519A42CAD6A0ACA5454A3DFCBB0D225F6C0DB247148D717
12772ADDD25AC1FAAE59E27C6181A060733BEC72910B9E02E95725569AB4F2AA
2CD79A23D395646AD6A67896063C7503F05CED7184D3D5CB11E8E23EF4DE7023
5C6A6DAD735A4FAB258928929413DD0E23955FD53AAEF5CC0593C5503A8C7D15
DBEC92B03E8E7A43CDAE07E447F44A36EA6C8D89B695CABDA7B97C4F334EA545
ACC8A944B668D15E99263A9C595254539086DCE523A9D31DBEEB515D1B66A4A4
CB8B402F71001C7E213BD45347138B64970339C056170335AB0E8DBE28676CAC
7DC1A8C3ACC37A1CFB8EB0BCB2903E3412DA13CA9CA938CA9648CEA3B55C5532
5066AE4602D2086379F6E67F459ED8E8DB2FEE9AE39EA56C8F55826046842F2D
5595C8A64B61B195B8CAD291F5293AD0BA52BEB6866A68F9BDAE68CF2C9042CD
4F208A66C8EE4082B5EFB91BCFC36D5DF996ADF55792D4FA7BAB8EEA574A9087
E33A938201E5C8EBFA6A98D3DFECF9ED1ACCF1576D9A2E176F8E3CB5C3CC63FA
ADED4B75D2BA9A134B7389C48E4718737D0FF612EAC5D36CC6DCDA745DADAACA
ACC88F3197E9121C8252B5C807294842864A8118EDD757543A235658E83DFEA0
35AF00F188DD9DBE78C83DB7C2E76B869EA8B2D77BC589E5ED1CB6C3BD08E453
CB64F19B47BA28336CCDD5A7AADCB8BC12C8796DA931DE5FF781EADA8FA1E9F5
D246ABAC7DCB4FD5D270FEF1CC200EE7F5561E90D7F4CEAE8A2BB0F09E08C93B
37FA2CB30FB325943F1DE43ADAC652B42829247D08D70F4B13E1796480823A1D
8AE9E8A68E76092270734F22370972AB5AD54A6F1E5B75732E239EEFAB498E1B
7C24F2788DA1695209EC0F63FAEBBFFF00D9EB50D1D6FB38A8B4878F1A073F2D
CEFC2E20838EDCC2A7758D14B15F595047C2F0307CC27D3756B7162DBE692979
2644B524720392120E493AAF3DB4EA2A6A1B13ADAD7832CC40C03B8683924FE0
A7B4B51492D5FBC11F0B7AF9AA6F5C7EAC84A96DDAF9FF0088FC03E95058FF00
C1EBF4FBD998C7B24A1FFA7FFBCAA0EFBFF324BEBF905B4A1DB512B7173A1095
1E3E98B4EEFB56DDDBA95B8F43B6AE672A09ABD258AC1C4499E165250E288294
8F8FA73742469BB4919A9E67D4B622F8F1C2E2DE633DBFA28CB90648C1197007
98CF54A0D6F865DFB9B1BFCAF873B52E244A4F2B155B72525A193D97965DE4C7
9F54E34E915F2DCD3F0D53D98E8E19F96E33F7A89751CE79C60F984ED3B48B87
64782B8F6B5DB3BC6AD42A2229EF2BC4E7E575D563C30AF3E50AC7E9A4AA5745
76D43E2C230C2ECFC82C1AAAA0DB34ECC5E77E1E1F99D922DAB6D72BA71F83F8
C9B7F672F4BBE4FC08716E90B3D3E16583FEF3AADF573BDE2E505337CBEF2AF5
F66D18A3B1D556BB91CFFF00E5A93B7DD2F3EE3C7FD22CAFF739D58ED1C20054
74AEE3797772BE35F56346842B1B60ABF4FB7771E9D2EA7650B9597141AF674B
25D71A24F47109EC48FAEA1AFD4EFA8A273592F867BE700F914D3A3AB22A2BA4
6F969FC6076C63247981DC2D98B0A42D86D686CA12A40212A4E0A463B11E5AA4
5D9070BAB5B82D040C259F8D6AB259B66351D8B0D53DE93F1AEB2A8BCC988907
E54AC750A3F5E98D3BE8B878A732197007F0E79FCBB2AA7DA8D470523606D3F1
13FC78C86F903DCA4835682E7F59FB72C0BD6EE752D5B56B54AA0547014CC751
4FFB5D87EFAD3A9AFA5A4199E40DF52A5286C970B91E1A585CEF41B7D55B940E
0EB70A4B099F7955A8F6BC4C7328CC9014E01F60703F7D2FCFABE8DA78299AE9
0F904ED47ECCAE4F1E2573DB0B7CCEFF00DFCD5E3B0B0762B682B4AB528DB891
2B9735756964BA9191F0F50DA4A72903393D4F53A56BEBEEB778BDE2484B2366
FF00D5583A4E1D3FA726F73A7A9124F26D9FC8636FBD2CBC4D5AEBB577A2E18D
E1F2B335E1399E9D0A5C193FD73A77D3553EF56C8CF50307E4AA6D7B40682FB3
0C6CE3C43E7FD5673841BD5169EEFC48329DE48B5E65501793D3C43F1367FDA1
8FD75ADAB688D5DB9CF68DD9BFEAB7FD9B5D05BEF4D89C70D9070FCF98FBD4E3
8D38FB7FB5975D26F0B7B6628974EE15F320C7625D5FE38AC165B039CA14420A
B18EF8ED9274AFA64D4D7C4E8259CB218C6486F3393F55D015FE1C2E0F6B017B
BBAA0F7CF7B27A6EAA057F6EB78EA512E58F4D8491685B4D176047A9A701D473
3786D4857A00B3938D30DA6D6D30BE3AA8016127E37ECE2DE9CF7CFD16954D4F
C4D746FF008BB0E595B39B3EA154AB5A746AA572198951970187A5B07A169E52
015A7F45123555D43191CAE6C6720138F44C4C25CD04F3598D615E91A10A84DE
0E09B6377AEEE5DEF75D2EA11AAAF3496A4394F95E007F97B29600EAAC74CE98
ADBA9EE16B87C08482DF319C7A2D1A8B7C152EE378DD602CBFE1EFB03625D949
BCA869B83DE14596DCC8DE3544AD1E220E4730C751AD8AAD6372AB85D049C387
0C1D9638AD7044F0F6E723CD5BFB89B25B67BA1196DDDD6B449120A4844B427C
37D07D42D383FBE7495534515534870DFBAC771B15BEEA3157103E7C8FD528F2
F68AF0DB7B827D276E6FBE6305CC3B4AA97C68E53D527D4023B1C6B96F57D441
4556EA1D5B4183FC3347B710E8477F319DBB292B5690BB5A1BEF1A4EBFE1EB14
BB8F4F2F5C2C9C5DC4AE525D6937FD8F320BAC2C2913E123DA984A87E6053952
3EFA4A6E9F85CE33E9CAF049FE12EF0DFE9D014D116B0AEA2C45A96DEE663F8D
83C467AED921782EFDFDB699B86DAB568155153AA5C93DA8E5C6F2B1199E6F8D
4B27B2BA6027BF5D4F583D985E2F14171BF5E016C5491B9DF11F89EFC7C206F9
237C93CBA29576B3B54F2434B6C95AF74840DBF8475C8E87C95A47A752081AA7
40CF24ED9094BDB23CDFC47611FF00E26EFF00FA9AFD3EF669FF0084943FF4FF
00F79541DECE7524BFEAFC96D4076D44ADD412120924003A9274216A9F8D1DDA
37F6EBD6A965F63D9E92B3023D22E1A40682C37D0BD164F4500B39382467A6AD
CD316FF74A364983976E5CC777E8E1E496AE13F8B216F6E847E0560783D8BBDF
55DC7A2C3DA6DC54C0A5AE6B6AAC531BA90518D182B2E1319DF9D3818E6467B8
D6CEA4750474AF359165D8F85D8E67A6E3F358EDE267483C276DD467F24E3F1D
B7AA23D1A8561477B2ECA74CF92907F223E1467EE493FA696743511749255B86
C361EA79A46F6B37411D3C36F69DDC788FA0D87DE934FB6AC9545019384FE5AD
FD83D9DE1B6954CDCC5A9983578A5329942145C796F82A290075CF291F6C6AA4
AAF7ABBDE9EFA1DDCD3B1E830BA4E83F67E9BD2F145753863C6E3A92EDF1B792
A70ECA70E1B823C4DB8DDAF744A73E5875223A1F4F8F94FF0053A64FDB57AB7E
D5B4FC43BB7FA65239D2BA5AF3BDB2B381C7F85DFD705476B5C1AEEDC2791EE3
F75D6E2B8709911A584803D4856B721D616F78FDEE587B10A2AABD98DE2270F7
72D91A7A83FAAA9AF9B32ADB7F744DB4AB9E1FB6C05252E96CE5049485743E63
AF7D3050D6475F036A22FB2525DDED7359AADF4551F69BCF1E8AECE0E9DDC2A5
DE065D06D0554A853886674A5B6940600FCC870F98F348EFA59D5E28E5A6E19A
4E178DC0EFEA3F34FBECD1D73A7ADE3A7838E176CE38C63CC13DBB754F8EAA85
D10ABBDF81B80F6DE4F81B73456EA1529892CB9CCA4F334D11F1290957452BC8
6A66C5EE6DAC6BEB5DC2D1BFA9F3F24B3AB7F693AD8F8ED71873DDB74D875201
E656B5E644AC5B5595C59F19D855182F7C6DBA9C29B701F30757531F1D4C7C4C
39691F72E579239E82A0B641C2F69E47A157E43E32AEE85B68AB6A3D36333710
5782DD4D969284258C7CDC83A789E5DB1E7A527E8EA77D6F8EE7131FF2F9FAF6
564C7ED3AAE2B57BB35804FC83800063BE3BAA2AB9765D172BEA93705C150A83
8A392644852C7EC4E34D5052414C3861606FA055DD5DD2B6BDDC5532B9C7CC95
D140AC4AB7AB902BB09652FC092DC96C8F54A81FF76BD5442DA889D13B93810B
1D0D53E8AA5952CE6D20FD134BC60D063DE365DA7BCB45407197A3A1892A48EC
87073209FB2B987EBA44D2139A3A99ADB2730723E5CD5BFED2A8DB73B7D35EE0
DC1001F43B8FBF64A9D3A7CAA54F8D5384E16E444750F34B1DC292720FEE34FD
246D95858EE47654DD3CEFA695B346705A411F25B04AAD95B5FC5FECCD19EBE2
9EB7D8294C8F123BA5B7E1CA48E5739543A8F3C8F3046A9B3355E98B8BDB01C1
E5BF223A2EB2B456C1A8ED9154FF0030DFC88E6921BE6FEDA0B276C6A549E1A2
CA916CD6C5D4DDB2BB867B7E2CE92CF2ABC471975592D9E6001E5C1008ED9D3C
525256D5D5B5F76938DBC1C7C23903D010B1CB2C51445B4CDC1CE32AFBE0297B
AB44BCAFCB0EBEEDCF50B4E8FE1A599B5E410E0A8838792D124E50A1956013D0
03DCE97B567BA4B04351186891DCC37F97A67CD6F5BBC56BDF1BB25A3A9EE9D2
D23A964684234211A108D085497129C38A37B692C552D7B8E45AF79D292453EA
F196A473A3B965EE5EAA413FB1EDADEA59689CD34D74A764F03B9B1ED07E633C
8AC32B25FB703CB1E391070910BD361FF883535C768727FB435889D501FA6541
B5B6EA7D720A543F5035396DD1FECBA19055436F858FE7F130EC7D0E42D0A8B8
5FDCDF0DD3388F22BD5B27C00711B5EB8A3552F39CED934E69E0F3B21C949766
2BAE4F868493851FE6511A9DD4172D33554CEA734EC9B2318E1C371D8F2DBC94
2C36032CC279470B86F91B3BEA37538DD3E04789755CB2E2587B87EFDB75DC38
C3950ABB916423FB8B4A7E1511FCC3BFA6962CF4BA42898D78A364720ED1B1E3
E5C433F7ADEA8A1BA07620AA796F62E27F15DFC36F03BBF3B69BF16DEE4DE7EE
8720535E75C96E22A85F78F334A48C6520ABA91E7A62B9EA4B7CD6C7D0530C0D
B0037840DF3C81C05F28ADF591D4096A083E7D56C4B55EA62517DC5A00BE2D1A
D5870AEA72893AB105C8E995154932184A860AD293FB67EBADAA39BDD6665439
9C41A7383C8AC7237C469667195AC7ABDE7796D05DD70ECD6EAD0297BD5675A2
A6DA9AEBEC132E034B0082DBE7F11052080412520F98D5AB1D2D3DC618EBA8DC
69E59396FB13E9C92E3A57C0F74328F11A3EA1365C21EC96C15150E711FB56CD
720D3EB74E718661D607FCC129565D2851EA41E5C672460743A4FD4574B94C7F
65D6104B4F36F5ED9525490D342D3551EC31D7A25D379EF899BB1BA353ADC269
D90D3AF7B2D3D9424A94594744E00F5EA7F5D58566A16DAA81913B620649F32B
99354DD24D45789268812338681D872FAF3516B5A1487EE680D7B9E5543C094D
B8FC561A52DC5212A05630067B03ADFAA786C0E3C41B91B13CBC9445B617BAB1
8DF0CBB046401BE01DD36FC4D59BB8DBBD5BB5ADFB2AD59ABA1C78A890A92B48
6DA42DDC0F8B2460A123A8C6ABDD355947698A69AA641C64E31CCEDFA95756BA
B5DD351CF4D4B4311F080049E4013FA04B26EF6DBCDDA9BEA65A529C53A86528
763BE463C56D43215FBE47E9A77B45C5B75A56D4376CF31D8AA9352D8DFA7AE0
EA327206083DC15E0B6B72EFFB3DC4B96DDDD5383CBF91121451FEC9C8FE9ACB
536DA4AC189E307E4B5E86FF0073B69CD2CEE6FCF6FA2EBBE2FBB8770EAE9AFD
D0F32FD40329656FB6D06CBA13D8A80E84E3A675EA8A861B7C7E0C030DCE71D9
78BB5E2A6F730A8ABC17E3190319C774E0707962EE9DA74A5542B132126D6AB3
424C78BE3788E0591D1C4F2F4483E609D577ABEBA82ADFC1183E2B7627181E8A
ECF66B69BBDBA1324EE1EEEF19033939EE31B0F34CD691D5AEBC35C62AB268F3
63D0E5B516A0EB2B4467DD41521B708E8A2077C6B2C0E8DB234CA32DCEE3C96B
D5B667C0F6D3901E41C13C81EEB5A7BD7B6974EDADD8A8977D661D4A7D479A59
79878AD6A055F32C1194927D757659AE505CA9F8A9DA5AD6ED823F05CABAA6C7
5963ACE0AD903DEFF8B20E4FA9ECABED4BA594684234213CDC3A5B556DC3E1C2
759378539D6A9F24BCC535F77BADA3F1256907AE12BEC7556EA1A98EDF7A6D55
33B2E182E1E7D7EA1743E8BA29AF1A5DD435EDC30E4349EA3A1F91E492DB9ADC
A9DA75FA85B957614D4BA73EB61D0463A83DFEC460FEBAB2E9AA19570B668CEC
E195435C2DF35B6A64A59861CC382AF9E0EF789BB36E772C3AECAE4A4D7563D9
D6B3F0B32BB0FB0576FBE34A7ABECE6B20F7B887C6CE7E63FA2B1BD9A6A516EA
A36DA87623939793BFAAB764F019B27377657BA92C54DC42A67BCC513C7C404C
B2798BA138CF550C94E719D28B75657B28FDCC639638B1F163B655E86DD0997C
53EB8E9950DE2DB8A2B8E8F018B03611D88E4CAACD729751B91A7D1ECF497903
E3694AECDB813D79D5D0007193ADCD3D638A571A8B8E70D190CC6EE1D0F9858E
BAADED0190733B67B295F067C48D4B77AD2A9522F59509CA85B1359A3B7586DD
219AC28A0F2AD1CE012B3CA490075C83AD4D4B6565B666BA00785E0BB87AB7C8
F92C941566A1843F98DB3DD331A575208D084684234211A108D084684234211A
10A35716E2D956C57A9569D6EE8A740AD578AD14C88FBA12B90B48CF41FF00FB
3D86B6A1A39E78DD346C25ADE67B2C6E918C21A4EE792D4FDFEF6EBDB3BE75B9
579DD75AB5B7359AA3B2E91519328A604D60ABF0D9493F0A1246024F541CF2AB
1DF56FD20A39EDEC10303E0C00E007C40F53E7E7D7B25893C56CE78C90FCEC7A
1F2575ED7D9FB5FC68DD53A1EE55B95EB2774690D24DC0FD2399A8D576061254
E0C14A54AE80FA8EA3235035D5357A66269A47B64A777D9E2DCB4F97A2DD8638
ABDC7C505AF1CF1D55EFC516E0D1369B6E29FB2F6221B86E488888A5A64E3D96
0A4631D3CD58C7EE751BA56DB25CAADD71A9DC039F577F4499ED1F51B6D5442D
94C7124837F26FF554C70CB4BACD3E55777069555B6631A2C17036DD58A54A53
A4653C809051DB1CDFA699F52CB1C8D8E8E46BCF19FE1EDD73DFD157BA0A9E78
5D35CE27C63C369C07E339E98EDEAAE7E1EA9ECD9765DD3C445F5163469759F1
64B486DB084A59049F8079788BEDFA696750486B2A62B3529243703E7E7E813D
E8E85B6CA1A8D4B7001AE9327618DBCBFD45756CAEED5DDBFDEF6B6AA179C9B7
EA912722A315705B402E42270B8E411D71D3AF7EBAF579B4D3D878276461ED23
84E7A3BA15E74BEA3ABD5FE2D349318A46B83870E376756FF554E717F79C5BA7
765DA6C1295B36FC64D3CBBDCADC0799793E78271FA699348D1BA96DE1EEE6F3
9F974487ED2AE6CAFBC1863E510E1CF9F32A8FD342AF5642DFA6315AADC1A4C9
A8B301B96FA19549781286B98E39958EB8D629E430C4E91ADE2206703AADAA2A
76D5543207BC30388193C867A95B27D8FDB29DB5367A2DB9375BB5B64AFC664A
9B094321432528EA4F293D7AEA94BDDCDB75A9F1C47C0791F3F55D51A56C5269
FA114AE98C8398DB61E9E4AC4D43A66468424E78BAD9AB6E8ACCDDD09B794E5D
4EA3212DB309F4A561C57F2A08C14A529D591A4AF134E5B40D8870B46E47E7EA
A8FF0068FA669695AFBBC93BBC479C069C1CF90EC004A56AC054BA3421593B27
44DA6AADCD19CDCFBA5CA7C569C0A1154C1F09FC764A9D07E11EBD3F5D425EA7
B845011431F113D73B8F926ED294965A8AA6BAED37080796363EA7A04F84645C
95DBA28726CCAFD222D8B4C639D6982B4B8B98AE5E54B440E8842475E9D7554B
8C3041236A58E33B8F5DB1E7E64AE8860A9AAAA89F4523452B07F0EE5DB6C3B0
0153DBE9C4A6DBDB17049B6E9363522EA96728A94879290D85631C9CC012A501
DCF9698EC7A72B6AA11349298C7F08EBEBE492355EB8B5DBEA5D4B140D99DFC4
4E31E99C6E527970D429332BF26A76DD39CA5C475DF1998C5DE731CF7E54ABCC
03DBCF18D58F4F1C8C843267711E44F7547574F04B54E9A8DA58D27206797A1F
C13C3C31EFCC6DCFB6CD8B744DF0AE2851CB21C2AC2A6338C73A4FF381DFF7D5
5BA9AC26D937BD403F764FD0F6F45D07A0B57B2F94E28AA9DFBF60FF00D43BFA
F74AD56B81DDDCB727D72D5AB5DF46A1ED5AE7BB5AAC5C2246254A8E9254943A
83D4A9009007CB9249CE9862D5345335933232EA80035ADC6C0F71EA99DD6E95
84B0B8066724F55435F1BB56EBB79DB347B3691368FB6B68C9F6AA343654A6DF
AA3ADABAC97163A971D5A40E6FCA9381A61A5B74BEEF23E77074F20C389E4D07
A0F20168C950DF11A1830C1CBCD3E5B33C5D54E1546D9DB6DF96511EF4B9D0EC
F69AA7C72514D88AF89844B19F81651939F2480558CEABCB969E6B9B2555BB78
9981927ED1EBC3DC67FA29C82B482D8E7FB477F4F54D352AAF4BAE4066A946A8
C69D0E4279DA7E3BA1C6D69F50A1D0E951F1BA27163C608EEA4410E190BD7AF0
BEA34211A108D0846842F95AD2DA4AD6A094A464927000D1CD097FDDFE28D34A
4552CFD89A28BF6FA82FA223F4F88ACA29EA73203AEFF32411838EC48C91A62B
758FC42D9AE0EF0A23B827AE3A05A53D5F0E5B08E270E9D92D701AFF008F4587
329570B8D5BBBF3B74E39E0BC94FB399484AC9092075480A18E9F2A803D8E9A1
E7FC29521F17C7492FCF1FDFDE1470FF008947876D2B579ED5DCFA771450A99C
326FDED755E7DF94B94F539EB820368F169A96D24092E1FF005800B1F2ABBF9E
BD54503EC2E75DADD3010B8021A7F8B3D3F444730AD1EED3B7E21D7B79A66E8B
4AB33832D996A2CDAB2EB9590D782895240126A0E8CF2379EE1B467A024848D2
D35B51AAAE0781BC2DE671C9A3AFCCFDEB5EF779A5D2B6F33CC72EE4D1D5C7F4
48FDDD75D66F7B8A75CF5F94A7E6CF74B8B513D123C923D001D00D5B1494B151
42D82118685CB973B94F76AA7D5D49CB9C7FB1F2563F0D566D877E5E126DEBC6
3489325518BF4E8C993E0B529C4752D2CE33D4751F63A86D495957434C26A620
0CE09C64807A84D7A12DB6EBB56BA9AB412EC65A3380E23A14C86E66D26F6EE8
5B09B4D122D9B66830C24C6A5C65B8EA9CE4184256E60003EC31A4BB65DAD96C
9FDE30F9243CDC7039F3C0569DF74F5F6FD49EE41D1C310E4D1939C7204A4E20
54EF4DA0BD9D7604876955CA43CB61CC0CE0F62920F4524EAC8923A6BBD280E1
C4C70CAA2E19EBF4CDC098CF04AC241FEFA82B0556A949ACD4E5D5E6A819135E
5BEE91D8AD4727FA9D6D4513618C46CE406146D5543EAE674F2737124FCD7935
916056D70DB63EDEEE1DEE6D9BEA44B6D6F35CF052CBA1B4BAE27A9428F7CE3B
63D34BFA8EBAB2DF4BE3D201B73CF4F34E9A1ED36CBD5C3DD2E248247C383804
8E856C528D498942A544A340F13D9A134965AF11656A0948C0CA8F53AA6E695D
3C8657F33BAE9DA6A765242D823FB2D1819DF60BDBAC6B3A342142B742C2DBEB
C688E4DBFA8889F1E96CB8FA55CCA0B6C019572F29EE71A93B657D651CBC148F
C17101415FAD16DB9405F728F89AC04F5C8EF8C2D655C2221AD4D729D4E720C3
5BEB31D87324B6DE7E1049EA4E31ABBE0E2F09A1E7271B9F35C9D5BC1E3BCC4C
2D6E4E01E83A2C76B32D546842CB516EDBA2DC6DE668370D429EDC84143A88D2
1484AD27B8201D6BCD49054106560711DC2DFA5BA56D082DA695CD079E090B14
A5294A2A52895139249C9275B1C968925C7257ACD1EA62949AE7B1B86029D2C7
8E9194A5C033CA4F91C7519EFAC7E333C4F0B3F173C792D8347308054F0FC19C
67CFB1451EB153B7EA91AB3469AEC49B0DC0EB2F36AC290A1A26863A88CC528C
B4F30BE5255CD43336A20770B9A72084EF6D96F1581C4B5932B6B374A2471519
D1FD9E5C45ACA1B9C9FE7688390AC8CE3B83DB5565DAC955A7EA056D193C00E4
1EADF22BA37496B4A5D4B0FBA55E1B36371D1DE63F454CEEA70C346D8FBBAE4E
22EBF018AF5B56AC08E8B4ADC87154A0D3E84F236240C11E1B67E32AF32493A9
0A0BEC9748196B8CF0BDE4F1BC9E60F3C799E49A66A36D3BCD49DC346C15574F
B1EEBA36D6D5B71EE7ADC16B7877A83ACD163D4A4780EA29CB23C5F08A8612E3
8929424123E1200D4C3EAE192ADB4B134FBB53FDA20647174CF90E656B3637B6
23238FEF1FCB3D9783866BC6BFB4979DD971DB350A9376BEDF5A0E0AFC795294
EC79153E5E542129C94A7F1CE072F9249F3D64BE5347718228E503C495FF000E
06086FE3CBBAF348F740F7169F85A37F54C46D2F1F957AC4CB5ED7DC1B094F55
EB5487AB32DFA3A8F2C58E80B5254A695D49286CAB00F9A7D74B571D24C89B24
D4D27C2D7068E2EA76EBEA56FC1722EE16C8DDC8CECAD8B0B8DCE1FAFE8D5493
16E695491458A25D4055612E3FB33454100A89C8F99406351157A62E5465A1CC
E2E2381839CAD98AE104A090718E7953673887D916597643DB9B426DB63D9FC4
52E48013E38E66739FE71D46A3C5A2B9C40113B7CF4EDCFE8B31A9840C970588
4F159B08EDF51B6DA36E04491714A9A29E886D36E2887CFE52AE5C0FDF59FF00
60DC4539AA3110C0339F25E3DF60E3F0F8B750BDE7E37F6F76A6E49DB770A815
BAD5E8CA9B662D30452C3521E7080801E5F4E5EB9C8046B7ADBA5EA6BE2154E7
06C5BE4E73803C82C551708E07787825DD9432D8DDB99C736CDEE0ED90A74DB2
2F3A37E1A998F315CBE202790158C1E52A4142D275BD516E6E95AE82AF22489D
E5F5DBEF0B0C739B8C2F8F1C2E092DB7370EFDD99DE0897FD4684FC6AA5A2A6A
DFBD433252A4CB4AB2DF32B94E798B60655D7E34039C9D3CCD454D73A134CC76
5AFCBA3DB975FC7EE510D9A4826F108DDBB395FACF0EF75537883B26F7E16A2D
5FDD73620ADD46E6ABCEF1A14B69F70A96DA88F889E525051DC900F9674B9FB6
6192D9353DDC8E2078431A30411D7F3CADEF7470A86C94DC8EE49E49A49B1363
784CA456AE5A6D223C5AB5C525C98EB4DACB92663EA39E449565496C127E834B
14F1DC752C8C849CB58319E807EAB0DEEF76FD2F4EEA89CFC47937AB8FE8926D
D0DD0B9B75EE676E3B8E474EA88D1904F8719BCF44A47F89F3D5A96CB6416A80
4308F53D495CD1A835055EA2AB3535276E83A01D829054F662A10F64691BAB11
B7A599D31D4CA4B63298D1C7C28240F550393E5D35A715E58FBA3E81DB600C79
9EAA56A34AC9169F8AEF182E2E71CE3A3790FBD5734DA9D428F3D8AA52A63D12
5C65871979A514AD0A1D8823535246C9986390641E60A53A7A8969251340E2D7
0E44730A6356DF3DDEADB418A8EE15656D818E54482D83F7E5C6A362B1DBA039
642DFA654ED46AEBDD50E192A5D8F5C7E0A2153AB54AB52D53EAD39E97256025
4F3CA2A5A80181927A9E9A918A2642DE08C60760A0EA6AA6AB7F8B3B8B9DDCF3
5E4D645817744872E7C84448315D90FB87086DA415295F603AEBCBDED8C713CE
02C91C4F99C1918249E83729FAE14ED7A2FF0060A2CDAB6DCB348AFD39D2CAE5
4883C8EBE3BA5C4A9433D8E0E3D35536AAAA97DECB639B8A376F80761E4BA3BD
9F5041FB35B24D4A2399A70496E09EC7255F7A52563234211A10B8202810A008
3E474239A54B8B8DB4DC7BEAB504DA76836ED1A95194EBB25A2DA14B715D544F
6384803FAE9FF49DCA8A86277BC4987B8F2DF97F554EFB45B15D6EF3B3DCA0CC
4C049230324F3FA0499AD250B5215DD2483AB241CEEA8A23070571A17C468423
421319C39DB115ADB7BF6E2DC06D2C59F2E086505F180ECA4E4A54D67BA81C00
4799D26EA2A971ADA7868F7981CEDD079AB5744503596AACA9B90C5339B8DFAB
8751E612E8BE5E63C99E5C9C67BE34E4396EAAC76388F0F25F71A4C88721B951
1F719799505B6E36A2952543B104763AF2E68782D70C82BEC723E1787C670472
21351B35C6439163B56AEEEB0674329F093534A39D613DB0F23F38FA8EBEA348
778D1C1E4CF6FD8FF2FE87A2B934BFB4E3186D2DE371C83C73FF00CC3F353DDF
AE1F6DEE2762DB57EEDADFF1A955DB6D2B4D327B2DA6447F0D7F914DFE520F50
475074BB6BBACD607494B57112D7FDA0763F556D669EEF1B6A2924071C88DD51
FBD3C3BDDFC3BF0A82C7B08CFAF49B86B487EF4AA418856F3917072037D55E18
E83FAF9EA76D97986F378F78A9C3435BFBB04ED9F5EEB15452BE9697822DF27E
22A07C185AEEC25EE7EF4C1B823D185061FF0067ADAA95CAAC351DC5FC9E2E47
9202072F97363523A9EA03853D039BC5C4789E19D7D161B7C78324E0E31B0255
79404D5AE4D94E223742E07E34A9F519B029EEC98E8E569C70C9E7596C7924E1
247D31A939B820AFA0A48860004E0F3E5D56AB789F0CF2BB99C0FBD54D2EE497
5179E43EDAC46AFC9A608C4F6508AA0DFF004EA352ED80300C7360767FF36EB5
8BCB8EFD71F726B38B18158B1B887DB4BAC58347A151A3D5E118D5584B487AA8
E28B4A756FA47505249009EFA50D3CE6555B2A21F10B9C5A7E13C9A37C614A57
34C7511BF87033CFBAB778F9E1DACFAC58375EFC3516AD36E9871617B2A9978F
871DA6D6028840FCA42B27EC0EA1B48DE678AA62B79204649CF992B6AE748C7C
6E980F8955FF00C33EB15EA36E75C76853950AB943AAD259AACDABC769454C49
C24A595BAA1927E2524A7D412352DADE38A5A58E7765AF04B434F51DC0FCD6B5
A0B9B23983718CE7CD335B8BC12EC5DFDB8F2F752EA6A7B2A9810E54E13533C1
852D68C616E81D7C867AE0E34AB45A9EE1494C28E1C1C7238C919ECA427A1A77
3CCD26C3AF41F3589DC6E29B6F36A686DD89B3F4D8731E80D7B34711D3CB061A
476031F391E83A7D75276CD2B577293DE6E04B41DCE7ED1FD1206A3F68D43696
9A6B6E24906D9FE11FAFC9275765E171DF15A7AE0BA6AAF4F9AF9EAB715D123F
9523B240F41AB2292921A188430370D0A86B95D2AEEF39A9AC79738FF781D82F
9B52D3AFDED5D8D6E5B54E7264E94AE542103A01E6A51F248F3275F6AAAA1A28
8CD3BB0D0BE5B6DB5376A86D2D23789C7FBC9F25B05DB9B5A8FC3DED1A697B83
73372218739E4A9E47330D29D2016D230494E7D7EA7550DC6AA4BFDC3C4A3660
F4C7338EBEABA5ECB6F87485984371972DEB9E433D0792A178A2D8FDBEA0DAED
6EBEDFCD6D98B3E4B68545616171DCF133F1B447CBDBB76D36698BDD64F39B7D
58C90399E631D0AAE75F694B6D2D20BC5B9C00711B0DDA73D4764AEE9E953E8D
0846842BBF879D9DDCAB8AA74DDC9B25EA6A59A54F017E349E556538E6494804
E0A4FF005D2C6A0BBD0D3B1F45540E5C3A0FA2B034669ABAD64B1DD680B70C77
53BEDCC63CC2D85239B913CE005606403900EA9E3E4BA5C671BAFAD0BEA34211
A108D08584BD2812AE9B56A96EC2A9AA9EED4632E3092947316C2860903ED9D6
D514EDA5A864CE6F1069CE1685D291F5F47252C6FE02F04679E32B5E7BFBB350
365EB34EA231722AAB226C754870167C3F093CD84F99CE7AFEDAB86C5787DE62
74A59C201C73CE57336B0D311E979E381B2F1970C9DB18FF00E5557A9D49E8D0
856BEC8ECC0BF1D9176DDD2BDD566517F16A135C3CA1DE5EBE120F993E67CBEF
A80BD5E7DC00A7A71C533F90EDE653AE93D2DFB5C9ADAD3C14D1EEE71EB8E817
5EF66F21DC1951EDBB622FBAECFA2FE1536036394280E9E2AC0EE4F97A7DF5F6
CB67FD9ED334E78A67EEE3F905E755EA8FDB2F149463829A3D9AD1B671D4A9DF
09161591536AE3BFF70910D54AA3B69889F6CC78285383E25AB3F4200FBEA2B5
657D54662A3A3CF1BB7DB9EC98BD9C5A28266CF72B88058CF87E2E5BF32BB77E
B85655AB4F93B81B6F2913ADD08F697631739971DB3D7990AFCE8EBF71F5D79B
0EA9F7A78A3AD1893903DFD7B15EB57FB3EF718DD72B59E287991D87707A84B7
A1979C42DD6DA5A90D8056A0924273DB27CB4E848070555618E702E0360B3B67
DFF78D853C546D2B825D39D072A0D2CF22FE8A49E87F51AD5ABA0A6AF6705430
387F7D548DB2F55D6793C4A390B4FDC7D4724C6D8DC7555E32110F706D86E723
012A95055E1AFEE507A1FD08D26576878DD9751C98F23FAAB46D3ED665600CB9
45C5E6DD8FD392B1DFDDCE15B77ED897675D1EEF669B54712F4A81508C63A5C7
010429453D0AB2075CF96A04D92F76B944F0824B7910729F2935CE9EB93380CA
1B9E8E18FE8BADAE1D3866ABED4D6F69ACDABC5A6D02E398D4E9629F554ADC2E
A31CBCA564903E11D358DD75BBC358CAD9DA4BD83032D5391CD6CA984C704AD2
D3D9C3F55119FF00C3D762A7536DAA7B377565845B25C2C38894C953FCEF78A7
C438EB83D063CB5B4CD5F7163A471603C7CF63B6D8D97A3434843407F2F30A69
BA5C3170F7B8F7BB7B83B835D7D5363B51DB435EFA0CB08F047C2A08CF43D067
D75A56FBD5D28E0F76A56EC73FC393BAF553EE05FE24F2018EEE014D6E3DFED8
FB7602A9F55BCE9B2DA0DF84A8ECFF009495A718E520020F4F5D6AD3D82E752E
E26444799D947566B1B1D08C4B50D3E437FC152157E31AC0B3A23D4CDA1DB961
80B513E22D844564ABF9B91B1957EB8D33C1A36AAA5C1F5F37E67EA522DCBDAB
51C00B2DB0971EE761F41BAA0F70F7DB7337316A45C570BA9864F48517F0981F
748F9BF5CE9BEDF63A1B6EF0B37EE772AB0BCEAFBB5F09151261BFCA361FD7E6
ABFD4BA585EDA2D39BAB55E1D31E9EC426E4BC96D725F561B6924F55A8FA01D7
58A690C51B9E06481C8732B66929C54CEC85CE0D048193C879A796988DB3E193
68177BD9D11373BF2CA1955459217E3BAAEDCCB1FE6DB04761FE3AAB6535DA96
E3EEB527C3037E13D07A752BA1606DAB43590D750B7C52703886F93E67A0553D
ADC6C5C0E4A910B722D88159A44B5AB99B65B095B483F9405652B03EBD74C155
A2E10D0EA2796BC77EBFA24CB7FB539DCF74774843E371E9CC0EDBEC57A788EB
FB6EEE1D95B6E06D8A9B6696ED59C5AE1A5250A8EB4A0A8A4A3CBAAF3E9E9AC7
A7682B29EE72BEBB77068DFBFCFE4B3EB7BC5B6B2C3032D4408CBCEDCB1819C6
3A734AE69ED53A8D08598B420526A97452A9B5D7DD629F2E5B6C4875AC73210A
50048CF4E99D6BD5BE48A07BE219700485BD6D861A8AB8E2A82431CE0091CC02
B639B39B2942D9C8B3E35BF59A84C8F52521C5A249494A54918E64E07983AA66
F17A96F0E6BA66805BD9751699D2D4FA658F65348E707E0EF8FB958FA854D08D
084684234211A108D0855FEE46D85817046A8DD75DB323562A91E12FC22B4296
B5F224F220007D7CB52F6EB9D5D3B9B4F14A5AD27F1E696EF761B6D6364ACA88
0492069C753B0D805AE9BA6C0BD6D665355B92D49F498B29D525932192D827BF
28CFA0D5C94B5F4D547C38240E239E0E57305C2CF5F6F689AAA1731AE3B64617
4D914FB56A170C66EF4ADAE994742B9E4BAD345C71691F9100799F53DB5EAB64
A88E12699BC4FE9D07A95F2CF0514F54D170938221B9C0C93E415D3C436F0D81
5FB0EDDDBCDA479C6689116A72531E0A9AF940080A07E6C92544FAE9674FDA2A
E0AB96B2E032F3C8E73EA9F75A6A6B755DB60B6D98E231CC608E5CB3DFBA80ED
16D8536EC62A9795E731D81695BADF8B35F4745C873F2B0D93F995FD352D77B9
BE90B29A98714CFE43B0EE52E699D3F15C5B257DC096D34432E3D49E8D1E655D
4D5D946A1F0D95BBCED7B460D360D42BAC33129CF8F19B5A1A29482EE7E72794
93F5D2C9A4967BDC74D3C85CE6B4E5C363BF6EDE4AC06DCA9E934B4B5F470063
1D200D69DC103037EF9C6EAAAA8F103B91B90CC4B02BB5787028551931E2BCCC
28A96421AE7039411D93F4FA6A7E3B0515B4BAAE2692F68241273BE1264BACEE
97CE1B6D43C362796821A31B6797A2672B9B7FB794890C6C0B3428D49A45D147
5B91AA6900BEECE696080547E638F8B1E7A4786BEB2606EC5E5CF8DDBB7A069F
256D555A2D94E469D6C6191CCC387752F07BF53D52E3B8DC24EE958CB72552A0
8B8A9A9C90FC119700FEF35DFF006CE9CEDDAB282B806C8781DD8F2FAAAAEF7E
CE2ED6B25F00F159DDBCFE639FD152F2A24A82FAA34D8CEC779070A6DD414A81
FA83D74CAD7B5E389A721214B0C90BB8246907CF65D5AF4B1AE52B5A0E50B524
FD0E34100F35E83DCDE45646968B82B33E3D2290B9D2A5CA7034CB0D2D454B51
EC00075825F06161924C003995B74DEF7572B6080B9CE3B00095606E470F5BA3
B716FC6B9AE48A89109EC07971DE2E98CA3D839E9F7ED9D445BB50505C663040
70E1CB2319F44CD7CD1978B2D336AEA47134F3C1CF0FAAAB753C9311A10A6563
ECFEE36E23E96ED6B5E5C86547064B88F0D84FD4AD5D3F6D46D6DDE8ADE333C8
01EDCCFD14FDA74C5D2F4E0296124773B0FA94CBD8BC1ED9565476EE4DE5B9E2
3E1BC28C50F0662A4FA296A20AFEC3034935DABAA6B5DE0DB58479E327E9D15A
F68F66B6FB5B4555EE5071D3386FCC9E6A17C626D950E8722857F5971223745A
830984BF6309F052B40F814397A754F9FF0077525A42E52CE24A4A9278DA73BF
3DF9FDEA0BDA5D8A0A630DCA85A046E1C278796472E5DC286F0FDBB34FB5654A
DBFBE5025D9B720F025B4E75119C5740EA7D3EBFA1F2D495FED4FAA68ABA5DA6
66E3CFC94168CD471D03DD6CB87C54D2EC41E84F5FD7EAA3DBD9B4D50DA7BAD5
4FE63268F381914B9A3AA5E64F5033DB986467F7D6E596ECCBAD3F1F278D9C3B
1517AAF4E49A7AB3C31BC4EDD8EEE3F50ABFF15CF0FC1F115E1F37372E7A67B6
71EBA97C0CE52CF13B87873B2F9D7D5E565ED4B52B97B5723DB96E44126A12B3
E135CE13CD8192327A761AD7AAAA8A8A2334C70D1CD6EDBADD5175A86D2D28CB
DDC8724EFF000C9B472687664CA26E6EDEC16A7C59CA5C77A54769D538DA803D
15D7B107557EA5BB367A96CB4331E12370091BAE81D0BA75F4940EA7BB5300F6
BB62403907CFC8A611294A12108480948C003C8693C9CEEAC9000180B9D0BEA3
4211A108D084684234211A10AA4DF9D8B7F7B051E22EE4F75C4A629C71690CF8
8A714A000C7500600D30D8AF82CBC6E0CE22EC75C24BD5DA4DDAA7C2619781AC
CF4CE72902DC1B6235A17A562D9A7CB72647A5CA5C74BEA40057CBD0920741D7
56DD054BAAE9593BC60B8670B9BEF340CB6D7CB4913B8830919EF8584A7456A6
CF8F11F96DC569E71285BEE6795B493D5471E835B3238B185C0648E8B469E26C
D2B637BB8413B93D3CD303BA7786DCD476B6DAD9BD9D9B22A2F37504194131D4
854A7797017D47C44ACFE9D34A36BA4AD8EBE5B95C8068C6DBF21DBE8ACED417
2B64F6882C5637171E219D88E23DFE6573C40A9DDB4DAAB2F635612A98DB7EF6
A92C1E81C5156103F551EBF4D7CB062E55F3DD3A7D96FA2F9AC89B159A974FFF
001638DC7CF7D92EED2D6DBA871B572A92A041CF620F7D38919182AAF8DC5AF0
42BEB885DFB8F7ED3AD8B7A82CC86DDA136DC876A4A05B5B920B6012D7984E72
73E7A53D3F627503E59A6C61F91C3CF6CF5F3564EB4D5EDBA454F4D4C0831E09
7F224E3A75C79F5566709DBCD7B5C74CBA6875CAB3B599B4A80275353295952B
941050543A904F2FEFA84D5567A5A67C32C4DE16B8E1D8FC5357B3CD4D5F5F05
44150FF11EC6F1373F86558F2AE8DA3DC2B12D9BB7706CE86A4DCB2134F4F347
0E18F24929E453830A0398119D42B29AE36FAB969E8E43FBB19E78C8F44D5256
D9AF16FA7ACB8C23131E1DC670E3B609E7CD452E3E15B87CAB5C0E5BB4CAFBF4
5ACF285FB0B5352A5608C821B73A91F63A90A7D51788A2F19ECE3677C7E6142D
6FB3FD37515069A3798E4FE50EDFE852DFBD7B311F6D6FE8361DB355955C9935
96DC0D96425616B510840009C938CE9D2CD79372A4755CED0C00F7EDCD559AA7
4B36C97165BA8DE64738038C6F92760A415A431C35D2BDC70D287F716AD142E5
4DC651488EE0E8DB47CDD23BABCB5A9093A8E4F15DB53B4EC3F9C8EA7CBC94AD
57068483DDE3DEB5E377748C1E8DF33DD65760388F3430E6DF6EA3CAAADB3542
5AF1E512E98C57DC2B3D54D9CF5F4EFAD7BF69DF1FFDF283E195BD06D9C7E6B6
B476B8F76CDB6F078E17ED93BE33DFB8FC161388ED856B6CA5B1765AD2512AD5
AC2F31941614585A8730467F3248EC75B5A76FA6E6D34F38C4ADE7E7E7EBDD47
EB7D20DB1BC57519CD3C876F2277C798ECAA7B56E27ED4AFC3AFC6850E62E1B8
17E04B643AD383CC292753F554E2AA17424919EA0E0A4BB6D7BADB54CA96B43B
84F270C829FEDBFDE58BBC56148676D2753E8575456924D3E5341486D43C8246
3283DB9876CF6D5495F6775A2AC1AE05F11EA3FBE7E4BA4ECDA963D496F22D6E
6C7381F648E5F2EC7BA82F159732DED89A547BE682C43B9AA3290111D2BE7F01
C413E23893FCA40FFEED4AE96A6C5D5EEA57E6268E7DC1E40A5EF6815C4E9E63
6BE30D99E46D9CE08E647963F155E6C0CC6775B692EAD8CAA3A17363B2AA9514
ACF54A875E54FD958FD1475317E61B55C21BAC7C89E177F7E9F8259D1F33750D
96A74FCC7E203899FDF91FC52D92633F0E43B125365B7985A9B710A1D52A0704
7EFA756B83C073791554491BA1798DE3041C14CBEC2DE769EEDDBADEC4EEDA7C
7F0FE2A14D52F95D6CE3FCD257E44797A8E9A48BED1D45A66375B76DFCE3A7AE
3F156D690BAD1EA3A51A7EF2338FFB3775F4CF7ECA8FDD3B7681695FD58B66DA
95264C1A6483192EC8239D4B4FCDDBA63391FA69A2D751355D23279C00E70CEC
ABDD45434D6DB94B494849630E3279E7AA8D310A6496DC763C479D4358E75210
484E7D48EDADE2F6B4E09510C89F2025AD240F24E86C1F0DB6B2E9F67EECD26E
0A9479E84225BAC28214DAD632149EC081AAD6FDA8EA03E7B748C05BCB3D55ED
A43445198A96F50C8E0FC0711B633D42697486ADE4684234211A108D08468423
4211A108D0846842ACF7576B69D59DBFB929B675B14C456AAECA929743484296
E2940A9456467D7AEA6ED5747C35913EA643C0D3E7CBD12AEA0B045556DA88A8
A26F8B20E7800E49E7948C6EE6C65CBB391A92E5CB3A1BCF557C4296A312AF0F
931DC91D7BF96AD4B4DEE0BC39E200406E39F5CAE7BD47A4EAF4CB227553812F
CEC3A61456CABCEAD60D75BB9286D45350612430E486438195118E74A4F4E6C7
63ADEADA38EBE2F065CF09E7838CA89B4DD66B3540AAA7038C7224671E63CD76
DF7B8374EE4D6515EBBA7265CD4329602D2D840E40490303A79EBCD0DBE0B747
E1538C37395EAF17AABBECE2A2B5D97018E58D9470120823191D7AEB754534F0
9CAB037637461EE62A88EB36A43A53F4A80DC379F67E69252903240E800C741F
5D445AAD6EB6F880C85C1C4900F44CFA9350477EF04B610C2C68048E6703F0EC
B0762EE0DCFB71549159B4E6A62CC91157114E1405610AC64807A67A743ADAAE
B7C1718C47503201CA8EB3DEEAEC72BA7A3761C4119F22B24ADE2BE9568C6B28
549029D1A79A97F9B1CEB7CAF9C12AF40AEB818EFAC22D1482A0D570FC4470FC
B185B67545C4D136838BE00EE3E5B939CFE2B3FB7D5DBCF76B7D6DAA8572B322
4D45D9ED28BE3E12D34D9E62138EC0007A7D75A770829AD36A95913406E0EDDC
9D949D96B6BF51EA2A796A1E4BF886FD80DF6595BFF748C1E27255FC91ED11E9
15643694F7CB2D7C0A03F4E6D60B7DAF8EC629391737EF3BADCBC6A0F07569B8
F36C6F03E4362AD5E342D2A15C36A50B78E86FB654F86A338A491F8ECB80A9B5
7DD3D47D8FD3503A36AE5A7A892DB28E593E84734DFED3ADB4F5B450DEE9CEE7
03D41DC7D12FD78ED055ED1B1EDEBF9CAB53E6536BED0290C3A0B8CB8739414F
9E00EA4763D0E9BA8EEF1D5D54B481A4399DFA855B5CF4CCD6DB7C1722F6B992
0E87707B79AC5DDDB875CBAA9548B6DD92EA28B4260310A2959201FCCE2BD544
93F61D06B3D25BE2A591F381F1BCE49FCBD16A5D2F95171862A4C9114630D1F9
9F3515D6FA83592B7AE2ADDA9578F5EB7AA2F429D15616D3CD2B047D0FA83E63
586A29E2AA8CC530CB4ADCA1AFA8B6CEDA9A6716B9BD429CEF7EF1D47782A747
9D313E1A69D4E6D95A00C24C8232EA80F4271A8AB259D96863DADFE2713F2E89
8B566A793524B13DDB0634023FCDD4A8FED65F12B6E6FDA3DDD194A09872078E
907E7655D169FD89D6DDD289B71A47D39EA36F5E8A334EDD9F64B94558DE40EF
E60F3571715DB4941A2C96775ED8ADC3102E65264182A580E1716398ADA1F992
7393E84E9734ADDA699A6DF3B4F147B67C87429E7DA1E9CA6A670BCD2483865D
F87AE4EF96F71DFB25DE24B9302533361BEB65F616971A71070A4281C820FAE7
4E2F6364696B8641557C52BE0789233870DC1521B628B3B712FDA7D1EA33D4D4
AAFCD087252D1CC799C3D578F3EBAD3AA99B6EA4748C190C1CBD3A294A0A692F
97364333B0E95DB9F5EA9DAE1E787CAE6CF55ABE8AECFA7D569F5265A4B2A420
E7992A3F32143A743AAC7506A08AEF1C7E102D7349CFFF002AFAD19A36A34D4D
38A8735EC7818C7977055EB1624584C263438ED30CA3E56DB404A47D80D2AB9E
E79E271C9561C71B226F03060792EED795ED1A108D084684234211A108D08468
4234211A108D08519BAF6DACABE67409F765058A9B94DE6F664BF92841563279
7B1EC3BEB7A96E35542D7329DE5BC5CF0A2AE164A0BAC8C92B230F2CE59E5BF9
255373B84FBC2E3BFAE9B9696D53E916FB5CD2228E997129681E54369EDD411D
71A7DB66AAA6A7A4860932E9391FAF52553D7EF6795B5D72A9AB8B863846E3CF
0390012B4A8B2025C7032B2DB4AE55AC24F283F53A7CE219C65541E1BB04E360
BAB5F5784684234211A10AFAE12694B66E1B9AFB2C15A6DAA24879BC0FF4AB49
031FA03A53D592F14315267FED1C07C82B27D9C539654545C719F0A3247A90A8
B9725D9B2DE98FAB2E48714EAC9F3528E4FF008E9A98D0C6868E415773C86691
D23B9924A9057F716E7B8ED8A2D9D3E72BDD3416CA234704E0A8924AD5EA7AE0
7A0D69C16E829E77D4B07C6FE6549D6DF2AEBA8E1A191DFBB8C6C3CFB951F766
CC7E3B30DE94EAD88FCDE0B4A59296F2727947619D6E063438B80DCF3518E9A4
7B046E712D1C8740BA75E9624684234211A108D0859FA8D72EBBCE353A9B2572
AA0DD0A118F19B420AFC2601249C0FBF7FB6B563829E8DCE7B70DE3393E654A4
F595B7564713F2E1137000DF0158BB4DC35D7B77ACDA85C943ACC78B2A1CAF67
446908212EE1393F10EC7AFA6A1AEDA8E2B454B6095A4823391D3E499B4E687A
8D4942FABA79035CD7630791DBBA75ECBDA9B6E9F6B5AF1EE1B6A9CED6685158
48921A4971B7900750B1D4F5D56359759E49E530BCF03C9DBA60F92BEED9A7E9
61A4A76D4C4D32C61BBE370479AB0351098D1A108D084684234211A108D08468
4234211A108D084684234211A10BE1E65B90CAD8793CCDB8928524F9823046BE
825A721797343DA5AEE45559B97B1540B936CA658566D2E9D475BEF34EB6E25A
C00A4AC12A511D49C6753D6DBECD4D5CDABA9717632946FBA4E9EBAD2FB6D0B1
B1E48236EA0F5EA52BFBD7C2CCCDBF8F6C44B38542BD3EAAB723C9286B397400
472A47CA9C67B9F2D3D59B5436E065754E18D6E08F4551EA8D00FB3B29D943C5
2BDE483B75F21D02A72F6B06E6DBFB84DAD71C1F0AA21B6DCF09B3CF90B19001
1DCF974D31D157415F0F8F01CB77FB923DD6CF5767AAF73AA6E1F807037E6A3C
B42DB596DC494A9270411820EB701CEE146105A70571A17C57E6CF6F45A5B3BB
595789EEFF007BDC171BEB4AE2E795B65808E44F88AFAE547034A577B3545DEB
D8ECF0C6C1CFB9E7B2B334D6A7A1D33669185BC734A4EDD00C6064FD76542BAA
4ADC5AD28084A944848F219EDA6C03030AB57B839C5C0617CEBEAF28D0846842
34211A10BB950A621A65F5C5752D482434B283CAB20E0E0F9F5D790F692403B8
590C32068710707979AB8E85C325F91EF5B5A9B73511D551AB8EB2B725472548
436A4F3292A23E4563A75D2E4FA9691D4D33E07FC6CCEC7BF2F984F349A12E31
D7D3455719F0A4232472C7320F629A4DA9E1928BB517FCFBA293555CCA74A86B
8CCC692805C64A9409055D943031DB48975D4D2DD68DB048DC381C923AAB774F
E84834F5C9F5703F898E6E003CC64F7EAADFA4D0A8D4243EDD16971A0A24BA5F
752C361016E1EEA2079F4D2E4B3CB3E0CAE271B6E9DA9E920A40440C0D04E4E0
637EEBDFAC4B611A108D084684234211A108D084684234211A108D0846842342
11A108D08468423421705292428A4129EC71DB42F980A3350DB6B32AB78317D5
4A88C4AAC46604765E747304241C82127A7375EFADE8EE5531531A463B0C2724
28A9AC743515A2E12C60C806013D3FAF9AA955C1FD9350BCEE4BA6B8F2A4B155
53AB830D03951196E27AACFA90A2481DB4C3FE2EAA65345044305B8C9EF8FE89
34FB37B7CD5F515950721F9E16F20D2473F3DF92A562706377A2D0B8ABD5895E
05420874D320B78519096D472A51F2E648F840EBA667EB1A635314518CB4E388
F6CFE9D52145ECC2B450CF513BB0F6E781A3AE3A9F51C957D3B87ABFE97B5E77
3EA104B1183A91EC8A49F18307A78C4790CE063BF9EA5E3D41492D77B8B0E4F7
E99EC96A5D197282D1FB5E56E1B9FB3D787F99612E5DA1BE6D2B568D77D6A8EE
3306B84A638C12B49FCA169F22A1D47AEB6A9AED4B573BE9E2765CCE7FD3D3AA
8FAFD3770B6D1C55B50CC364E5DFCB3DB3D174DCDB537DDA53A8F4EAD505F6A4
D7996DE84D81CC5CE73808E9D943A6479675EA9AE94956D7BE27E430907E5F92
F15DA7AE36E9228A78C874A0168EF9E9EBE4BDAFECA6E045DC189B692E8EA6AB
130A0B60F56CA1433CFCC3A728EB93E583AC4DBCD1BE8DD5CD76583EBE8B61FA
56E71DCDB6A7B3123B18ED8EF9EC3AACD5A3C39DFB736E1D436EE546F774BA63
4B7643EEA4968240F8083E6147183AD6ABD45494D46DAC69E20ED80EBE7F45BF
6ED1371AEB9BED8F1C0E602493CBCBEAA5FB61C235CF773B73C1BAD4FD124D23
11A1A948CA1D91DF3FDE472E3A8F5D475CF564148227D3FC61DB9F21FAA9BB0F
B38ABB89A88EB731B99B37B177E631D9599B75C1B5324EDD54297B80C7B35C52
25AD51A5B0BE631D08F8518F25255DC83F4D425C3583DB58D7D19CC606E0F5EF
F44D765F6670BED6F86E4313171C38740361EA0F3573D0B642CA87B7947B02BB
498D53669484A83CA46145E0798B893DC64E9667BDD53EB1F57138B4BBA79764
F549A56822B6456DA860786637C75E79FAAB090DA1B425B42404A00091E806A2
0924E53286803017D6BE2FA8D084684234211A108D084684234211A108D08468
4234211A108D084684234211A108D084684234211A108D085C6842E89D1A3C98
6EC692C36EB2B4F2A9B5A0292A1E841E875ED8E2D70734E0AC72B1AF616B8647
6589BB69F026D362B1321477DA6E6C75210EB69525242C6080474235B14B23D8
F716920E0FE0B4EE10C72C4D6BDA08E26F319EABCD7540812ABB6C3D2A130F39
1E72D4CADC6D2A5367C25754923A1FB6BDD2C8F6C52869C646FF00558EBE18E4
A8A773DA090E38C8E5B1E4BD92E0C25DDB4F9EB86C2A53711E421E2D82E2524A
7202BB81F4D6263DC29DCC076C8D9669228CD63242D1C401DF1BF4EAB2898F1D
3317292C361E5A0214E048E62904E013DF1AC05C784373B2DA0C6879781BF75D
DAF2B22E74211A108D084684234211A108D084684234211A108D084684234217
FFD9>
%%EOF

%%EndDocument
 @endspecial 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray -2721 20051
a Ff(Sho)-20 b(rt)235 b(Name)471 b(\(F)-59 b(AST)q(\))p
1 TeXcolorgray 1 TeXcolorgray 15593 20051 a
SDict begin H.S end
 15593 20051
a 1 TeXcolorgray Ff(Sho)-20 b(rt)235 b(Title)p 1 TeXcolorgray
18800 19590 a
SDict begin H.R end
 18800 19590 a 18800 20051 a
SDict begin [/Color [.5 .5 .5]/H /O/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation7) cvn H.B /ANN pdfmark end
 18800 20051
a 1 TeXcolorgray 1 TeXcolorgray 15424 w Ff(Ma)-20 b(rch)236
b(17,)f(2021)p 1 TeXcolorgray 1646 w(1)117 b(/)h(7)p
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 1 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -6899
-8111 a
SDict begin H.S end
 -6899 -8111 a -6899 -8111 a
SDict begin H.R end
 -6899 -8111 a -6899
-8111 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation2) cvn /DEST pdfmark
end
 -6899 -8111 a -6899 -8111 a
SDict begin H.S end
 -6899 -8111 a -6899
-8111 a
SDict begin H.R end
 -6899 -8111 a -6899 -8111 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -6899 -8111 a 0 0
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
-8000 20346 a

 -8000 20346 a -8000 20346 a


 pgfo

 255.12138 453.54913 0.0 0.0 pgfe

 clip

 newpath

 255.12138 453.54913 pgfVrgb 0.0 0.4 0.4 0 0.2 0.2 0 pgfshade  pop

 pgfc


 1 TeXcolorgray
1 TeXcolorgray 42394 20346 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 42394 20346 a 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
0 0 0.25 0 TeXcolorcmyk 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk
0 0 0.25 0 TeXcolorcmyk -7055 -5660 a Fi(Outline)p 0 0 0.25 0
TeXcolorcmyk 1 TeXcolorgray 1 TeXcolorgray -6788 -1842
a


 gsave nulldevice


 -6788 -1842 a


 grestore


 1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk
0 0 0.25 0 TeXcolorcmyk -6731 1639 886 886 v 0 0 0.5 0.5
TeXcolorcmyk -6523 1482 a Fg(1)p 0 0 0.25 0 TeXcolorcmyk
0 0 0.25 0 TeXcolorcmyk -5172 1482 a
SDict begin H.S end
 -5172 1482 a 0 0 0.25 0
TeXcolorcmyk Fh(Intro)34 b(duction)p 0 0 0.25 0 TeXcolorcmyk
1034 640 a
SDict begin H.R end
 1034 640 a 1034 1482 a
SDict begin [/Color [.5 .5 .5]/H /O/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1034 1482 a 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk
0 0 0.25 0 TeXcolorcmyk -6731 4962 886 886 v 0 0 0.5 0.5
TeXcolorcmyk -6523 4805 a Fg(2)p 0 0 0.25 0 TeXcolorcmyk
0 0 0.25 0 TeXcolorcmyk -5172 5041 a
SDict begin H.S end
 -5172 5041 a 0 0 0.25 0
TeXcolorcmyk -236 x Fh(Example)404 b(T)-101 b(ables)p
0 0 0.25 0 TeXcolorcmyk 2741 3963 a
SDict begin H.R end
 2741 3963 a 2741
4805 a
SDict begin [/Color [.5 .5 .5]/H /O/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation4) cvn H.B /ANN pdfmark end
 2741 4805 a 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
0 0 0.25 0 TeXcolorcmyk 0 0 0.25 0 TeXcolorcmyk -6731
8286 886 886 v 0 0 0.5 0.5 TeXcolorcmyk -6523 8129 a
Fg(3)p 0 0 0.25 0 TeXcolorcmyk 0 0 0.25 0 TeXcolorcmyk
-5172 8365 a
SDict begin H.S end
 -5172 8365 a 0 0 0.25 0 TeXcolorcmyk -236
x Fh(Example)404 b(Graphics)p 0 0 0.25 0 TeXcolorcmyk
3865 7287 a
SDict begin H.R end
 3865 7287 a 3865 8129 a
SDict begin [/Color [.5 .5 .5]/H /O/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 3865 8129 a 1 TeXcolorgray
1 TeXcolorgray -6788 8365 a


 gsave nulldevice


 -6788 8365 a


 grestore


 -6788 8365 a


 gsave nulldevice



-6788 8365 a


 grestore


 -6788 8365 a


 gsave nulldevice


 -6788 8365 a


 grestore


 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray -2721 20051
a Ff(Sho)-20 b(rt)235 b(Name)471 b(\(F)-59 b(AST)q(\))p
1 TeXcolorgray 1 TeXcolorgray 15593 20051 a
SDict begin H.S end
 15593 20051
a 1 TeXcolorgray Ff(Sho)-20 b(rt)235 b(Title)p 1 TeXcolorgray
18800 19590 a
SDict begin H.R end
 18800 19590 a 18800 20051 a
SDict begin [/Color [.5 .5 .5]/H /O/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 18800 20051
a 1 TeXcolorgray 1 TeXcolorgray 15424 w Ff(Ma)-20 b(rch)236
b(17,)f(2021)p 1 TeXcolorgray 1646 w(2)117 b(/)h(7)p
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 1 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -6899
-8111 a
SDict begin H.S end
 -6899 -8111 a -6899 -8111 a
SDict begin H.R end
 -6899 -8111 a -6899
-8111 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation3) cvn /DEST pdfmark
end
 -6899 -8111 a -6899 -8111 a
SDict begin H.S end
 -6899 -8111 a -6899
-8111 a
SDict begin H.R end
 -6899 -8111 a -6899 -8111 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -6899 -8111 a 0 0
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
-8000 20346 a

 -8000 20346 a -8000 20346 a


 pgfo

 255.12138 453.54913 0.0 0.0 pgfe

 clip

 newpath

 255.12138 453.54913 pgfVrgb 0.0 0.4 0.4 0 0.2 0.2 0 pgfshade  pop

 pgfc


 1 TeXcolorgray
1 TeXcolorgray 42394 20346 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 42394 20346 a 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
0 0 0.25 0 TeXcolorcmyk 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray -6788 -8000 a
SDict begin H.S end
 -6788 -8000 a -6788 -8000
a
SDict begin 13.6 H.A end
 -6788 -8000 a -6788 -8000 a
SDict begin [/View [/XYZ H.V]/Dest (Outline0.1) cvn /DEST pdfmark end
 -6788 -8000 a 1 TeXcolorgray
0 0 0.25 0 TeXcolorcmyk 0 0 0.25 0 TeXcolorcmyk -7055
-5660 a Fi(Intro)43 b(duction)p 0 0 0.25 0 TeXcolorcmyk
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
0 0 0.25 0 TeXcolorcmyk -5508 4437 539 539 v 1 TeXcolorgray
1 TeXcolorgray -4364 4437 a Fh(LaT)-101 b(eX)404 b(w)-34
b(as)405 b(develop)34 b(ed)403 b(b)-34 b(y)405 b(Donald)g(Knuth)f([)
16461 4437 y
SDict begin H.S end
 16461 4437 a 1 TeXcolorgray Fh(1)p 1 TeXcolorgray
17067 3643 a
SDict begin H.R end
 17067 3643 a 17067 4437 a
SDict begin [/Color [.5 .5 .5]/H /O/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (beamerbibKnuth92) cvn H.B /ANN pdfmark end
 17067 4437 a Fh(].)p
1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk -5508 6275 539
539 v 1 TeXcolorgray 1 TeXcolorgray -4364 6275 a(Another)h(p)34
b(oint.)p 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray -2721 20051 a Ff(Sho)-20
b(rt)235 b(Name)471 b(\(F)-59 b(AST)q(\))p 1 TeXcolorgray
1 TeXcolorgray 15593 20051 a
SDict begin H.S end
 15593 20051 a 1 TeXcolorgray
Ff(Sho)-20 b(rt)235 b(Title)p 1 TeXcolorgray 18800 19590
a
SDict begin H.R end
 18800 19590 a 18800 20051 a
SDict begin [/Color [.5 .5 .5]/H /O/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 18800 20051 a 1 TeXcolorgray
1 TeXcolorgray 15424 w Ff(Ma)-20 b(rch)236 b(17,)f(2021)p
1 TeXcolorgray 1646 w(3)117 b(/)h(7)p 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 1 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -6899
-8111 a
SDict begin H.S end
 -6899 -8111 a -6899 -8111 a
SDict begin H.R end
 -6899 -8111 a -6899
-8111 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation4) cvn /DEST pdfmark
end
 -6899 -8111 a -6899 -8111 a
SDict begin H.S end
 -6899 -8111 a -6899
-8111 a
SDict begin H.R end
 -6899 -8111 a -6899 -8111 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -6899 -8111 a 0 0
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
-8000 20346 a

 -8000 20346 a -8000 20346 a


 pgfo

 255.12138 453.54913 0.0 0.0 pgfe

 clip

 newpath

 255.12138 453.54913 pgfVrgb 0.0 0.4 0.4 0 0.2 0.2 0 pgfshade  pop

 pgfc


 1 TeXcolorgray
1 TeXcolorgray 42394 20346 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 42394 20346 a 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
0 0 0.25 0 TeXcolorcmyk 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray -6788 -8000 a
SDict begin H.S end
 -6788 -8000 a -6788 -8000
a
SDict begin 13.6 H.A end
 -6788 -8000 a -6788 -8000 a
SDict begin [/View [/XYZ H.V]/Dest (Outline0.2) cvn /DEST pdfmark end
 -6788 -8000 a -6788 -8000
a
SDict begin H.S end
 -6788 -8000 a -6788 -8000 a
SDict begin 13.6 H.A end
 -6788 -8000 a -6788 -8000
a
SDict begin [/View [/XYZ H.V]/Dest (Outline0.2.1.4) cvn /DEST pdfmark
end
 -6788 -8000 a 1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk
0 0 0.25 0 TeXcolorcmyk -7055 -5660 a Fi(Example)520
b(T)-130 b(ables)520 b(1)p 0 0 0.25 0 TeXcolorcmyk 1
TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
0 0 0.25 0 TeXcolorcmyk -5508 514 539 539 v 1 TeXcolorgray
1 TeXcolorgray -4364 514 a Fh(Exam)405 b(results)d(a)-34
b(re)405 b(given)f(in)g(T)-101 b(able)11923 514 y
SDict begin H.S end
 11923
514 a 1 TeXcolorgray Fh(1)p 1 TeXcolorgray 12529 -281
a
SDict begin H.R end
 12529 -281 a 12529 514 a
SDict begin [/Color [.5 .5 .5]/H /O/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (tab:Results) cvn H.B /ANN pdfmark end
 12529 514 a Fh(.)p 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 0 0 0.25 0
TeXcolorcmyk 11867 4122 a Fe(T)-92 b(able)369 b(1:)p
1 TeXcolorgray 370 w(Example)h(table)p 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray -6788 5112 a
SDict begin H.S end
 -6788 5112
a -6788 5112 a
SDict begin H.R end
 -6788 5112 a -6788 5112 a
SDict begin [/View [/XYZ H.V]/Dest (tab:Results) cvn /DEST pdfmark
end
 -6788 5112 a
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
5193 5267 24009 45 v 5193 6773 45 1506 v 5901 6321 a
Fh(Name)p 10128 6773 V 10393 6773 V 2258 w(Exam1)p 15200
6773 V 1373 w(Exam2)p 20007 6773 V 1373 w(Exam3)p 24814
6773 V 1373 w(Grade)p 29157 6773 V 5193 6817 24009 45
v 5193 7083 V 5193 8588 45 1506 v 5901 8137 a(Ahmed)p
10128 8588 V 10393 8588 V 3861 w(19)p 15200 8588 V 3595
w(28)p 20007 8588 V 3595 w(33)p 24814 8588 V 2470 w(C)p
29157 8588 V 5193 8633 24009 45 v 5193 10138 45 1506
v 5901 9686 a(Daud)p 10128 10138 V 10393 10138 V 4714
w(49)p 15200 10138 V 3595 w(35)p 20007 10138 V 3595 w(60)p
24814 10138 V 2454 w(B)p 29157 10138 V 5193 10182 24009
45 v 5193 11688 45 1506 v 5901 11236 a(Zain)p 10128 11688
V 10393 11688 V 5184 w(76)p 15200 11688 V 3595 w(38)p
20007 11688 V 3595 w(59)p 24814 11688 V 2454 w(A)p 29157
11688 V 5193 11732 24009 45 v 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray -2721 20051 a Ff(Sho)-20
b(rt)235 b(Name)471 b(\(F)-59 b(AST)q(\))p 1 TeXcolorgray
1 TeXcolorgray 15593 20051 a
SDict begin H.S end
 15593 20051 a 1 TeXcolorgray
Ff(Sho)-20 b(rt)235 b(Title)p 1 TeXcolorgray 18800 19590
a
SDict begin H.R end
 18800 19590 a 18800 20051 a
SDict begin [/Color [.5 .5 .5]/H /O/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 18800 20051 a 1 TeXcolorgray
1 TeXcolorgray 15424 w Ff(Ma)-20 b(rch)236 b(17,)f(2021)p
1 TeXcolorgray 1646 w(4)117 b(/)h(7)p 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 1 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -6899
-8111 a
SDict begin H.S end
 -6899 -8111 a -6899 -8111 a
SDict begin H.R end
 -6899 -8111 a -6899
-8111 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation5) cvn /DEST pdfmark
end
 -6899 -8111 a -6899 -8111 a
SDict begin H.S end
 -6899 -8111 a -6899
-8111 a
SDict begin H.R end
 -6899 -8111 a -6899 -8111 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -6899 -8111 a 0 0
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
-8000 20346 a

 -8000 20346 a -8000 20346 a


 pgfo

 255.12138 453.54913 0.0 0.0 pgfe

 clip

 newpath

 255.12138 453.54913 pgfVrgb 0.0 0.4 0.4 0 0.2 0.2 0 pgfshade  pop

 pgfc


 1 TeXcolorgray
1 TeXcolorgray 42394 20346 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 42394 20346 a 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
0 0 0.25 0 TeXcolorcmyk 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray -6788 -8000 a
SDict begin H.S end
 -6788 -8000 a -6788 -8000
a
SDict begin 13.6 H.A end
 -6788 -8000 a -6788 -8000 a
SDict begin [/View [/XYZ H.V]/Dest (Outline0.2.2.5) cvn /DEST pdfmark
end
 -6788 -8000 a 1 TeXcolorgray
0 0 0.25 0 TeXcolorcmyk 0 0 0.25 0 TeXcolorcmyk -7055
-5660 a Fi(Example)520 b(T)-130 b(ables)520 b(2)p 0 0 0.25 0
TeXcolorcmyk 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk -5508 106 539
539 v 1 TeXcolorgray 1 TeXcolorgray -4364 106 a Fh(T)-101
b(able)-1199 106 y
SDict begin H.S end
 -1199 106 a 1 TeXcolorgray Fh(2)p
1 TeXcolorgray -593 -688 a
SDict begin H.R end
 -593 -688 a -593 106 a
SDict begin [/Color [.5 .5 .5]/H /O/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (tab:MathSymbols) cvn H.B /ANN pdfmark end
 -593
106 a 404 w Fh(is)404 b(an)h(example)e(table)h(without)g(b)34
b(o)-34 b(rders.)p 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk 9870 3715 a Fe(T)-92
b(able)370 b(2:)p 1 TeXcolorgray 369 w(V)-31 b(a)g(riable-sized)372
b(Symb)31 b(ols)p 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
-6788 4705 a
SDict begin H.S end
 -6788 4705 a -6788 4705 a
SDict begin H.R end
 -6788 4705 a -6788
4705 a
SDict begin [/View [/XYZ H.V]/Dest (tab:MathSymbols) cvn /DEST pdfmark
end
 -6788 4705 a 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 4470 5013 a Fd(P)6042 5870 y
SDict begin H.S end
 6042 5870
a 6042 5870 a
SDict begin H.R end
 6042 5870 a 6042 5870 a
SDict begin [/View [/XYZ H.V]/Dest (p1) cvn /DEST pdfmark end
 6042 5870 a 1329
w Fc(n)p Fh(sum)12723 5013 y Fd(T)14049 5870 y
SDict begin H.S end
 14049
5870 a 14049 5870 a
SDict begin H.R end
 14049 5870 a 14049 5870 a
SDict begin [/View [/XYZ H.V]/Dest (p2) cvn /DEST pdfmark end
 14049 5870
a 1328 w Fc(n)p Fh(bigcap)21938 5013 y Fd(J)24496 5870
y Fc(n)p Fh(bigo)j(dot)4470 6519 y Fd(Q)7371 7375 y Fc(n)p
Fh(p)-34 b(ro)34 b(d)12723 6519 y Fd(S)15377 7375 y Fc(n)p
Fh(bigcup)21938 6519 y Fd(N)24496 7375 y Fc(n)p Fh(bigotimes)4470
8024 y Fd(`)7371 8880 y Fc(n)p Fh(cop)-34 b(ro)34 b(d)12723
8024 y Fd(F)15377 8880 y Fc(n)p Fh(bigsqcup)21938 8024
y Fd(L)24496 8880 y Fc(n)p Fh(bigoplus)4470 9468 y Fd(R)7371
10386 y Fc(n)p Fh(int)12723 9529 y Fd(W)15377 10386 y
Fc(n)p Fh(bigvee)21938 9529 y Fd(U)24496 10386 y Fc(n)p
Fh(biguplus)4470 10973 y Fd(H)7371 11891 y Fc(n)p Fh(oint)12723
11035 y Fd(V)15377 11891 y Fc(n)p Fh(bigw)-34 b(edge)p
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
-2721 20051 a Ff(Sho)-20 b(rt)235 b(Name)471 b(\(F)-59
b(AST)q(\))p 1 TeXcolorgray 1 TeXcolorgray 15593 20051
a
SDict begin H.S end
 15593 20051 a 1 TeXcolorgray Ff(Sho)-20 b(rt)235 b(Title)p
1 TeXcolorgray 18800 19590 a
SDict begin H.R end
 18800 19590 a 18800 20051
a
SDict begin [/Color [.5 .5 .5]/H /O/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 18800 20051 a 1 TeXcolorgray 1 TeXcolorgray 15424 w
Ff(Ma)-20 b(rch)236 b(17,)f(2021)p 1 TeXcolorgray 1646
w(5)117 b(/)h(7)p 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 1 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -6899
-8111 a
SDict begin H.S end
 -6899 -8111 a -6899 -8111 a
SDict begin H.R end
 -6899 -8111 a -6899
-8111 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation6) cvn /DEST pdfmark
end
 -6899 -8111 a -6899 -8111 a
SDict begin H.S end
 -6899 -8111 a -6899
-8111 a
SDict begin H.R end
 -6899 -8111 a -6899 -8111 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -6899 -8111 a 0 0
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
-8000 20346 a

 -8000 20346 a -8000 20346 a


 pgfo

 255.12138 453.54913 0.0 0.0 pgfe

 clip

 newpath

 255.12138 453.54913 pgfVrgb 0.0 0.4 0.4 0 0.2 0.2 0 pgfshade  pop

 pgfc


 1 TeXcolorgray
1 TeXcolorgray 42394 20346 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 42394 20346 a 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
0 0 0.25 0 TeXcolorcmyk 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray -6788 -8000 a
SDict begin H.S end
 -6788 -8000 a -6788 -8000
a
SDict begin 13.6 H.A end
 -6788 -8000 a -6788 -8000 a
SDict begin [/View [/XYZ H.V]/Dest (Outline0.3) cvn /DEST pdfmark end
 -6788 -8000 a 1 TeXcolorgray
0 0 0.25 0 TeXcolorcmyk 0 0 0.25 0 TeXcolorcmyk -7055
-5660 a Fi(Example)520 b(Graphics)p 0 0 0.25 0 TeXcolorcmyk
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
0 0 0.25 0 TeXcolorcmyk -5508 -3427 539 539 v 1 TeXcolorgray
1 TeXcolorgray -4364 -3427 a Fh(The)404 b(b)34 b(est)403
b(fo)-34 b(rmat)405 b(to)f(include)g(in)g(L)11208 -3654
y Fg(A)11653 -3427 y Fh(T)12276 -3158 y(E)12847 -3427
y(X)h(is)e(the)h(eps)f(fo)-34 b(rmat)405 b(as)g(sho)-34
b(wn)404 b(in)g(Figure)32864 -3427 y
SDict begin H.S end
 32864 -3427 a 1
TeXcolorgray Fh(1)p 1 TeXcolorgray 33470 -4222 a
SDict begin H.R end
 33470
-4222 a 33470 -3427 a
SDict begin [/Color [.5 .5 .5]/H /O/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (fig:Stars) cvn H.B /ANN pdfmark end
 33470 -3427 a Fh(.)p 1 TeXcolorgray
0 0 0.25 0 TeXcolorcmyk -5508 -1589 539 539 v 1 TeXcolorgray
1 TeXcolorgray -4364 -1589 a(Figure)-795 -1589 y
SDict begin H.S end
 -795
-1589 a 1 TeXcolorgray Fh(1)p 1 TeXcolorgray -189 -2384
a
SDict begin H.R end
 -189 -2384 a -189 -1589 a
SDict begin [/Color [.5 .5 .5]/H /O/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (fig:Stars) cvn H.B /ANN pdfmark end
 -189 -1589 a 405 w Fh(is)f(a)h(picture)g
(of)g(sta)-34 b(rs.)p 1 TeXcolorgray 1 TeXcolorgray 1
TeXcolorgray 5204 14372 a @beginspecial 0 @llx 0 @lly
371 @urx 221 @ury 2158 @rwi @setspecial
%%BeginDocument: Figures/Stars.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.16.0 (https://cairographics.org)
%%CreationDate: Sat Sep 26 16:51:18 2020
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 0 0 371 221
%%EndComments
%%BeginProlog
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 0 371 221
%%EndPageSetup
q 0 0 371 221 rectclip
1 0 0 -1 0 221 cm q
0.619608 0.517647 0.709804 rg
60.5 120.5 m 39.773 108.512 l 18.148 118.793 l 23.145 95.375 l 6.688 77.984
 l 30.5 75.5 l 41.953 54.473 l 51.676 76.355 l 75.211 80.75 l 57.406 96.758
 l h
60.5 120.5 m f
0 g
0.999997 w
0 J
0 j
[] 0.0 d
4 M 60.5 120.5 m 39.773 108.512 l 18.148 118.793 l 23.145 95.375 l 6.688 77.984
 l 30.5 75.5 l 41.953 54.473 l 51.676 76.355 l 75.211 80.75 l 57.406 96.758
 l h
60.5 120.5 m S
1 0 0 rg
190.5 110.5 m 151.91 107.328 l 127.418 137.324 l 118.508 99.641 l 82.414
 85.617 l 115.5 65.5 l 117.684 26.84 l 147.039 52.09 l 184.484 42.219 l 
169.543 77.941 l h
190.5 110.5 m f
0 g
190.5 110.5 m 151.91 107.328 l 127.418 137.324 l 118.508 99.641 l 82.414
 85.617 l 115.5 65.5 l 117.684 26.84 l 147.039 52.09 l 184.484 42.219 l 
169.543 77.941 l h
190.5 110.5 m S
0.490196 0.321569 0.521569 rg
330.5 200.5 m 315.652 200.422 l 307.168 212.609 l 302.656 198.465 l 288.441
 194.164 l 300.5 185.5 l 300.199 170.652 l 312.164 179.445 l 326.191 174.57
 l 321.527 188.668 l h
330.5 200.5 m f
0 g
330.5 200.5 m 315.652 200.422 l 307.168 212.609 l 302.656 198.465 l 288.441
 194.164 l 300.5 185.5 l 300.199 170.652 l 312.164 179.445 l 326.191 174.57
 l 321.527 188.668 l h
330.5 200.5 m S
0.827451 0.0980392 0.290196 rg
260.5 30.5 m 254.547 33.438 l 253.59 40.012 l 248.953 35.254 l 242.41 36.379
 l 245.5 30.5 l 242.41 24.621 l 248.953 25.746 l 253.59 20.988 l 254.547
 27.563 l h
260.5 30.5 m f
0 g
260.5 30.5 m 254.547 33.438 l 253.59 40.012 l 248.953 35.254 l 242.41 36.379
 l 245.5 30.5 l 242.41 24.621 l 248.953 25.746 l 253.59 20.988 l 254.547
 27.563 l h
260.5 30.5 m S
0.72549 0.878431 0.788235 rg
70.5 180.5 m 61.605 177.484 l 54.078 183.102 l 54.199 173.711 l 46.531 
168.289 l 55.5 165.5 l 58.289 156.531 l 63.711 164.199 l 73.102 164.078 
l 67.484 171.605 l h
70.5 180.5 m f
0 g
70.5 180.5 m 61.605 177.484 l 54.078 183.102 l 54.199 173.711 l 46.531 
168.289 l 55.5 165.5 l 58.289 156.531 l 63.711 164.199 l 73.102 164.078 
l 67.484 171.605 l h
70.5 180.5 m S
0 0 1 rg
210.5 150.5 m 192.637 159.316 l 189.77 179.031 l 175.863 164.766 l 156.23
 168.133 l 165.5 150.5 l 156.23 132.867 l 175.863 136.234 l 189.77 121.969
 l 192.637 141.684 l h
210.5 150.5 m f
0 g
210.5 150.5 m 192.637 159.316 l 189.77 179.031 l 175.863 164.766 l 156.23
 168.133 l 165.5 150.5 l 156.23 132.867 l 175.863 136.234 l 189.77 121.969
 l 192.637 141.684 l h
210.5 150.5 m S
0 1 0 rg
300.5 90.5 m 279.695 93.363 l 270.262 112.121 l 261.109 93.223 l 240.352
 90.043 l 255.5 75.5 l 252.105 54.777 l 270.621 64.688 l 289.281 55.059 
l 285.574 75.727 l h
300.5 90.5 m f
0 g
300.5 90.5 m 279.695 93.363 l 270.262 112.121 l 261.109 93.223 l 240.352
 90.043 l 255.5 75.5 l 252.105 54.777 l 270.621 64.688 l 289.281 55.059 
l 285.574 75.727 l h
300.5 90.5 m S
0.113725 0.890196 0.815686 rg
250.5 150.5 m 241.605 147.484 l 234.078 153.102 l 234.199 143.711 l 226.531
 138.289 l 235.5 135.5 l 238.289 126.531 l 243.711 134.199 l 253.102 134.078
 l 247.484 141.605 l h
250.5 150.5 m f
0 g
250.5 150.5 m 241.605 147.484 l 234.078 153.102 l 234.199 143.711 l 226.531
 138.289 l 235.5 135.5 l 238.289 126.531 l 243.711 134.199 l 253.102 134.078
 l 247.484 141.605 l h
250.5 150.5 m S
0.54902 0.243137 0.866667 rg
210.5 70.5 m 204.547 73.438 l 203.59 80.012 l 198.953 75.254 l 192.41 76.379
 l 195.5 70.5 l 192.41 64.621 l 198.953 65.746 l 203.59 60.988 l 204.547
 67.563 l h
210.5 70.5 m f
0 g
210.5 70.5 m 204.547 73.438 l 203.59 80.012 l 198.953 75.254 l 192.41 76.379
 l 195.5 70.5 l 192.41 64.621 l 198.953 65.746 l 203.59 60.988 l 204.547
 67.563 l h
210.5 70.5 m S
0.5 0.5 370 220 re S
Q Q
showpage
%%Trailer
end
%%EOF

%%EndDocument
 @endspecial 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
0 0 0.25 0 TeXcolorcmyk 13639 16653 a Fe(Figure)371 b(1:)p
1 TeXcolorgray 370 w(Sta)-31 b(rs.)p 1 TeXcolorgray 1
TeXcolorgray 1 TeXcolorgray -6788 17643 a
SDict begin H.S end
 -6788 17643
a -6788 17643 a
SDict begin H.R end
 -6788 17643 a -6788 17643 a
SDict begin [/View [/XYZ H.V]/Dest (fig:Stars) cvn /DEST pdfmark end
 -6788 17643
a 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
-2721 20051 a Ff(Sho)-20 b(rt)235 b(Name)471 b(\(F)-59
b(AST)q(\))p 1 TeXcolorgray 1 TeXcolorgray 15593 20051
a
SDict begin H.S end
 15593 20051 a 1 TeXcolorgray Ff(Sho)-20 b(rt)235 b(Title)p
1 TeXcolorgray 18800 19590 a
SDict begin H.R end
 18800 19590 a 18800 20051
a
SDict begin [/Color [.5 .5 .5]/H /O/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 18800 20051 a 1 TeXcolorgray 1 TeXcolorgray 15424 w
Ff(Ma)-20 b(rch)236 b(17,)f(2021)p 1 TeXcolorgray 1646
w(6)117 b(/)h(7)p 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 1 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -6899
-8111 a
SDict begin H.S end
 -6899 -8111 a -6899 -8111 a
SDict begin H.R end
 -6899 -8111 a -6899
-8111 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation7) cvn /DEST pdfmark
end
 -6899 -8111 a -6899 -8111 a
SDict begin H.S end
 -6899 -8111 a -6899
-8111 a
SDict begin H.R end
 -6899 -8111 a -6899 -8111 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 -6899 -8111 a 0 0
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
-8000 20346 a

 -8000 20346 a -8000 20346 a


 pgfo

 255.12138 453.54913 0.0 0.0 pgfe

 clip

 newpath

 255.12138 453.54913 pgfVrgb 0.0 0.4 0.4 0 0.2 0.2 0 pgfshade  pop

 pgfc


 1 TeXcolorgray
1 TeXcolorgray 42394 20346 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 42394 20346 a 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
0 0 0.25 0 TeXcolorcmyk 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 0 0 0.25 0 TeXcolorcmyk
0 0 0.25 0 TeXcolorcmyk -7055 -5660 a Fi(References)p
0 0 0.25 0 TeXcolorcmyk 0 0 0.25 0 TeXcolorcmyk 0 0 0.25 0
TeXcolorcmyk 1 TeXcolorgray 1 TeXcolorgray -6788 -4838
a
SDict begin H.S end
 -6788 -4838 a -6788 -4838 a
SDict begin H.R end
 -6788 -4838 a -6788 -4838
a
SDict begin [/View [/XYZ H.V]/Dest (beamerbibKnuth92) cvn /DEST pdfmark
end
 -6788 -4838 a 0 0 0.25 0 TeXcolorcmyk 1 TeXcolorgray
0 0 0.25 0 TeXcolorcmyk 1929 x Fh([1])p 1 TeXcolorgray
0 0 0.25 0 TeXcolorcmyk 607 w(D.E.)403 b(Knuth,)h Fb(T)-101
b(w)-34 b(o)405 b(notes)e(on)i(notation)p Fh(,)e(Amer.)h(Math.)g
(Monthly)419 b Fa(99)403 b Fh(\(1992\),)i(403\025422.)p
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
1 TeXcolorgray -2721 20051 a Ff(Sho)-20 b(rt)235 b(Name)471
b(\(F)-59 b(AST)q(\))p 1 TeXcolorgray 1 TeXcolorgray
15593 20051 a
SDict begin H.S end
 15593 20051 a 1 TeXcolorgray Ff(Sho)-20
b(rt)235 b(Title)p 1 TeXcolorgray 18800 19590 a
SDict begin H.R end
 18800
19590 a 18800 20051 a
SDict begin [/Color [.5 .5 .5]/H /O/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 18800 20051 a 1 TeXcolorgray 1
TeXcolorgray 15424 w Ff(Ma)-20 b(rch)236 b(17,)f(2021)p
1 TeXcolorgray 1646 w(7)117 b(/)h(7)p 1 TeXcolorgray
1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray 1 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
